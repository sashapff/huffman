 <ch is: the number of threads.ed: rgs->close_fd)d_stream.XXXXXXXse_fd)rgs->close_fd)d_stream.XXXXXXobject <am.XXXXXXrreads...) in object <eption with description " threads._fd_ == -1lose(args->close_fd)yte object <f s.hich is: .XXXXXXreads.red_stream.XXXXXXstream.XXXXXX <lose(args->close_fd)e object < substring of yte object <threads.hdir("reads.Xer of threads. of  == -1reads.xecve( of _fd_ == -1ected lose(args->close_fd)d: = -1er of threads.
 of etected -byte object <reads.XXXXX... s._fd_ == -1/tmp/captured_stream.XXXXXX red_stream.XXXXXX/captured_stream.XXXXXXt the number of threads. aptured_stream.XXXXXXch is: hdir("se(args->close_fd)rgs->close_fd)s. of threads.etect the number of threads.02X) failed: XXXse(args->close_fd)-1ted ring of eption with description "reads.lose(args->close_fd) is: f threads.ads.se_fd)-byte object <s: ch is: _fd). rgs->close_fd)xception with description "e object <mber of threads.ads.XXXer of threads. ed: 02Xlose_fd)am.XXXXXX) failed: r..) in  <reads. eption with description "02Xad_fd_ == -1se_fd)etected  <. rXXXe(. hdir(" <
t the number of threads.er of threads.ir(" failed: eption with description "
failed: etect the number of threads.ed: ("lose_fd)s: ) failed: 02Xread_fd_ == -1d)read_fd_ == -1xecve(ct <XXXXX-byte object <reads.. ect the number of threads.read_fd_ == -1xecve(ted number of threads.in reads.f threads.e object <rgs->close_fd)(" exception with description "ted d number of threads.d xception with description "ted failed: se(args->close_fd) failed: lose(args->close_fd)reads.ch is: object <se(args->close_fd)XXXXXthreads. ...) in  ...) in the number of threads.d).XXXXXXs->close_fd)eption with description "xception with description ") failed: d_stream.XXXXXX is: d: mber of threads.tured_stream.XXXXXXect the number of threads.se_fd) etect the number of threads.XXXXXs.d_ == -1XXXXXeption with description "etected string of -1ad_fd_ == -1_fd)xception with description "the number of threads._fd_ == -1string of d)..) in  of threads.yte object <ad_fd_ == -1etect the number of threads.f threads.s->close_fd)led: : e(XXXXXrads.d_ == -1read_fd_ == -1ng of xecve(etected string of  exception with description "in ..) in reads.threads.e object <aptured_stream.XXXXXXect the number of threads./captured_stream.XXXXXXt reads.f threads.= -102XX) failed: rgs->close_fd)er of threads.etect the number of threads. of threads.-byte object <) in = -1) failed: d:  ...) in XXXXXthreads.: in  == -1 reads.XXXd ed: e number of threads.f f threads.ct <not xception with description "hdir(". am.XXXXXX_fd)d)lose_fd)ct <ream.XXXXXXreads.mp/captured_stream.XXXXXXin d -byte object <ads. detect the number of threads.s.se(args->close_fd)iled: d_stream.XXXXXXd_stream.XXXXXXstring of  detect the number of threads.se_fd)cve( == -1eption with description "se_fd)hich is: etected 
/tmp/captured_stream.XXXXXXad_fd_ == -1not L"the number of threads.reads.X failed: xecve(er of threads.e number of threads.02Xect the number of threads.d) reads. ...) in eption with description "aptured_stream.XXXXXXthreads.ad_fd_ == -1(args->close_fd). e(ir("
 failed: X... d_ == -1not red_stream.XXXXXXled: the number of threads. < of X.XXXXXX failed: iled: ted read_fd_ == -1hich is:  ...) in t hich is: am.XXXXXXailed: lose_fd) substring of the number of threads.-1ject <red_stream.XXXXXX>close_fd)ct <se(args->close_fd)etected number of threads.in ailed: .XXXXXXXXXXXL" <s->close_fd)XXXXXect the number of threads.eption with description "object <not (args->close_fd)-1-1) in /tmp/captured_stream.XXXXXXX/tmp/captured_stream.XXXXXXject <object <am.XXXXXX < exception with description "rXXX. ) in . XXXXX_fd)_fd) of threads.++ exception with description "er of threads.ch is:  ..) in s: /tmp/captured_stream.XXXXXX) failed: threads.threads.yte object <mber of threads.: eption with description "not cve(xception with description "reads.s: >close_fd)er of threads.reads.cve(object <= -1..) in lose(args->close_fd) == -1iled: threads.hich is: object <mp/captured_stream.XXXXXXd  is: lose_fd)tured_stream.XXXXXX>close_fd)read_fd_ == -1in in d  ject <reads.d_stream.XXXXXXthreads.the number of threads. . : L"yte object <mp/captured_stream.XXXXXXhdir("string of string of  == -1hich is: stream.XXXXXX02Xmber of threads.se(args->close_fd)led:  t  == -1++ exception with description ".XXXXXX ...) in  yte object < is: ng of  exception with description "s: ads.mber of threads.ubstring of se(args->close_fd)lose_fd)t the number of threads.red_stream.XXXXXXnumber of threads.ring of lose(args->close_fd)e object < exception with description "ads.eption with description " ted  led: rch is: not etect the number of threads.s: .XXXXXXtured_stream.XXXXXX/tmp/captured_stream.XXXXXXct <02Xobject <xception with description "se(args->close_fd)d: lose(args->close_fd)ect the number of threads.yte object <etect the number of threads.ch is: d_ == -1mber of threads.: object <XXXrreads.tured_stream.XXXXXXreads.e number of threads.xecve( is: XXXXXtured_stream.XXXXXXlose_fd)mp/captured_stream.XXXXXXad_fd_ == -1: red_stream.XXXXXXject <s: ) in ring of 02Xe(ubstring of failed: ed: L"-1 object <f read_fd_ == -1mp/captured_stream.XXXXXX(" ...) in = -1lose(args->close_fd)ct <lose(args->close_fd)++ exception with description "ed:  failed:  -1f lose_fd)string of ring of f s: ) failed: iled: xecve(e( xception with description "threads.ir("ad_fd_ == -1 detect the number of threads.= -1..) in >close_fd)XXXd)..) in lose(args->close_fd)rgs->close_fd)ected ... se_fd)the number of threads.threads.led: ream.XXXXXXxecve(/tmp/captured_stream.XXXXXXe number of threads._fd)X of t ring of ram.XXXXXXread_fd_ == -1ject <_fd_ == -1threads.reads.ir("string of ) in ads.object <d: ads.d_ == -1in  failed: ("number of threads.mber of threads. e number of threads.stream.XXXXXXstream.XXXXXX_fd)reads.ject <d XXXt number of threads.am.XXXXXXad_fd_ == -1xception with description "reads.yte object <e(iled:  detect the number of threads.led: reads.) failed: d_stream.XXXXXX-byte object <cve(number of threads.: XXXected  not lose(args->close_fd)yte object <-byte object < of ct <ads.threads.02Xir("read_fd_ == -1etect the number of threads.(args->close_fd)rs: mber of threads.-byte object <e object <reads.ng of hich is: t the number of threads.(args->close_fd)) in se(args->close_fd)ailed: L" lose(args->close_fd)("XXXXXads.t the number of threads.xecve(etected ubstring of ..) in ads.ir("in  of se(args->close_fd)er of threads.stream.XXXXXXect the number of threads.mp/captured_stream.XXXXXXtured_stream.XXXXXXd)ads. of  ..) in ir("rgs->close_fd)xception with description " <in not t XXXXXobject <iled: d)ected eption with description "string of s->close_fd).XXXXXX 02XX/captured_stream.XXXXXXring of lose_fd) ...) in d_ == -1d: red_stream.XXXXXX: e(lose_fd)number of threads.ads...) in ject <_fd)ream.XXXXXXmp/captured_stream.XXXXXXect the number of threads.e(rX of ed: threads..XXXXXX++ exception with description "ream.XXXXXXcve(tured_stream.XXXXXX == -1d_stream.XXXXXXir("e(02Xect the number of threads.L" exception with description "the number of threads.string of mp/captured_stream.XXXXXXe number of threads.(args->close_fd)in .XXXXXXhdir("s.s->close_fd)d_stream.XXXXXX is:  aptured_stream.XXXXXX..) in mber of threads.(">close_fd)ring of ++ exception with description " substring of read_fd_ == -1aptured_stream.XXXXXXetect the number of threads...) in d)= -1ng of ads.X("iled: stream.XXXXXXcve(.XXXXXXhdir("_fd)) failed: ad_fd_ == -1se_fd)threads.d_ == -1r_fd)
t the number of threads.ected : 
ailed: lose(args->close_fd)led: hich is: read_fd_ == -1e object <stream.XXXXXX <) in cve(in read_fd_ == -1 er of threads.L"ect the number of threads.se_fd)_fd)s.cve( of ted ream.XXXXXXs.string of rect the number of threads.) in : ... hich is: . reads.= -1-1: ..) in in read_fd_ == -1ads.ect the number of threads.... ct <failed: d)iled: ("object <cve(rgs->close_fd)iled:  iled: the number of threads.++ exception with description "rgs->close_fd)d) ...) in d_stream.XXXXXXect the number of threads.etected aptured_stream.XXXXXX of threads.mp/captured_stream.XXXXXXXXXXX exception with description "/captured_stream.XXXXXXram.XXXXXXthreads. substring of not ... cve(e( <t xception with description "iled: ubstring of d_stream.XXXXXX(args->close_fd)number of threads.yte object <tured_stream.XXXXXXe object <eption with description "ted s: ubstring of ring of XXXXXd_stream.XXXXXXream.XXXXXX("d: Xxception with description "..) in XXXmp/captured_stream.XXXXXXs: t the number of threads.) in  == -1.  ailed: t the number of threads.) failed:  of threads. X-byte object <) in /tmp/captured_stream.XXXXXXer of threads.iled: d_stream.XXXXXX tured_stream.XXXXXX. d)failed: ads.am.XXXXXX++ exception with description "aptured_stream.XXXXXXch is:  failed: ... ct < detect the number of threads. ..) in t the number of threads.etected cve(ject <_fd_ == -1red_stream.XXXXXXs.:  exception with description "xception with description "threads.ect the number of threads..XXXXXX.XXXXXXstream.XXXXXX 
ad_fd_ == -1er of threads.lose(args->close_fd)object <= -1reads.xception with description "..) in  yte object <s: threads.reads.hich is: the number of threads.iled: ch is: xecve(ng of  == -1ailed:  substring of e object <..) in s.number of threads.se_fd)iled: aptured_stream.XXXXXXstring of iled: the number of threads. of threads.aptured_stream.XXXXXX/captured_stream.XXXXXXnot ct <s: mber of threads.) in = -1d_ == -1object <xception with description "number of threads.am.XXXXXXf e(hdir("ring of eption with description "in t XXXXXstream.XXXXXXetect the number of threads.(args->close_fd)string of ("Xam.XXXXXXs.f threads.L"ct <-byte object <string of mp/captured_stream.XXXXXXad_fd_ == -1d_stream.XXXXXXream.XXXXXX>close_fd)string of  of rgs->close_fd)ad_fd_ == -1led: ads.number of threads. d_stream.XXXXXX.XXXXXX: Xetect the number of threads.ng of etected XXX/tmp/captured_stream.XXXXXXetected ream.XXXXXXad_fd_ == -1XXXXX_fd_ == -1 of string of s. d) of mber of threads.XXX("d: ads. etect the number of threads.L"-1red_stream.XXXXXXng of aptured_stream.XXXXXX of X detect the number of threads. <reads. of -1ed:  failed: mp/captured_stream.XXXXXXam.XXXXXXer of threads. cve(er of threads.reads.cve( .XXXXXX) failed: ream.XXXXXXnumber of threads.d: red_stream.XXXXXXad_fd_ == -1read_fd_ == -1ads.
aptured_stream.XXXXXX
ected d_stream.XXXXXX
ct <etect the number of threads.hich is: f er of threads.ads.ch is: ("ir("ads.xecve(string of d)stream.XXXXXXthe number of threads.d: cve(/captured_stream.XXXXXXd: f threads. substring of ads.ailed: tured_stream.XXXXXXthe number of threads.led:  exception with description "
ir("d: d)("_fd)ailed: /captured_stream.XXXXXX-1threads.ect the number of threads.eption with description "ct <eption with description "rgs->close_fd)("e(... ad_fd_ == -1) in led:  ) in failed: xecve(threads.-byte object <f threads.hdir("reads.ed: . failed:  failed: lose_fd)number of threads.... ) in _fd)iled: se_fd)threads.  == -1XXXXXxception with description ": se(args->close_fd)ct < is: s: ... etected t the number of threads.s: d  of threads.rted  substring of s.am.XXXXXXe object <... mp/captured_stream.XXXXXXtured_stream.XXXXXXect the number of threads. failed: f threads.rread_fd_ == -1threads. string of : threads.XXX/captured_stream.XXXXXXXXXXX substring of  XXXred_stream.XXXXXXs.am.XXXXXXd: (">close_fd)hdir("number of threads.hich is: ch is: _fd) <reads.e number of threads._fd)(args->close_fd)string of am.XXXXXXct <mber of threads.lose(args->close_fd) er of threads.) failed: etect the number of threads.ject <XXX.XXXXXXnumber of threads.) in e number of threads.t the number of threads.se_fd)d)XXX..) in /tmp/captured_stream.XXXXXX02Xreads.f  ...) in Xected  <f eption with description "ream.XXXXXXnot  ...) in d_ == -1XXXXXXch is: ubstring of (") in reads.++ exception with description "number of threads. ...) in >close_fd) of number of threads.hich is:  substring of ted xecve(ubstring of s: t the number of threads.02Xxecve(e(ring of  of threads.f threads.d:  detect the number of threads. of yte object <yte object <(" <string of hich is: >close_fd)re number of threads.) failed: ++ exception with description "ject <f mber of threads.er of threads.= -1not lose_fd)red_stream.XXXXXXe(s->close_fd)ubstring of e number of threads. == -1 mber of threads.yte object <d_ == -1rads.e number of threads.ailed: -1(args->close_fd)_fd_ == -1-byte object <failed: (args->close_fd)xecve(reads.lose_fd)XXXXXse(args->close_fd)/tmp/captured_stream.XXXXXXiled: number of threads.threads.... e(.XXXXXXiled: the number of threads.mp/captured_stream.XXXXXX02Xstream.XXXXXX/tmp/captured_stream.XXXXXXs: reads.etect the number of threads.-1ring of tured_stream.XXXXXXred_stream.XXXXXXse(args->close_fd)mp/captured_stream.XXXXXXailed: led: L"d: ... s.
reads.xception with description "reads.t  02XXd_stream.XXXXXXXream.XXXXXXX-1.XXXXXXad_fd_ == -1Xthreads. of threads.e(threads.f  failed: e object <tured_stream.XXXXXXads.in red_stream.XXXXXX of am.XXXXXXstring of ... ad_fd_ == -1d e(. cve(xception with description "_fd_ == -1) failed: cve((": s.ed: . object <t ailed:  == -1_fd_ == -1ad_fd_ == -1++ exception with description "red_stream.XXXXXX of d_stream.XXXXXXrXXXXX(args->close_fd) substring of ed: am.XXXXXX detect the number of threads.led: red_stream.XXXXXXetect the number of threads.d: cve(XXXXXe number of threads.threads.e number of threads.threads.string of  detect the number of threads. substring of s.ailed: s.. read_fd_ == -1 <ted _fd_ == -1d f 02X++ exception with description "se_fd)02X-byte object <failed: /tmp/captured_stream.XXXXXXam.XXXXXXs.XXXXXXled: ted e(.XXXXXX("ir(".XXXXXXad_fd_ == -1 of threads.yte object <ad_fd_ == -1s: the number of threads./captured_stream.XXXXXXd_stream.XXXXXX:  is: ... d_stream.XXXXXXd_stream.XXXXXXd se(args->close_fd) of iled: t the number of threads.mp/captured_stream.XXXXXXrd)in ) in rXted  ch is: -byte object <-byte object <_fd)e number of threads./tmp/captured_stream.XXXXXX) failed: ailed: /tmp/captured_stream.XXXXXXe number of threads...) in e object <e object <... ++ exception with description "reads./tmp/captured_stream.XXXXXXhdir("d_ == -1 ...) in hich is: reads.02X) in >close_fd)ted _fd_ == -1rgs->close_fd)mp/captured_stream.XXXXXXcve(s->close_fd)read_fd_ == -1 d s.lose_fd)rgs->close_fd) of led: ject <reads.t . xecve(XXXXX failed: etected s.etect the number of threads.ject </captured_stream.XXXXXXaptured_stream.XXXXXXam.XXXXXX) in red_stream.XXXXXXd_stream.XXXXXX= -1stream.XXXXXXXected  read_fd_ == -1lose_fd)reads.object <d_stream.XXXXXXd_ == -1s: (args->close_fd) == -1se(args->close_fd)threads..XXXXXXs:  led: ) failed: XXXXXaptured_stream.XXXXXXs: ads.XXXXXobject <d: L"mp/captured_stream.XXXXXXtured_stream.XXXXXXads.-1iled: failed:  ...) in s. == -1read_fd_ == -1threads. s->close_fd)= -1
e object <not  failed: d: ++ exception with description "e object < threads.d tured_stream.XXXXXX) in L"d:  s->close_fd) ...) in tured_stream.XXXXXXe number of threads.yte object <ream.XXXXXX of se(args->close_fd)("d_stream.XXXXXX failed: : s->close_fd)f threads.ream.XXXXXXse_fd) Xse_fd)mber of threads._fd)xception with description "ject <XXXXX 02XXXXXX_fd_ == -1ring of X. rgs->close_fd)ring of  detect the number of threads.f threads.s->close_fd)ring of (args->close_fd)lose_fd)stream.XXXXXX substring of hdir("d)t the number of threads.>close_fd)e number of threads.ject <(args->close_fd)ject <threads.yte object < failed: ject <ir("..) in  detect the number of threads.t the number of threads.: se_fd)-byte object <string of t ... 02Xse(args->close_fd)ads.lose(args->close_fd)...  substring of  ...) in  substring of -byte object <cve(mp/captured_stream.XXXXXXd)er of threads.lose(args->close_fd)  detect the number of threads.iled: -1mp/captured_stream.XXXXXXtured_stream.XXXXXXeption with description ": ject <ng of ted  <read_fd_ == -1rng of etected Xd  is: ) failed: xecve( detect the number of threads.... lose_fd)s->close_fd)d string of _fd_ == -1-1) failed: xecve(++ exception with description ">close_fd) detect the number of threads.hich is: lose_fd)stream.XXXXXXthreads.e(reads..XXXXXXstring of  of threads.:  detect the number of threads. ...) in .XXXXXX..) in d_stream.XXXXXXir("e object </tmp/captured_stream.XXXXXXhich is:  <r is: xception with description "d_ == -1 == -1ted  of threads.s->close_fd) of threads.s.ir("aptured_stream.XXXXXXmp/captured_stream.XXXXXXected ++ exception with description "/tmp/captured_stream.XXXXXXng of ject <number of threads.ted lose_fd)ads.++ exception with description " detect the number of threads.s->close_fd)s.lose_fd)ch is:  of threads.reads.ng of Xream.XXXXXXream.XXXXXXhdir(": = -1read_fd_ == -1xecve(reads.ubstring of ubstring of  X substring of lose_fd)am.XXXXXXlose_fd)ect the number of threads.ir("XXXXXnumber of threads. >close_fd)ected s.... (args->close_fd) of threads. of threads. ch is: rf iled: yte object < == -1 failed: s.f threads..XXXXXX) in ads.ted red_stream.XXXXXXhdir("in led: er of threads.threads.d: : eption with description "ads.led: lose_fd)/tmp/captured_stream.XXXXXXse_fd)lose(args->close_fd)r <number of threads. detect the number of threads.e(02Xt the number of threads.etected hich is: ads.e number of threads.lose(args->close_fd)X) in XXX of string of ads.ect the number of threads.hich is: the number of threads.ted s:  failed: : Xmber of threads.= -1ailed: XXXiled: ed: reads.d_stream.XXXXXXd_stream.XXXXXXe object <object <d)_fd_ == -1am.XXXXXXf etect the number of threads.++ exception with description "ted XXXXXhich is: t iled: s.aptured_stream.XXXXXXs.f threads.s->close_fd)xecve(ject <lose(args->close_fd) is: ++ exception with description " == -1object <e object <reads.ir("ected ("xception with description "ch is: s.in . XXXXXse_fd)eption with description "not ads.... cve(threads..XXXXXXthreads.number of threads.mber of threads.ng of ct <s:  substring of d)d)ect the number of threads.rXxecve( ... er of threads..XXXXXXring of led: number of threads.se(args->close_fd) ...) in  ...) in s.e number of threads. of ted in  failed: ads.ubstring of threads.failed: xecve( /captured_stream.XXXXXXe object <ream.XXXXXXt the number of threads.cve( exception with description "ream.XXXXXX/captured_stream.XXXXXX: xecve(>close_fd)am.XXXXXXse(args->close_fd)r is: (args->close_fd)er of threads.etected ubstring of number of threads.L"reads.ad_fd_ == -1ct <02Xiled: xecve(XXXs. detect the number of threads.lose(args->close_fd)s->close_fd)mber of threads.ch is: string of 02XL"threads.-byte object <s: threads.ected etect the number of threads.t the number of threads.f threads.aptured_stream.XXXXXXd)am.XXXXXXX of threads.etected lose(args->close_fd)cve( detect the number of threads.am.XXXXXXmp/captured_stream.XXXXXXads.lose_fd)the number of threads.) failed:  not d ect the number of threads.L"ailed: d: se_fd)string of ) failed: f xception with description " failed:  detect the number of threads.ject <threads.= -1ailed: stream.XXXXXXmp/captured_stream.XXXXXXread_fd_ == -1iled: ring of d)object <= -1mber of threads.ed:  ...) in -1XXXcve(t  of threads.ct <string of not f threads.hdir("-1 is: ring of d ir("iled: ring of /captured_stream.XXXXXXd)d)f threads.d)aptured_stream.XXXXXXstring of threads. failed: f threads.ch is: s->close_fd)eption with description "lose_fd)... se_fd).  lose_fd)ad_fd_ == -1ubstring of t ed: yte object <s.Xnot f mber of threads.eption with description "s->close_fd)eption with description "ads.. not se_fd)e object <cve(se_fd)XXXads.. threads.d_ == -102Xaptured_stream.XXXXXX
... not _fd)= -1failed: t e number of threads.
ring of lose(args->close_fd)er of threads.threads._fd_ == -1ch is: e object <Xd _fd_ == -1t number of threads.d_ == -1 failed: the number of threads.s: ads.t not  substring of Xyte object </captured_stream.XXXXXXs->close_fd)cve(ed: xception with description " detect the number of threads.Xect the number of threads. exception with description "d_stream.XXXXXXed: d) ng of hdir("f threads.se_fd)/tmp/captured_stream.XXXXXXd ted  of threads.
_fd)se_fd)s.lose_fd)number of threads. <: er of threads.object <L">close_fd)etected  <iled: ads.s:  substring of ng of read_fd_ == -1 ads. string of reads._fd)hich is: ect the number of threads.in s->close_fd)ect the number of threads.ted ++ exception with description "..) in in tured_stream.XXXXXX: ad_fd_ == -1mp/captured_stream.XXXXXXstream.XXXXXXmber of threads. ...) in number of threads.XXXd: mber of threads.read_fd_ == -1yte object <object <s.hdir("
 is: mp/captured_stream.XXXXXXir("s->close_fd)reads.Xs->close_fd)stream.XXXXXX of threads.mber of threads.ct <se_fd) s.threads.not d in failed: the number of threads.ream.XXXXXX failed: am.XXXXXXaptured_stream.XXXXXXject <xecve(lose(args->close_fd)lose_fd) ...) in ch is: ed: se_fd)threads.ng of . etect the number of threads.lose_fd) detect the number of threads.lose_fd)eption with description "mber of threads.("02X of s->close_fd) == -1ch is: tured_stream.XXXXXXam.XXXXXX++ exception with description "t  ...) in ect the number of threads. <(" exception with description "/tmp/captured_stream.XXXXXXreads.(args->close_fd)threads.yte object <02Xream.XXXXXXreads.d : ected reption with description "xecve( rgs->close_fd) substring of f ect the number of threads.mp/captured_stream.XXXXXX++ exception with description "f threads.s.d reads.etected ring of  <cve(ad_fd_ == -1ected 02Xs: ring of t reads.mber of threads.xecve(eption with description "/tmp/captured_stream.XXXXXXcve(in L"s->close_fd)-1d_ == -1  failed: number of threads.d_stream.XXXXXX
threads.f -byte object <number of threads.ailed: .XXXXXXthe number of threads.cve(ring of xception with description "...  == -1..) in f threads.er of threads.t ected ed: the number of threads.ect the number of threads.s.Xf threads. d  of threads.t   detect the number of threads.am.XXXXXXe object <d: read_fd_ == -1XXXeption with description "ct <e(/captured_stream.XXXXXXse_fd) <) failed: etected lose(args->close_fd)tured_stream.XXXXXX == -1ring of red_stream.XXXXXXt reads.s.ring of mber of threads.in lose(args->close_fd)ad_fd_ == -1the number of threads.d: am.XXXXXXs: led: se(args->close_fd)failed:  detect the number of threads.in er of threads.lose_fd) == -1e( == -1f /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXed: aptured_stream.XXXXXXads.hdir("t the number of threads...) in reads.threads.-1ir("-1am.XXXXXXng of threads..  ...) in d_ == -1hdir(" of etect the number of threads.s: s. of threads._fd)= -1s:  ) in _fd)stream.XXXXXXstream.XXXXXXmp/captured_stream.XXXXXX exception with description "-1ads.hich is: ct <) in red_stream.XXXXXXstring of the number of threads.mber of threads. <failed: rads.iled:  ...) in mp/captured_stream.XXXXXXed: not s.ream.XXXXXX..) in .XXXXXXread_fd_ == -1 == -1 ...) in in ch is: e object <etect the number of threads.s->close_fd)d: Xer of threads. is: ch is: ch is: not ("hich is: d)d_ == -1 == -1cve( <ject <ads.lose(args->close_fd)d_stream.XXXXXXhich is: ailed: eption with description "t the number of threads.d_stream.XXXXXXreads./tmp/captured_stream.XXXXXXthreads. of threads.ailed: threads.iled: (args->close_fd) exception with description "yte object <se(args->close_fd) of >close_fd)d ... d: t s.mber of threads.stream.XXXXXXse(args->close_fd)d_stream.XXXXXXe(threads.mp/captured_stream.XXXXXX failed: .XXXXXX/captured_stream.XXXXXXled: = -1iled: tured_stream.XXXXXXch is: ("ads.ads.eption with description "red_stream.XXXXXX failed: e object <f threads.t the number of threads./tmp/captured_stream.XXXXXX++ exception with description "
yte object <led: ..) in yte object <threads.s->close_fd)XXX
e( exception with description "d_stream.XXXXXX) in hdir("ad_fd_ == -1xecve(am.XXXXXXL" s.threads.ect the number of threads.number of threads.Xread_fd_ == -1 exception with description "iled:   == -1tured_stream.XXXXXX... -byte object < substring of  failed: stream.XXXXXXreads.e number of threads. exception with description "hdir("lose(args->close_fd)stream.XXXXXXs.d_stream.XXXXXXe object <("ailed: lose_fd)yte object <_fd)ect the number of threads.reads.. ed: tured_stream.XXXXXX  == -1("not  exception with description "xecve(se(args->close_fd)_fd)ads.ad_fd_ == -1Xhich is: er of threads.d object <string of etect the number of threads. of se(args->close_fd) <am.XXXXXXthreads.led: threads.mp/captured_stream.XXXXXXs: >close_fd)XXX) in iled: ct <. ng of se(args->close_fd)red_stream.XXXXXX: number of threads.) failed: d_ == -1d)XXXXXt the number of threads.ch is: aptured_stream.XXXXXXnumber of threads.stream.XXXXXX.XXXXXX= -1) in s->close_fd)ected  <hdir(" of threads. ir(". e number of threads.s.: rted ++ exception with description "02X: d_ == -1Xe object <number of threads. failed: in (args->close_fd)ads.t reads.d) ch is: aptured_stream.XXXXXX <d hdir(" is: ject < detect the number of threads.ch is: ir("threads.mber of threads.... = -1er of threads. detect the number of threads.ads.etect the number of threads.++ exception with description "stream.XXXXXXream.XXXXXXtured_stream.XXXXXXhdir("am.XXXXXXe(d_stream.XXXXXXxecve(se_fd)) in  ...) in xecve(..) in ect the number of threads.d_stream.XXXXXXXXXXXed: XXXam.XXXXXX(": d_stream.XXXXXXmp/captured_stream.XXXXXXe object <ads.s->close_fd)d_ == -1. aptured_stream.XXXXXXstream.XXXXXXmber of threads.cve( mber of threads.tured_stream.XXXXXXhich is: mp/captured_stream.XXXXXX exception with description "lose_fd) substring of iled: /captured_stream.XXXXXXmp/captured_stream.XXXXXXetected 
ed: ected etect the number of threads.hich is: am.XXXXXX of threads.er of threads.led:  er of threads.rgs->close_fd): d  ...) in ct <ailed: s. failed: ++ exception with description "ads.failed: ed:  s.xecve(ubstring of er of threads...) in e(X substring of ++ exception with description "
cve(se(args->close_fd)reads. == -1cve(/tmp/captured_stream.XXXXXX...  of threads.led:  of ng of 02Xng of  substring of ... ("ct <-1reads.: d_stream.XXXXXXad_fd_ == -1failed: reads.eption with description "ng of ected  02X == -1f threads.failed: read_fd_ == -1threads.02XL" == -1etected ... ad_fd_ == -1xecve(object <ir("lose_fd)ubstring of se_fd)d s->close_fd) is: s.ected  failed: etect the number of threads. of XXXXXobject < of /captured_stream.XXXXXXeption with description "tured_stream.XXXXXXng of .XXXXXXled: _fd_ == -1 ...) in ted >close_fd)s: am.XXXXXXled: hich is: threads.d_ == -1lose(args->close_fd)s.am.XXXXXXse_fd)s->close_fd)XXXXXir("ject <aptured_stream.XXXXXXct <not ... (args->close_fd)eption with description "etect the number of threads.led: _fd_ == -1L"f  d: >close_fd)d_ == -1d_ == -1cve(not f XXXxception with description "/captured_stream.XXXXXXd ailed: cve( is: xception with description "
f threads...) in iled: tured_stream.XXXXXXs.. hdir("lose_fd)ream.XXXXXXd reads.er of threads.e(eption with description "xecve(t  <s->close_fd)("t number of threads.etect the number of threads.ring of ailed: ch is: ailed: d_stream.XXXXXX  is:  <in rgs->close_fd)er of threads.s: 
 se_fd)ring of d)/tmp/captured_stream.XXXXXXs: ads.string of ject <ct <s: ("d_stream.XXXXXX(args->close_fd)/captured_stream.XXXXXXred_stream.XXXXXXXXXXXL"-1hdir("xecve( is: /captured_stream.XXXXXX failed: er of threads.d_ == -1d rgs->close_fd) == -1red_stream.XXXXXXthreads.yte object <++ exception with description "f threads.iled: . object <ads.ads.se(args->close_fd) substring of (args->close_fd)...  ...) in ubstring of s->close_fd) X exception with description "ads.t the number of threads.eption with description " of  substring of stream.XXXXXXxception with description "ad_fd_ == -1threads..XXXXXXXd_ == -1failed: ...  exception with description " ...) in er of threads.XXXXXlose_fd)e object <ed: ng of not  read_fd_ == -1ect the number of threads.ected yte object <X/tmp/captured_stream.XXXXXX am.XXXXXX f threads.eption with description "aptured_stream.XXXXXXd)L" detect the number of threads.ring of iled: s: X-1yte object <lose_fd).XXXXXX(args->close_fd)ch is: XXXXXXcve(ailed: cve(Xf threads.object <se_fd)("L"/tmp/captured_stream.XXXXXXect the number of threads.not  failed: cve(d: _fd_ == -1ream.XXXXXXthreads.s.etect the number of threads. ("d)++ exception with description "lose(args->close_fd)led: not 
 == -1mber of threads.not (args->close_fd)led: ir("-byte object <se_fd)ad_fd_ == -1L"/captured_stream.XXXXXX/captured_stream.XXXXXXf threads.e object <eption with description " failed: xception with description "xception with description "etected XXXXXetect the number of threads.reads. /tmp/captured_stream.XXXXXX_fd_ == -1in Xe( <stream.XXXXXXetect the number of threads.
ads.) in  substring of /tmp/captured_stream.XXXXXXreads. failed: ... ream.XXXXXX /tmp/captured_stream.XXXXXX: led: ject <led: _fd_ == -1 substring of  exception with description " substring of etect the number of threads.. e( == -1yte object <... s: cve(d_ == -1/captured_stream.XXXXXX of  ng of hich is: d hich is: 
cve(object <yte object < of threads.lose(args->close_fd)ng of (args->close_fd)ed: d:  detect the number of threads.eption with description " of threads.xecve(++ exception with description "am.XXXXXXxception with description " ject <cve(ected L"ubstring of ted Xeption with description "ream.XXXXXX of threads.ected xception with description "eption with description " == -1d)ubstring of  of threads. d 02Xstream.XXXXXXXubstring of lose(args->close_fd)aptured_stream.XXXXXXd_ == -1Xthe number of threads.xception with description "stream.XXXXXXf threads.>close_fd)reads.s.string of /tmp/captured_stream.XXXXXX++ exception with description "ected e(tured_stream.XXXXXXse(args->close_fd)not ed: number of threads.++ exception with description "string of  substring of s.... d_ == -1ted reads.read_fd_ == -1 == -1the number of threads. substring of  substring of eption with description "d)led: hich is: .  <er of threads.object <++ exception with description "led: ads.ring of er of threads.t the number of threads. is: ad_fd_ == -1 exception with description "hdir("_fd_ == -1the number of threads.  <-1ad_fd_ == -1..) in ) in t the number of threads.stream.XXXXXX of 
ailed: ("/tmp/captured_stream.XXXXXXtured_stream.XXXXXX..) in e(ad_fd_ == -1ject <not not L" exception with description "iled: ect the number of threads. /captured_stream.XXXXXXmp/captured_stream.XXXXXXXXXled: L"iled:  exception with description "XXXXX. ..) in _fd): 02Xfailed:  xception with description "reads.am.XXXXXX failed: mber of threads.lose_fd)tured_stream.XXXXXXstring of s->close_fd)mp/captured_stream.XXXXXX/captured_stream.XXXXXXreads.e number of threads.t the number of threads.= -1 failed: not xception with description "... object <ir("ted object <ng of am.XXXXXXxecve(ject <XXXect the number of threads.e object <rgs->close_fd)s.the number of threads.++ exception with description "xception with description "e(
(args->close_fd)(args->close_fd)number of threads./tmp/captured_stream.XXXXXXam.XXXXXXailed: ream.XXXXXXyte object <
 failed:  substring of Xch is: in _fd_ == -1ed: ad_fd_ == -1L"..) in reads.reads.
ailed: cve(/tmp/captured_stream.XXXXXXd)tured_stream.XXXXXXf threads.... ubstring of the number of threads.) failed: t the number of threads.e object <.XXXXXXe(... lose_fd)hdir("("mber of threads.se(args->close_fd) substring of aptured_stream.XXXXXX>close_fd)) in object <e object < <e number of threads. exception with description "in ch is: ir("..) in reads.s->close_fd)s..XXXXXX threads.. ads.threads.e number of threads.se_fd)d)string of  substring of  failed:  <t  == -1d)d: yte object <red_stream.XXXXXXream.XXXXXXthreads.ect the number of threads.not xecve(++ exception with description "("... f ng of ads./captured_stream.XXXXXXng of ed: s:  failed: t the number of threads.(args->close_fd): ected t the number of threads. of XXXXXstream.XXXXXX(" ...) in ring of ed: ch is: xecve(tured_stream.XXXXXXd: failed: se(args->close_fd) ...) in t the number of threads.ected object <d)yte object <d_ == -1red_stream.XXXXXXse_fd)t the number of threads.ject <etected xecve(ect the number of threads.(args->close_fd)..) in XXXXX) failed: ng of 02X s: not .  <the number of threads.: XXXs: threads.aptured_stream.XXXXXXcve(_fd_ == -1
ected red_stream.XXXXXXhich is: XXXXXream.XXXXXXL"ected d:  <) failed: : e number of threads.ected /captured_stream.XXXXXX tured_stream.XXXXXXXXXXX>close_fd)ject <s: ubstring of lose_fd)d :  e(etected read_fd_ == -1ads.in ads.not led: ir(" detect the number of threads.mber of threads.se(args->close_fd)(args->close_fd)ream.XXXXXXiled:  failed: _fd)L") failed: ubstring of ected X substring of 
/tmp/captured_stream.XXXXXXailed:  se_fd)threads.tured_stream.XXXXXX..) in >close_fd)xception with description "t rxception with description "ct <t  of  == -1iled: -1 exception with description "s:  detect the number of threads.(args->close_fd)(args->close_fd)string of  ...) in rgs->close_fd)eption with description "number of threads.etect the number of threads.er of threads.
threads.am.XXXXXXmber of threads.f ) in  XXX.XXXXXXaptured_stream.XXXXXXs. -1re(read_fd_ == -1failed: t ring of >close_fd)d (" ...) in ted number of threads.= -1d: _fd_ == -1/tmp/captured_stream.XXXXXXXd red_stream.XXXXXXt _fd_ == -1read_fd_ == -1rgs->close_fd)threads.ted ring of rs.not  exception with description "ailed: d Xnot string of yte object <etected the number of threads.e object <L":  of threads.se(args->close_fd)mp/captured_stream.XXXXXXect the number of threads.ailed: se(args->close_fd)) in d: hich is: L" failed: yte object <e object <d_stream.XXXXXXX of /captured_stream.XXXXXXhich is: /tmp/captured_stream.XXXXXXe object <. ng of d_stream.XXXXXXhich is: etect the number of threads...) in number of threads.iled: ected L" s.. t mber of threads.string of  substring of read_fd_ == -1) in hdir("_fd)("ads.d_ == -1reads.mp/captured_stream.XXXXXX/captured_stream.XXXXXXled:  of iled: e number of threads.
object <ir("yte object <ubstring of  of threads.lose(args->close_fd)d_stream.XXXXXXf ) in ream.XXXXXXse_fd)ed: ed: ..) in eption with description "led: f er of threads.ect the number of threads.>close_fd)not 02Xstring of hdir("string of ect the number of threads.) failed: aptured_stream.XXXXXXthreads.cve(d_stream.XXXXXXs._fd)threads.) in (args->close_fd)in ng of number of threads...) in etect the number of threads.stream.XXXXXXd)ected xecve(-byte object <e(xception with description "string of ad_fd_ == -1= -1 detect the number of threads.mber of threads. is: ream.XXXXXXled: e(ng of s.iled: ect the number of threads. of se_fd)_fd_ == -1/tmp/captured_stream.XXXXXX_fd)stream.XXXXXXe(ch is: object <: eption with description "_fd)ng of ct <number of threads.  is: read_fd_ == -1hich is: aptured_stream.XXXXXXd lose_fd)ubstring of ) in XXXng of aptured_stream.XXXXXXXXXXXs->close_fd)ailed: ng of ads.-byte object <ads. ...) in  <: (args->close_fd)am.XXXXXXream.XXXXXXe object </tmp/captured_stream.XXXXXXnot lose_fd)hich is: iled: _fd) substring of ads...) in e object <se(args->close_fd)lose(args->close_fd)stream.XXXXXXected . rgs->close_fd)led: not d: d_stream.XXXXXX. se_fd) of _fd_ == -1-byte object < exception with description "X substring of object <led: ) in er of threads.ad_fd_ == -1s: ect the number of threads. <s->close_fd)e number of threads. failed:  >close_fd)d_stream.XXXXXXtured_stream.XXXXXX("string of t the number of threads.e number of threads.am.XXXXXX failed: ubstring of xecve(>close_fd)f threads.se(args->close_fd)ch is: rstream.XXXXXX: the number of threads. detect the number of threads.d 
s->close_fd)("reads.ch is: se_fd) ...) in s: lose(args->close_fd)_fd)XXX xception with description "s. == -1_fd)led: se(args->close_fd)ream.XXXXXXs->close_fd): /captured_stream.XXXXXXaptured_stream.XXXXXX exception with description " <ct <L"se_fd)ject <_fd_ == -1s.ected ch is: XXXXXreads.ads.ject <ads.Xfailed: 02Xse(args->close_fd)(args->close_fd).XXXXXXd_stream.XXXXXXch is:  s.ject <am.XXXXXXmp/captured_stream.XXXXXXiled: ubstring of t the number of threads.threads. of threads.(args->close_fd)/captured_stream.XXXXXXed: = -1ir(" detect the number of threads.yte object <d_stream.XXXXXX..) in e(ads.threads.red_stream.XXXXXXct <rgs->close_fd) == -1ads. d_stream.XXXXXX. mp/captured_stream.XXXXXXled: ailed: mp/captured_stream.XXXXXX++ exception with description "number of threads.("++ exception with description "... lose_fd)ailed: xception with description "..) in -1not stream.XXXXXXXXXXXect the number of threads.se_fd)-byte object <ng of d_stream.XXXXXXad_fd_ == -1s.reads.ailed: ct <(args->close_fd)rgs->close_fd)ads.xception with description "ring of threads.xception with description "threads.) failed: d_ == -1ir("led: eption with description "f threads. of threads.ject <xception with description "ir("02Xer of threads.s->close_fd)d)iled:  t ect the number of threads. of hdir("-1ed:  detect the number of threads.ads.ct < object <xception with description "e((": reads.ected  of threads.yte object <f threads.++ exception with description "(args->close_fd)_fd)number of threads.the number of threads. exception with description " of  substring of t failed: >close_fd)Xeption with description "mp/captured_stream.XXXXXX exception with description "etect the number of threads.) in f se_fd)reads.= -1yte object <se(args->close_fd)d_ == -1hdir(" of threads. of mber of threads.X... e object <cve(Xch is: ch is: t threads.reads.f _fd)++ exception with description "not  <) failed:  s.failed: s: = -1mber of threads.hich is: in Xled: threads.ch is: e object <-byte object <Xred_stream.XXXXXXlose(args->close_fd) is: 
xception with description "s.mber of threads.ng of ) in failed: ++ exception with description "ject < of mber of threads.lose_fd) exception with description "ct <read_fd_ == -1
 of yte object </tmp/captured_stream.XXXXXXrobject <++ exception with description "..) in eption with description " <led: se_fd)in s.ng of s.hich is: ring of not f threads.ads. <hich is:  of threads.. L" detect the number of threads.etected  substring of .XXXXXX -byte object <ject <failed: ect the number of threads. substring of ..) in t ubstring of the number of threads. substring of  ...) in  d)failed:  exception with description "reads.tured_stream.XXXXXXX-1-byte object <read_fd_ == -1...  is: s. of (args->close_fd)er of threads.s: L"stream.XXXXXX is: -byte object <ch is: XXXXXxecve( substring of string of -1_fd_ == -1/tmp/captured_stream.XXXXXXted -1se(args->close_fd)eption with description "ad_fd_ == -1etect the number of threads.yte object <XXXXXer of threads.ject <stream.XXXXXXubstring of threads.f threads.failed: se_fd)not  </tmp/captured_stream.XXXXXXring of .  exception with description "red_stream.XXXXXX-1 is: ct <mp/captured_stream.XXXXXX object <ring of iled: -1/captured_stream.XXXXXXnot s: lose(args->close_fd)etected r++ exception with description "d_stream.XXXXXXted stream.XXXXXXe object <>close_fd) of rgs->close_fd)object <_fd_ == -1e object <f threads. of e object <se_fd)ed: ted mp/captured_stream.XXXXXXthreads.ailed: er of threads.ring of rgs->close_fd)rgs->close_fd)red_stream.XXXXXX02Xxecve(am.XXXXXXject <threads.lose_fd)eption with description "reads.:  (args->close_fd)f ad_fd_ == -1mp/captured_stream.XXXXXXiled: rL"led: hdir("mp/captured_stream.XXXXXXetected e object <ad_fd_ == -1. (args->close_fd)f ("-1: hdir("++ exception with description "threads.ir("ailed: ads.xception with description "
stream.XXXXXX.XXXXXXd_ == -1s:  exception with description "Xled: xecve( is: _fd)lose(args->close_fd)er of threads. of threads.X-byte object <rgs->close_fd)object <red_stream.XXXXXXetect the number of threads.mber of threads. failed:  substring of read_fd_ == -1number of threads. of threads.t e object <string of s.XXXs. detect the number of threads.("led: = -1r++ exception with description "hdir("ailed:  ...) in failed:  >close_fd)02XXXXXXstring of L") failed: number of threads.ject <f threads.-byte object <lose(args->close_fd)ubstring of reads.lose_fd) <("ailed: mp/captured_stream.XXXXXX detect the number of threads.s.se_fd)ed: er of threads.failed: t ("s: s.hdir("ads. substring of t the number of threads.ng of reads.-1) in : ring of led: in  <hdir("threads..XXXXXXL"d threads.eption with description "hdir("ed: object <not t the number of threads.d_stream.XXXXXX ...) in am.XXXXXXf am.XXXXXXd the number of threads.se(args->close_fd)XXXXX++ exception with description "aptured_stream.XXXXXXreads.s.not d_stream.XXXXXXct <ject <. d: number of threads.ir("d)ubstring of am.XXXXXXmp/captured_stream.XXXXXXL"reads.threads.= -1 XXXXXd: read_fd_ == -1 == -1_fd)string of   substring of /captured_stream.XXXXXX
-byte object <) failed: ring of etect the number of threads.... rgs->close_fd)f threads.t d_stream.XXXXXX < failed: : se(args->close_fd)xecve(ch is: in mber of threads.ect the number of threads.02Xin d_ == -1 ryte object <... stream.XXXXXXf threads.t the number of threads.se_fd) ...) in ads.led: tured_stream.XXXXXXe() failed: s: s: f ("_fd)ream.XXXXXXfailed: d_ == -1iled:  read_fd_ == -1Xect the number of threads.02Xs: _fd_ == -1red_stream.XXXXXXL"_fd_ == -1ject <d_stream.XXXXXXcve(("L"lose(args->close_fd)ted d_stream.XXXXXXer of threads.eption with description "ect the number of threads.led:  substring of number of threads.ir("the number of threads.not ++ exception with description " the number of threads./tmp/captured_stream.XXXXXXre number of threads.d: d_ == -1ect the number of threads.d_ == -1 substring of L"not tured_stream.XXXXXXhdir("threads.e( .XXXXXXobject <ads.read_fd_ == -1f >close_fd)er of threads.d) hdir("ch is: -byte object <se(args->close_fd)lose(args->close_fd)failed: reads.reads...) in 02Xstring of  <cve(mp/captured_stream.XXXXXXd_ == -1.XXXXXXe number of threads.in ring of ng of  failed: ... e( is: ailed: am.XXXXXXthreads.xception with description "f ailed: d: tured_stream.XXXXXXthe number of threads.ring of se_fd)ject <am.XXXXXXetected threads. is: X-byte object < <the number of threads.e( of  ...) in d_ == -1 detect the number of threads.("e number of threads.etect the number of threads.se(args->close_fd)ads.02Xected threads.Xir("failed: ailed: ++ exception with description "se_fd)(args->close_fd)am.XXXXXXthreads.d r substring of mber of threads.(args->close_fd)XXXXXXled: ct <d: etect the number of threads.("red_stream.XXXXXXreads.object <ad_fd_ == -1Xer of threads.not threads.se(args->close_fd) of threads.
the number of threads.the number of threads.hich is: threads.iled: X_fd_ == -1ads.am.XXXXXXd led:  d)mber of threads.d_stream.XXXXXXXXXrXad_fd_ == -1d the number of threads.. >close_fd)e object <ed: mber of threads.t the number of threads.s: = -1hich is: _fd)lose(args->close_fd)failed: s->close_fd)e object <er of threads.t the number of threads.e object <ed: d ed: XXXcve(am.XXXXXXin ailed: s->close_fd)ct <rgs->close_fd)hdir("ted reads.>close_fd)rgs->close_fd)e(reads.led: ring of ted s.red_stream.XXXXXX failed: ch is: rgs->close_fd)ng of -1>close_fd)= -1 is: failed: in rer of threads.f >close_fd). ailed: XXXXX/captured_stream.XXXXXXer of threads.t object <tured_stream.XXXXXXthreads.hdir("er of threads.) failed: am.XXXXXXaptured_stream.XXXXXXed: e( substring of lose_fd)ected number of threads.read_fd_ == -1L"ect the number of threads.>close_fd)yte object <the number of threads.ed: rreads._fd)/tmp/captured_stream.XXXXXXted reads.reads.the number of threads.= -1ect the number of threads.rreads.
hich is: threads.rgs->close_fd)L" ected .XXXXXXmber of threads.d_stream.XXXXXXng of d: XXXXXXXXd_ == -1ailed: hdir("hich is: XXXXXd_ == -1xecve(am.XXXXXXstring of . -1led: ..) in reads.) in etect the number of threads...) in se(args->close_fd)L" failed: failed: aptured_stream.XXXXXXads.ad_fd_ == -1e object < d_ == -1ected ch is: ++ exception with description " == -1= -1>close_fd)lose(args->close_fd) is: mber of threads.02Xd)mp/captured_stream.XXXXXX02Xlose(args->close_fd)/tmp/captured_stream.XXXXXXs. <s: threads.s: ("ject <re number of threads.Xs.stream.XXXXXXxecve(>close_fd)f t s: ect the number of threads.aptured_stream.XXXXXX substring of t the number of threads.tured_stream.XXXXXXstring of reads. ...) in XXXXe object < of threads.. ads.cve(/tmp/captured_stream.XXXXXXs...) in ) failed:  substring of ailed:  exception with description "(args->close_fd) of ng of XXXxecve(s->close_fd)/tmp/captured_stream.XXXXXX++ exception with description "er of threads.read_fd_ == -1  ...) in e(d_ == -1object <e object <f e(t the number of threads.-1aptured_stream.XXXXXXcve(er of threads.f threads.... ads.ailed: threads. substring of xception with description " == -1iled: lose(args->close_fd)f threads.) in : ubstring of ect the number of threads.stream.XXXXXXt the number of threads.ir(" failed: . ) failed:  substring of ("ect the number of threads.failed: string of etected f cve(reads.... string of yte object <hich is: t the number of threads.rgs->close_fd)ct < /captured_stream.XXXXXXnot 
-1ring of  rgs->close_fd)_fd)XXXXXs.ad_fd_ == -1s->close_fd)r_fd)..) in Xad_fd_ == -1 read_fd_ == -1d)Xed: stream.XXXXXXin tured_stream.XXXXXXe number of threads.lose(args->close_fd)stream.XXXXXXe(reads.etected  aptured_stream.XXXXXXe(e object <number of threads.reads.ed: d: = -1threads.ected ect the number of threads.led: ) in Xmp/captured_stream.XXXXXX ...) in .XXXXXXe(d_ == -1ads..XXXXXX of threads.f threads.t  of threads.Xam.XXXXXX..) in f tured_stream.XXXXXX. ct <threads./captured_stream.XXXXXX . ct <XXX) in s. <XXXd object <am.XXXXXXrgs->close_fd)ad_fd_ == -1e number of threads.) failed: ed:  exception with description "se(args->close_fd)lose(args->close_fd)tured_stream.XXXXXXXXXstream.XXXXXXct <= -1 substring of read_fd_ == -1yte object <++ exception with description "am.XXXXXXd)red_stream.XXXXXX/captured_stream.XXXXXXcve(f threads.ads.>close_fd)failed: er of threads.= -1 of e object <stream.XXXXXXir("... XXXXXthreads. ubstring of ubstring of d_stream.XXXXXXyte object <string of not iled: : ailed: ("object <etected threads.mber of threads.) failed: etected d_stream.XXXXXX... etect the number of threads.ted ng of  substring of read_fd_ == -1) in read_fd_ == -1 failed: -byte object <s.= -1d_ == -1 eption with description "Xd)ected etect the number of threads.) in e object <red_stream.XXXXXXubstring of e number of threads.e(  mp/captured_stream.XXXXXXed: s.tured_stream.XXXXXX is: t the number of threads.iled: aptured_stream.XXXXXX) in stream.XXXXXXe(e object <red_stream.XXXXXXd_stream.XXXXXXin t d_ == -1   s./captured_stream.XXXXXXf threads.failed: s->close_fd) == -1am.XXXXXX) failed: ring of f s->close_fd)reads.t f 02X ...) in ailed: number of threads.ubstring of -1am.XXXXXXobject <yte object <not ++ exception with description "in -byte object <Xxecve(. /captured_stream.XXXXXXected ads.XXXread_fd_ == -1ir("reads.ject <hich is: = -1..) in  <read_fd_ == -1ed: red_stream.XXXXXXe object <02Xnumber of threads.f in ("xception with description "the number of threads.se_fd)d_stream.XXXXXXtured_stream.XXXXXXL"etected rxecve(d e number of threads.d: not e object <threads. <d_stream.XXXXXX... ch is:  of ring of ad_fd_ == -1se_fd)ad_fd_ == -1number of threads.am.XXXXXXt the number of threads.ream.XXXXXXir("d: _fd_ == -1f ("se_fd)s.eption with description "-1 .XXXXXXted reads.reads..XXXXXX d not object <s.threads. etect the number of threads.eption with description "iled: XXXXXreads./captured_stream.XXXXXX : 
e(ream.XXXXXX/tmp/captured_stream.XXXXXXng of hich is: >close_fd)red_stream.XXXXXXads.e number of threads. detect the number of threads.. ..) in t the number of threads.read_fd_ == -1ject </tmp/captured_stream.XXXXXX in d_ == -1string of >close_fd) XXXXX of  <Xd_stream.XXXXXXmp/captured_stream.XXXXXXted etect the number of threads.XXXt eption with description "hdir("-1string of _fd)etected reads.: XXX-1 of threads./tmp/captured_stream.XXXXXXd_stream.XXXXXX  substring of hdir("threads. ...) in  failed: . ) in rgs->close_fd)in lose(args->close_fd)("e object <ct <..) in tured_stream.XXXXXXthreads.. er of threads._fd)lose_fd)yte object <d) exception with description " < of .XXXXXX == -1xception with description "s: s->close_fd)ed: ad_fd_ == -1xecve(red_stream.XXXXXXstream.XXXXXXred_stream.XXXXXX  ...) in hich is: etect the number of threads.XXXetect the number of threads./captured_stream.XXXXXXnot  of threads.t s.lose_fd)++ exception with description "reads.s.ed:  exception with description "e object <ed: = -1reads. detect the number of threads.stream.XXXXXXmp/captured_stream.XXXXXXnot tured_stream.XXXXXXted >close_fd)ch is: er of threads.e number of threads. of e( ) in d_stream.XXXXXXrgs->close_fd) of threads.) in ads.mber of threads.ected threads.f read_fd_ == -1se(args->close_fd)-1d_ == -1-1reads.f threads.d_ == -1/captured_stream.XXXXXX hdir(". string of mber of threads.in e(f ailed: ads.se_fd) of threads. f threads. detect the number of threads.e number of threads.read_fd_ == -1ream.XXXXXXhdir("ads. substring of ir("XXXXX exception with description "stream.XXXXXXad_fd_ == -1s->close_fd) d_stream.XXXXXX-1threads.ject <ch is: am.XXXXXXe object <d_stream.XXXXXX of threads.string of ) in (args->close_fd)("xecve(led: d threads.d)/captured_stream.XXXXXXetected hich is: etect the number of threads.(args->close_fd)er of threads.f XXX ...) in stream.XXXXXXir("etected ("/tmp/captured_stream.XXXXXXer of threads. exception with description "mber of threads.ch is: ("_fd)hdir("
yte object <threads.ubstring of ng of :  ...) in mber of threads.led:  of = -1cve(the number of threads.: ed: t  s. e number of threads.xecve(..) in ect the number of threads.lose(args->close_fd) failed: ads.d: d: ) in threads.not ted threads.t .XXXXXX_fd_ == -1ir("s: ct <s->close_fd)am.XXXXXX of threads.lose_fd) substring of the number of threads.XXXXXrject <mp/captured_stream.XXXXXXream.XXXXXXct <.  failed: d_ == -1yte object <string of threads.) failed: ad_fd_ == -1d: re object < is:  failed: 
xception with description "ect the number of threads.d:  of Xthreads.ed: ("iled: tured_stream.XXXXXXch is: aptured_stream.XXXXXXs->close_fd)cve(in threads.ads. substring of string of ("XXXXXX: ubstring of ch is:  exception with description "ed:  of threads. ...) in er of threads.threads.hich is:  failed: d_ == -1er of threads. == -1hdir("read_fd_ == -1etect the number of threads.the number of threads.ject <ir(" failed: ir("XXXXX02Xd_ == -1rlose(args->close_fd) of reads.ir("se(args->close_fd)in  == -1lose(args->close_fd) exception with description "(args->close_fd)_fd)cve(ed: lose_fd)02Xt d_stream.XXXXXX/captured_stream.XXXXXX) failed: s.in led: lose_fd)ch is: read_fd_ == -1-1 exception with description "ir("etected se_fd) .XXXXXXam.XXXXXXir("yte object <ir("e number of threads.s. of XXXXXin  detect the number of threads.ect the number of threads.mp/captured_stream.XXXXXXd: tured_stream.XXXXXXlose_fd)e number of threads.-byte object <Xject <d)d)) failed: ads.object <d_stream.XXXXXXect the number of threads.(args->close_fd)tured_stream.XXXXXX02Xr... -byte object <("object <s.string of ring of d_stream.XXXXXXr exception with description "_fd_ == -1 exception with description "e number of threads.ject <d ch is:  is: d_ == -1ir("= -1cve( exception with description "se(args->close_fd)ir("rxecve(ream.XXXXXX == -1 == -1reads.ted stream.XXXXXXe( exception with description "  == -1e(hdir("= -1-byte object <ad_fd_ == -1eption with description ") in in rgs->close_fd)lose(args->close_fd)d_ == -1lose(args->close_fd)the number of threads.e object <ring of  failed: 02Xf ..) in (" of cve(ng of (" substring of etected read_fd_ == -1 of threads.reads.) in d: ch is: lose(args->close_fd)reads.xception with description "iled: hich is: ring of ir("threads.ed: ject <not se(args->close_fd)XXX is: >close_fd)ted  of XXXXXthe number of threads. er of threads.ch is: /captured_stream.XXXXXX of threads.failed: not ted -1. mber of threads.iled: s.iled: mber of threads.ads. of threads. of d_ == -1 of not ad_fd_ == -1r detect the number of threads.(args->close_fd)/captured_stream.XXXXXX-1 of threads.t the number of threads.XXXXXs.ct < se_fd)_fd_ == -1.XXXXXX is: se_fd)(args->close_fd)ng of d stream.XXXXXXted -1.XXXXXXd: r XXXads.e number of threads.mp/captured_stream.XXXXXX..) in reads.f threads.rled: ubstring of led: reads.XXX substring of ng of . mp/captured_stream.XXXXXXstream.XXXXXXe object <mber of threads.e object </tmp/captured_stream.XXXXXX++ exception with description ".XXXXXXr_fd_ == -1ect the number of threads.ir("xecve(s.>close_fd)/tmp/captured_stream.XXXXXX) in /tmp/captured_stream.XXXXXXlose_fd)aptured_stream.XXXXXX: >close_fd)02Xetect the number of threads.d_stream.XXXXXXfailed: e(am.XXXXXXXxception with description ">close_fd). s.>close_fd)) in ads. detect the number of threads.stream.XXXXXXch is: ads.d_ == -1 == -1lose_fd)se(args->close_fd)object <red_stream.XXXXXXXXXXXthreads.ring of d ream.XXXXXX(args->close_fd)ng of s->close_fd)the number of threads. is: tured_stream.XXXXXX..) in  detect the number of threads.>close_fd)d_ == -1red_stream.XXXXXXXXXXXf ) in XXXXX is: se_fd)) failed: t the number of threads.f ir("rfailed:  exception with description ") failed: ) in  d)XL"e(..) in ..) in ad_fd_ == -1 ted number of threads.d ch is: ct <d_stream.XXXXXXream.XXXXXXd: /tmp/captured_stream.XXXXXXect the number of threads..XXXXXX == -1threads.) failed: t am.XXXXXXct <>close_fd)am.XXXXXXxecve(number of threads.L"er of threads.) in  exception with description "ads.ct < failed: etect the number of threads.threads._fd)_fd)_fd)(args->close_fd)failed: e object <reads. is: failed:  of yte object <ads.
ect the number of threads.ring of iled: s.red_stream.XXXXXXs.threads.ject <aptured_stream.XXXXXXt the number of threads.t tured_stream.XXXXXXed: failed: s: mber of threads.threads.s: reads.number of threads.mp/captured_stream.XXXXXXs->close_fd)s. <L"string of se(args->close_fd)etect the number of threads.etected t cve( ject <d)XXX..) in hdir("stream.XXXXXXrgs->close_fd) not f threads.eption with description "mp/captured_stream.XXXXXX/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXstring of  ject <yte object <d_stream.XXXXXXobject <the number of threads.se_fd)mber of threads.ubstring of number of threads.rgs->close_fd)ect the number of threads.++ exception with description " <hich is: f threads.the number of threads.d)iled: ailed: (args->close_fd)ected hdir("t er of threads.se(args->close_fd)hdir(".  of in .XXXXXXnot  == -1etect the number of threads.s->close_fd)   s.hich is: Xs.d_stream.XXXXXXreads.d)f s->close_fd)cve(ubstring of ad_fd_ == -1
rgs->close_fd)ed: reads. == -1..) in rct <d_stream.XXXXXXtured_stream.XXXXXXs: d s.reads.in ubstring of ..) in object <eption with description "ng of xecve(ch is: . se(args->close_fd)ubstring of .XXXXXX_fd_ == -1 ...) in ads.) failed: threads.red_stream.XXXXXXads.in object <yte object <Xubstring of (args->close_fd)red_stream.XXXXXXs: mp/captured_stream.XXXXXXs.t not se_fd)= -1s.d_ == -1) failed: >close_fd) is: cve(>close_fd)object < of ng of d_ == -1number of threads.stream.XXXXXXd_stream.XXXXXXetect the number of threads..XXXXXXmber of threads. exception with description "
d_stream.XXXXXXring of d: ...  ...) in  ring of s.e() in ++ exception with description "d: not xception with description "
in e object <etect the number of threads.ring of the number of threads.... .XXXXXXstream.XXXXXX of threads.("lose(args->close_fd)red_stream.XXXXXXcve(t the number of threads.aptured_stream.XXXXXX exception with description ">close_fd)rgs->close_fd)d)f threads.eption with description "hich is: ream.XXXXXXf threads.f ng of e object < of aptured_stream.XXXXXXyte object <number of threads.ads.ject </captured_stream.XXXXXXf :  exception with description "er of threads.d:  ...) in >close_fd)ct <eption with description ": /captured_stream.XXXXXXads.etected ect the number of threads. <s->close_fd)) failed: :  of threads.t ... ... cve(lose(args->close_fd)hich is: er of threads.not led: ir("se_fd)iled:  >close_fd)-1/tmp/captured_stream.XXXXXXted etect the number of threads.hdir("not XXXXXlose_fd)= -1(args->close_fd)failed: X-byte object <_fd_ == -1threads.Xlose(args->close_fd)ad_fd_ == -1("++ exception with description "ch is: 
ailed: ) in ch is: e number of threads./captured_stream.XXXXXXyte object < == -1XXXXX detect the number of threads.tured_stream.XXXXXXubstring of reads.iled: f  ...) in  detect the number of threads.s: e number of threads. <d: ed: reads.ch is: tured_stream.XXXXXX) in ect the number of threads..  detect the number of threads.am.XXXXXXe object <ads.ads.XL" ch is: ected mber of threads. is:  ...) in 
>close_fd)lose(args->close_fd)e number of threads.ng of _fd_ == -1mp/captured_stream.XXXXXXer of threads.ed: se(args->close_fd)number of threads.eption with description "ads./tmp/captured_stream.XXXXXXf threads.mp/captured_stream.XXXXXXlose(args->close_fd)red_stream.XXXXXX ...) in rgs->close_fd)_fd_ == -1tured_stream.XXXXXX of mp/captured_stream.XXXXXX: d XXX>close_fd)_fd_ == -1t the number of threads. ... d_ == -1ct < <d)e object <ir("Xin hdir("hdir("(". ch is: ch is: rthreads.(args->close_fd) substring of in object <ect the number of threads.lose(args->close_fd)ubstring of Xreads.d)failed: the number of threads.ected ..) in er of threads.yte object <etected aptured_stream.XXXXXXaptured_stream.XXXXXX reads..XXXXXX failed: rs->close_fd)++ exception with description "e number of threads.d_ == -1the number of threads.rd_stream.XXXXXXring of ailed: yte object <) in _fd)
ject < <mber of threads.e object <se(args->close_fd) d_ == -1e object <mp/captured_stream.XXXXXXd_stream.XXXXXX <ir("rgs->close_fd)) failed: .XXXXXXxception with description "d_stream.XXXXXX02X.XXXXXXect the number of threads. string of d_ == -1. aptured_stream.XXXXXX <string of  number of threads. == -1ad_fd_ == -1-byte object <er of threads.the number of threads...) in iled: ("threads.the number of threads.f threads.f threads.string of ream.XXXXXX substring of s: /tmp/captured_stream.XXXXXX
se(args->close_fd)etected s.ream.XXXXXX
the number of threads.lose_fd)stream.XXXXXX>close_fd)ailed: ir("ject <etect the number of threads.reads. substring of  of s->close_fd)d:  detect the number of threads. ir("ected e number of threads.cve( < er of threads.(args->close_fd) 02Xe number of threads.not d -1d_stream.XXXXXXX-1XXXXX("lose_fd) Xe(ream.XXXXXXreads.tured_stream.XXXXXX lose(args->close_fd)rXXXected (args->close_fd)ads._fd) s->close_fd) substring of ++ exception with description "hdir("ch is:  <se(args->close_fd)tured_stream.XXXXXX of etected ring of t the number of threads.string of ailed: ch is: ) in _fd_ == -1etect the number of threads.stream.XXXXXXt e number of threads.Xtured_stream.XXXXXXd_stream.XXXXXXreads.not d)ected t  ailed: >close_fd). red_stream.XXXXXXe number of threads.L">close_fd)the number of threads.yte object <iled: iled: se(args->close_fd)tured_stream.XXXXXXt the number of threads.02Xailed:  is: ) in d am.XXXXXXng of e object < of threads. failed: d t e(threads.eption with description "mp/captured_stream.XXXXXXer of threads.... (args->close_fd) substring of lose(args->close_fd)_fd_ == -1d)f threads.hich is: e(yte object <f threads.ed: ected hdir("number of threads.: string of mber of threads._fd_ == -1e object <ject <t ..) in reads.aptured_stream.XXXXXXobject <ed: s.. ect the number of threads.lose_fd)ject <ir("d)red_stream.XXXXXXe number of threads.cve(xecve(e number of threads.
threads. of object <Xin L"se(args->close_fd)etected ed: ubstring of ch is: failed:  ads.not ("...  failed: e object < of threads.hdir("f  failed: etect the number of threads.ad_fd_ == -1er of threads.>close_fd)ected f er of threads.eption with description "d_stream.XXXXXXs->close_fd)ads.aptured_stream.XXXXXXse(args->close_fd)threads.(args->close_fd)d_stream.XXXXXX++ exception with description "XXXXXs.not d)threads.:  is: ads.se(args->close_fd)e(s.ring of ads.>close_fd)e(read_fd_ == -1lose(args->close_fd)ring of ad_fd_ == -1e object <d: reads.se_fd)ir("xception with description "failed:  detect the number of threads.("e( substring of ailed: ) in xecve(_fd)threads.... er of threads.ailed: stream.XXXXXX == -1yte object <
XXXXXs:  substring of ) failed: se_fd)ected s->close_fd)/tmp/captured_stream.XXXXXXiled: -1 detect the number of threads.++ exception with description "rgs->close_fd)/captured_stream.XXXXXXd_ == -1X-1ct <02Xs._fd_ == -1reads.++ exception with description "XXX of  of ring of _fd)se(args->close_fd) is:  == -1t the number of threads. failed: _fd_ == -1ream.XXXXXXrgs->close_fd) ted xception with description "etected  of threads. stream.XXXXXXir(" ...) in etect the number of threads.. reads.t the number of threads.ad_fd_ == -1  ject <t threads.ad_fd_ == -1ct <ubstring of yte object <ream.XXXXXXmp/captured_stream.XXXXXXt : object <e(++ exception with description "_fd_ == -1ream.XXXXXXads. exception with description "mp/captured_stream.XXXXXX-byte object <se_fd)not the number of threads.s->close_fd)ng of  detect the number of threads.++ exception with description "ect the number of threads.d)read_fd_ == -1. mber of threads.ed: ads.d_stream.XXXXXXe number of threads. of ng of -1: hich is: ad_fd_ == -1yte object < substring of lose(args->close_fd)(args->close_fd)rgs->close_fd)read_fd_ == -1s->close_fd) ring of rhdir("ailed: ailed: X ...) in ct </captured_stream.XXXXXXected etected in  failed: yte object <e number of threads. d failed: e object <) failed: s.ted XXXXXse(args->close_fd)s: not ) failed: (args->close_fd)d: se(args->close_fd)reads.stream.XXXXXX(args->close_fd)) in xecve(f threads.read_fd_ == -1se_fd)hdir(">close_fd) substring of ads.etected s: yte object <d: xecve(_fd)eption with description " detect the number of threads.e number of threads.s.threads.>close_fd)s.led: s->close_fd)s.t the number of threads.t the number of threads.rgs->close_fd)led: etected : etected XXXXXred_stream.XXXXXXX02Xtured_stream.XXXXXXreads./tmp/captured_stream.XXXXXXreads.ng of threads.ch is: xception with description " exception with description ">close_fd) <se(args->close_fd)etected  ct <se(args->close_fd)d_ == -1..) in iled: failed: er of threads.se(args->close_fd)xception with description "cve() failed:  of threads.led: t >close_fd)ed: iled: X-byte object <s: ("d_stream.XXXXXXd  .XXXXXXiled: er of threads...) in hdir("yte object </tmp/captured_stream.XXXXXXX of threads.-1++ exception with description "etected ream.XXXXXXyte object <ng of ected led: ad_fd_ == -1 is: .  of rled: etect the number of threads....  the number of threads.e(stream.XXXXXXct <
f threads.XXXXX>close_fd)the number of threads.iled: aptured_stream.XXXXXXstream.XXXXXXre object <ad_fd_ == -1... d_stream.XXXXXXer of threads./captured_stream.XXXXXXhdir("++ exception with description "d)ch is:  substring of er of threads._fd)Xstring of ed:  failed: rgs->close_fd)s.ected 02Xs: mber of threads. failed: f threads.in  substring of  substring of lose(args->close_fd)tured_stream.XXXXXXject <string of 
ect the number of threads.se(args->close_fd)ream.XXXXXXs: (args->close_fd). : >close_fd)) in :  failed: aptured_stream.XXXXXXthreads. <object < is: d_ == -1d /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXf threads.t the number of threads.ubstring of _fd)threads.cve(ads.ubstring of eption with description "etect the number of threads.e(02X/captured_stream.XXXXXXd)ed: led: 
led: ect the number of threads. d)= -1X..) in ..) in stream.XXXXXXailed: stream.XXXXXX/tmp/captured_stream.XXXXXXiled: ads.xecve(string of t se_fd) <reads./captured_stream.XXXXXXam.XXXXXXhich is:  ...) in s.threads.am.XXXXXXthe number of threads.xception with description "ream.XXXXXX("ream.XXXXXX) failed: e( reads. substring of stream.XXXXXX <f rgs->close_fd)led: d: 02Xhdir("d_ == -1e object <mp/captured_stream.XXXXXX of s.the number of threads.etect the number of threads. < of threads.>close_fd)++ exception with description "in ) failed: ed: L"ubstring of -byte object </captured_stream.XXXXXXads.t the number of threads.rgs->close_fd)) failed: t 
 substring of eption with description "the number of threads./tmp/captured_stream.XXXXXXject <iled: yte object <aptured_stream.XXXXXXs: ted xecve(..) in : ir("d_ == -1 of threads.xception with description "am.XXXXXXiled: ++ exception with description "_fd)string of hdir("not ads.etect the number of threads.se(args->close_fd)_fd) of threads.: xecve(rted XXX exception with description "t the number of threads.ream.XXXXXXiled: mber of threads.XXXam.XXXXXX) failed: ted ("L"mber of threads.threads.-1iled: e object < <ir("/tmp/captured_stream.XXXXXX exception with description "am.XXXXXXe number of threads.ir("++ exception with description "s.led: f ailed: X
ring of -1/tmp/captured_stream.XXXXXX substring of ++ exception with description " substring of  is: XXXXXd)ring of -byte object <Xch is:  02Xer of threads. ...) in ... ect the number of threads.++ exception with description " _fd_ == -1read_fd_ == -1.XXXXXXs.cve(cve(lose_fd)f threads.threads. of 
ad_fd_ == -1-1etect the number of threads.ect the number of threads.d: reads.d)s.ring of ads. ...) in ads.. XXXXX... s: object <mber of threads.-byte object <XXXXXaptured_stream.XXXXXXthreads.mp/captured_stream.XXXXXX_fd_ == -1e number of threads. of threads.ring of /tmp/captured_stream.XXXXXXfailed: ject <:  ...) in /captured_stream.XXXXXX of threads.red_stream.XXXXXXed: tured_stream.XXXXXX == -1xception with description "cve( se_fd)rgs->close_fd)XXX t the number of threads._fd_ == -1xception with description " of rgs->close_fd)ng of s.reads.ad_fd_ == -1threads.(args->close_fd)lose_fd)yte object <read_fd_ == -1 of threads.failed: d_stream.XXXXXXd_ == -1("... number of threads.cve(reads._fd_ == -1am.XXXXXX-1not X of L"hich is: xception with description " of d)xception with description "object <read_fd_ == -1 failed: number of threads.cve(lose(args->close_fd)>close_fd)e object <mber of threads.02X. lose(args->close_fd)d_ == -1s->close_fd) substring of ct <ected red_stream.XXXXXXcve(e number of threads.reads. of threads.ted . .XXXXXXf threads. substring of ubstring of Xr failed: ad_fd_ == -1 f threads. detect the number of threads.se(args->close_fd)e number of threads. stream.XXXXXXtured_stream.XXXXXXiled: ad_fd_ == -1(args->close_fd)
the number of threads.ed: object <mber of threads.: string of rgs->close_fd)t in er of threads.ng of lose(args->close_fd) of (args->close_fd) detect the number of threads.etect the number of threads.failed: ads.object <reads. ("ect the number of threads.aptured_stream.XXXXXXads.s->close_fd)ect the number of threads.xception with description "= -1lose_fd)stream.XXXXXX rgs->close_fd)f threads.) failed: s:  d_ == -1..) in  ...) in (args->close_fd)hdir("led:  hich is: t the number of threads.t s->close_fd)f threads.t the number of threads.t ch is: e object <reads._fd)se(args->close_fd) == -1ch is: ads.led: s.-byte object < substring of threads.cve(eption with description "led:  s->close_fd).XXXXXXyte object <ect the number of threads.d: ring of . ad_fd_ == -1ng of e object <e object < of -byte object <ad_fd_ == -1 of /tmp/captured_stream.XXXXXX) in ch is: e object <-1lose_fd) substring of object <e object <lose(args->close_fd)ject <("threads.XXXXXstream.XXXXXXhich is:  exception with description "threads.ad_fd_ == -1threads.ect the number of threads.r= -1d: 02X. XXXXXt the number of threads. is: ++ exception with description "er of threads.not  cve(ected XXX/tmp/captured_stream.XXXXXXlose(args->close_fd)... t s.s.read_fd_ == -102X: ryte object <e object <failed: e number of threads.XXXected se_fd)_fd_ == -1-byte object <read_fd_ == -1r= -1>close_fd)-byte object <reads.se_fd) failed: 
object < of ..) in d  failed: s->close_fd)ads.hich is: 02Xmber of threads.t eption with description "object <reads.ring of aptured_stream.XXXXXX
 Xmp/captured_stream.XXXXXXt the number of threads.) failed: ir("in  failed: se(args->close_fd) == -1the number of threads.etect the number of threads.mber of threads.cve(d: >close_fd)hich is: ) in  substring of aptured_stream.XXXXXX/tmp/captured_stream.XXXXXXthe number of threads.ect the number of threads.XXX_fd)("s: se(args->close_fd)rct < of threads.led: ted . e number of threads.ch is: led: led: 02Xd_ == -1.XXXXXX>close_fd)t se_fd)= -1ream.XXXXXXstream.XXXXXXred_stream.XXXXXX_fd_ == -1ected iled: ..) in e object <..) in reads.XXXect the number of threads._fd)threads.s.) in (args->close_fd)am.XXXXXXyte object <rgs->close_fd)(" xecve(f string of -byte object < substring of ng of d_stream.XXXXXX exception with description "ubstring of 02Xd:  exception with description "lose(args->close_fd)>close_fd)02Xmber of threads.s.02X: e object <ct <hdir("XXXect the number of threads.ect the number of threads.++ exception with description "lose(args->close_fd) of number of threads.ted er of threads...) in s->close_fd)se(args->close_fd) detect the number of threads....  the number of threads._fd)ject <ted object <Xs.ect the number of threads.e number of threads. ...) in _fd_ == -1 is:  of threads.e object <ect the number of threads.= -1etect the number of threads.read_fd_ == -1ads.aptured_stream.XXXXXX= -1xception with description " <s: the number of threads.d s.eption with description "-byte object <reads._fd_ == -1: ect the number of threads.t the number of threads.) in rads.t : reads.-byte object <t  exception with description "X) failed: the number of threads.mp/captured_stream.XXXXXXam.XXXXXX ...) in f  lose(args->close_fd)ed: ailed: threads.xception with description "("= -1d 02Xstream.XXXXXX: (args->close_fd)_fd_ == -1("threads.aptured_stream.XXXXXXhich is: Xd_ == -1object <in /tmp/captured_stream.XXXXXXs.reads.f am.XXXXXXir(" exception with description "reads.ir(". ailed: threads.xecve(d_ == -1yte object <
yte object <) failed: d) of led: yte object <ect the number of threads.e(threads.ed: t am.XXXXXXobject <rrgs->close_fd) ...) in cve(ubstring of s. number of threads.er of threads.eption with description "
ng of /tmp/captured_stream.XXXXXXs./captured_stream.XXXXXXcve(read_fd_ == -1threads. of _fd)in d)ads.string of lose(args->close_fd)etected . (args->close_fd)lose_fd)xception with description "_fd)XXXetect the number of threads.= -1ch is: se(args->close_fd)Xch is:  substring of cve(02Xs.t the number of threads.r... = -1s.threads.f threads.xecve( failed: iled: led:  detect the number of threads.read_fd_ == -1... ng of ject <lose(args->close_fd) is: d:  ...) in  == -1ng of ect the number of threads. XXXXX-byte object < failed: rgs->close_fd) ad_fd_ == -1XXXted  detect the number of threads.ailed: xecve(the number of threads. lose_fd)ect the number of threads.lose(args->close_fd)the number of threads.read_fd_ == -1= -1ted ch is: read_fd_ == -1threads.ted object <ch is: hich is: d_stream.XXXXXXe(in etect the number of threads.reads.read_fd_ == -1t d: ) in Xring of se(args->close_fd) ed: reads.ected d: d_stream.XXXXXX/captured_stream.XXXXXXt ir("eption with description "t the number of threads.) failed: mber of threads.ect the number of threads.ir("ream.XXXXXX(args->close_fd)++ exception with description "eption with description "red_stream.XXXXXXlose(args->close_fd) number of threads.f ected xception with description "ailed: s.iled: . ring of e(>close_fd) of threads.(args->close_fd)d: led: ..) in  not tured_stream.XXXXXX++ exception with description "f rhich is: in lose(args->close_fd)not ng of failed:  XXXect the number of threads.ed: t yte object <t se_fd)se_fd)d_ == -1ailed: ed: rgs->close_fd)XXXled: ailed: s.in rgs->close_fd)object < hdir("t the number of threads.L"f /tmp/captured_stream.XXXXXXlose_fd)ads.er of threads.ject <the number of threads.XXXstream.XXXXXXnumber of threads. etect the number of threads.++ exception with description "etect the number of threads.lose_fd)f d_stream.XXXXXXe(mber of threads. substring of xecve(mber of threads._fd) detect the number of threads.not -1 failed:  t the number of threads.ads.  detect the number of threads.d)reads. stream.XXXXXXfailed: d_ == -1failed: ) in /tmp/captured_stream.XXXXXXad_fd_ == -1) failed: lose(args->close_fd)ads.ubstring of d)iled: d_ == -1_fd_ == -1tured_stream.XXXXXXf threads.s.s->close_fd)ect the number of threads.the number of threads.Xect the number of threads.eption with description "string of object <t the number of threads.) in s->close_fd)e object </captured_stream.XXXXXXrgs->close_fd)d_ == -1ring of ..) in se(args->close_fd) failed: rream.XXXXXXrgs->close_fd)lose(args->close_fd) == -1etected reads.d_stream.XXXXXXt etected ads.ubstring of XXX ...) in 02Xed: e object <ads.ads.reads.lose_fd) ...) in :  ng of _fd_ == -1 <reads.etected e number of threads._fd_ == -1read_fd_ == -1mber of threads.threads.-byte object <eption with description "ads.ch is: eption with description ". ) failed: ring of se(args->close_fd)ject <) failed: d)xecve(d rer of threads.rgs->close_fd). ted led: xecve(s: ted XXXXX == -1threads.ad_fd_ == -1e number of threads.ailed: etected ring of d)d object <) in s.mp/captured_stream.XXXXXXt the number of threads.hich is: >close_fd)ubstring of etect the number of threads.read_fd_ == -1rL". aptured_stream.XXXXXXrstring of am.XXXXXXt ir("/tmp/captured_stream.XXXXXXXtured_stream.XXXXXXxception with description "ream.XXXXXXubstring of : threads.threads.f threads.ject < of d ...   lose(args->close_fd)e(xecve(e object <ct <t the number of threads.number of threads. is: ailed:  detect the number of threads.02X detect the number of threads.failed:  == -1-byte object <) in aptured_stream.XXXXXXled: >close_fd) exception with description "threads.e(number of threads./captured_stream.XXXXXXd  of threads. exception with description "number of threads.d)ng of  of s.XXX of /captured_stream.XXXXXXads.yte object <ads.) in cve(mber of threads. failed: e(. ) in ng of f threads.xception with description "++ exception with description "ed: aptured_stream.XXXXXXtured_stream.XXXXXXthe number of threads.ct <ch is: -1 er of threads.rthreads.XXXt the number of threads.aptured_stream.XXXXXXmp/captured_stream.XXXXXXf threads.(args->close_fd)d)e(hich is: ad_fd_ == -1se_fd)ch is: the number of threads.f er of threads.L"f mber of threads._fd_ == -1 ...) in /tmp/captured_stream.XXXXXXfailed: f threads. is: threads.read_fd_ == -1ubstring of d_ == -1L" failed: hich is: e number of threads.. ads.ir("XXXXXin ) in ject < exception with description " failed: -byte object <se_fd)xecve(s._fd)d_stream.XXXXXX is: s->close_fd). ted _fd_ == -1-1++ exception with description "se(args->close_fd)s->close_fd) ...) in object <etect the number of threads.-byte object <_fd)d)02Xs.am.XXXXXXnumber of threads.aptured_stream.XXXXXXrgs->close_fd)lose_fd)etected aptured_stream.XXXXXXXXXXXrgs->close_fd)hich is: ed: -byte object <(args->close_fd)e number of threads.d se_fd)aptured_stream.XXXXXXfailed: am.XXXXXXect the number of threads.reads.ubstring of stream.XXXXXXobject <.XXXXXXs->close_fd).XXXXXXer of threads.rgs->close_fd)rct <d ring of xecve(se(args->close_fd)_fd_ == -1led: .XXXXXXX= -1ject <: : etect the number of threads.iled: ailed: Xnumber of threads.t the number of threads.t eption with description "s: ailed: ch is: _fd)) failed: ng of iled: t _fd_ == -1-1/captured_stream.XXXXXXse_fd) failed: ubstring of  is:  substring of the number of threads.ect the number of threads. substring of rgs->close_fd)rgs->close_fd)ailed: t the number of threads.reads.led: ect the number of threads. of threads.e(XXXXXrch is: mp/captured_stream.XXXXXX(args->close_fd)threads.d eption with description "s.se(args->close_fd)e(ads.f d XXXXXf threads.: ads.s./captured_stream.XXXXXX..) in cve(red_stream.XXXXXXled:  s->close_fd) detect the number of threads.e object <_fd_ == -1s->close_fd)ailed: /tmp/captured_stream.XXXXXXd)not xception with description "_fd_ == -1XXXXXlose(args->close_fd)e(e object <e(..) in ed: X of threads.led:  failed: yte object < failed: aptured_stream.XXXXXXe object <string of the number of threads.= -1the number of threads. <s: se(args->close_fd)number of threads.ailed:  of ad_fd_ == -1am.XXXXXXnot er of threads.led: s->close_fd)ads.threads.++ exception with description "rgs->close_fd)not ject <s: t the number of threads.reads.>close_fd)mp/captured_stream.XXXXXX failed: .XXXXXX detect the number of threads.in er of threads.ted tured_stream.XXXXXXnumber of threads. of threads.f threads...) in number of threads.led: ng of red_stream.XXXXXXads.in t  failed: xception with description "the number of threads.++ exception with description "ed: threads.-1d_stream.XXXXXXer of threads.red_stream.XXXXXX/tmp/captured_stream.XXXXXXailed: ad_fd_ == -1d)tured_stream.XXXXXXetected ected ... ng of 
>close_fd)hdir(": xecve(hdir("not X02XX= -1s: rgs->close_fd)threads.(args->close_fd)the number of threads.XXXXXrgs->close_fd)in -1etect the number of threads.reads.d: ect the number of threads.s.am.XXXXXXetected d_stream.XXXXXXd) of threads.s.lose_fd)se_fd)... -1string of L" ...) in ject <..) in /captured_stream.XXXXXX++ exception with description "threads.
XXstream.XXXXXXected  of threads.iled:  == -1d /captured_stream.XXXXXX_fd_ == -1failed: ir("f threads.= -1("etect the number of threads.failed: ted in Xd reads.t the number of threads.ject <.  <(">close_fd)L"tured_stream.XXXXXXfailed: Xring of ... ream.XXXXXX == -1ected  exception with description "reads.d ng of ed: lose_fd) e object <XXXXX= -1e(er of threads.) in s: ect the number of threads.= -1s:  exception with description "...  failed: rgs->close_fd)string of >close_fd)cve(ads.ected ream.XXXXXX_fd) is:  is: _fd_ == -1(args->close_fd)ubstring of -1threads. led: threads.in hich is: XXXXXad_fd_ == -1lose(args->close_fd)ng of e object <Xrf threads./captured_stream.XXXXXX02Xse(args->close_fd)ch is: ubstring of ir("(args->close_fd)se(args->close_fd)hich is: _fd)rgs->close_fd)lose_fd) substring of ir("_fd)ubstring of ir("aptured_stream.XXXXXX. f ream.XXXXXXch is: ch is: f ) in yte object <ect the number of threads.e number of threads._fd)read_fd_ == -1tured_stream.XXXXXXstream.XXXXXXraptured_stream.XXXXXX) failed: ch is: ("object < == -1lose_fd)e number of threads.>close_fd) is: rgs->close_fd)iled: f threads.hich is: d threads.= -1..) in hdir("s->close_fd) == -1 failed: red_stream.XXXXXX_fd)threads. substring of  detect the number of threads.L"(args->close_fd)02Xct <led: -byte object <tured_stream.XXXXXXthe number of threads.rgs->close_fd)  of ng of -byte object <threads./captured_stream.XXXXXXse(args->close_fd) == -1 of XXXXXobject <mber of threads.: : s. == -1s.++ exception with description "ect the number of threads._fd)tured_stream.XXXXXXd_ == -1 detect the number of threads. < substring of not lose_fd) ..) in = -1cve(02Xfailed: XXXXX
L"the number of threads.Xs->close_fd)ad_fd_ == -1mp/captured_stream.XXXXXXrgs->close_fd)threads.failed: _fd)ream.XXXXXXetected L"s.rgs->close_fd)mp/captured_stream.XXXXXX>close_fd)stream.XXXXXXyte object <threads.ted 
t the number of threads.d_stream.XXXXXXeption with description "_fd)02Xailed: aptured_stream.XXXXXX. threads.er of threads.yte object <_fd_ == -1d: : .XXXXXX... -1d 02X_fd)e object <-1...  of threads.lose_fd)threads.ad_fd_ == -1threads..XXXXXX substring of threads.ted iled:  failed: ad_fd_ == -1ream.XXXXXXrlose(args->close_fd) <Xs->close_fd)reads.L"02X ring of s.-1hdir(" = -1tured_stream.XXXXXXs->close_fd)_fd) detect the number of threads.s.f : f  of ads. ted  detect the number of threads.("/captured_stream.XXXXXXaptured_stream.XXXXXXt the number of threads.eption with description ">close_fd)
_fd_ == -1se_fd)ect the number of threads.threads.not f threads.ject <reads. of : led: hdir("++ exception with description " <etected in stream.XXXXXXyte object <Xch is: ) failed: ubstring of XXXXXng of threads. failed: object <) in  of threads.f threads. the number of threads. == -1xecve(d_stream.XXXXXXL"ed: t the number of threads.led: ++ exception with description "se(args->close_fd)xecve(s->close_fd)++ exception with description ">close_fd)s.xception with description "ads.= -1... ed: xecve(++ exception with description "eption with description ") in hdir("s: XXXXXyte object <threads.eption with description "threads.XXX substring of e object < substring of _fd) mber of threads.tured_stream.XXXXXXd_stream.XXXXXX... iled: se(args->close_fd)ted threads./captured_stream.XXXXXX <cve(reads. not d d_ == -1X02Xetect the number of threads.se_fd)_fd)reads./captured_stream.XXXXXXred_stream.XXXXXX < substring of etect the number of threads.d_ == -1yte object <etect the number of threads.XXXream.XXXXXX_fd)ct <L"ed: d: etected am.XXXXXX-byte object <Xetect the number of threads.ct < ...) in rgs->close_fd)("ream.XXXXXXd)_fd_ == -1threads.rled: (args->close_fd) -1s.xception with description "aptured_stream.XXXXXXiled: ++ exception with description "s.rgs->close_fd)++ exception with description "_fd)ads.-byte object <>close_fd)yte object <f d failed: xception with description " of  detect the number of threads.mber of threads.e(led: threads.d)ch is: s.XXXXXream.XXXXXXected = -1t  substring of string of t the number of threads.ailed: eption with description "d_stream.XXXXXXmp/captured_stream.XXXXXXmp/captured_stream.XXXXXX..) in reads.ads.) failed: ) failed:  of threads.ailed: ) failed: -1am.XXXXXXxecve(ct <hich is: ads.ring of -1("
reads.d yte object <cve( is: : -1..) in Xt mber of threads.s: e object <s: ream.XXXXXXring of hdir("ch is: ) failed: 
02X-byte object <) in L"d_stream.XXXXXX/tmp/captured_stream.XXXXXXhdir("eption with description "xecve(-1= -1ads./captured_stream.XXXXXXt the number of threads.se(args->close_fd)aptured_stream.XXXXXXL") in ected e number of threads.s: rgs->close_fd)) in -byte object <hdir("_fd_ == -1_fd_ == -1ring of  == -1led: etect the number of threads.object < detect the number of threads.threads.number of threads.stream.XXXXXXs: threads.XXXthreads.ads.red_stream.XXXXXXject < reads.threads./captured_stream.XXXXXX substring of mp/captured_stream.XXXXXXthreads.. d_stream.XXXXXXXeption with description "object <s.string of f red_stream.XXXXXX failed: = -1Xted t ailed: se(args->close_fd)f  substring of ed: XXXer of threads.ad_fd_ == -1-1/captured_stream.XXXXXX>close_fd)f threads.XXX ted ubstring of d_ == -1 exception with description "threads.the number of threads. ...) in  failed: ads.not string of se_fd) is: number of threads._fd)) failed: read_fd_ == -1ring of etected rgs->close_fd)mber of threads.e object <= -1ected xception with description "s: threads.ad_fd_ == -1ed: e(d)yte object <ect the number of threads.-1_fd_ == -1threads.s->close_fd)ailed: ch is: not XXXXXhich is: d: aptured_stream.XXXXXXer of threads.yte object < object <ed: read_fd_ == -1d_stream.XXXXXXrstring of -1-1..) in  == -1ring of  <ring of yte object <XXX) failed: -byte object <ads.ch is: >close_fd)t the number of threads.lose(args->close_fd)(" substring of mp/captured_stream.XXXXXX-byte object <e number of threads. ...) in s->close_fd)failed: iled: ng of ) in ) failed: yte object <XXXXXaptured_stream.XXXXXX02Xailed: ) failed: ring of  <d = -1("ream.XXXXXX
object <rtured_stream.XXXXXX failed: ads.number of threads.etected lose_fd)yte object <e number of threads.>close_fd)ect the number of threads.-byte object <-byte object <ream.XXXXXX of threads.d_ == -1f threads.. -byte object < of am.XXXXXX: d)er of threads.etected d t yte object <s.XXXXXnot XXXthreads. exception with description "lose(args->close_fd)cve(stream.XXXXXXe object < of lose_fd)++ exception with description ": etect the number of threads.("-byte object <ng of ected s.d_stream.XXXXXXect the number of threads.eption with description "/tmp/captured_stream.XXXXXXse(args->close_fd)ng of in t the number of threads.se(args->close_fd)ted ad_fd_ == -1number of threads.ch is: ads.reads.(args->close_fd)) failed: ) failed: ++ exception with description "reads.se_fd)ubstring of object <: Xnot /captured_stream.XXXXXXs.reads.the number of threads.aptured_stream.XXXXXXject < cve( ubstring of string of lose_fd)ected 02Xer of threads.ected  is: stream.XXXXXXeption with description "("not ... cve(/tmp/captured_stream.XXXXXX("etected /tmp/captured_stream.XXXXXXse(args->close_fd)ect the number of threads.) in d_stream.XXXXXXs->close_fd).XXXXXXthreads.
 failed:  of threads.ads.read_fd_ == -1xception with description "am.XXXXXXse_fd)..) in .  of s.ubstring of t hdir(": read_fd_ == -1ch is: e number of threads.threads.yte object <s: led: ir("XXXrgs->close_fd) substring of f (args->close_fd)>close_fd)t . X ...) in mp/captured_stream.XXXXXXad_fd_ == -1>close_fd)etected stream.XXXXXXch is: f e object <xecve( is: ) in 02Xed:  of s.lose_fd) of ads.mp/captured_stream.XXXXXXct <ads.02XXXXXXd_stream.XXXXXX_fd_ == -1ected ch is: d_stream.XXXXXXxception with description "  eption with description "threads. of not ream.XXXXXXf ed: er of threads.f threads.f reads.ad_fd_ == -1cve(d)) failed: iled: (args->close_fd) stream.XXXXXXse_fd)lose(args->close_fd)s->close_fd)  e object < ...) in stream.XXXXXXthe number of threads./tmp/captured_stream.XXXXXXxception with description "-1xception with description ") failed: 
ng of se_fd)..) in .  .XXXXXXject <rgs->close_fd) -byte object <) failed: number of threads.lose_fd) 
d_ == -1= -1ad_fd_ == -1ailed: d  of ct <hich is: ... t  >close_fd)/tmp/captured_stream.XXXXXXch is: number of threads.ads.f  substring of hich is: Xfailed: ailed: rgs->close_fd).XXXXXXad_fd_ == -1_fd_ == -1ream.XXXXXX f er of threads.ream.XXXXXX ...) in 02Xs.Xs.reads.ream.XXXXXXf threads.ubstring of  detect the number of threads.d tured_stream.XXXXXXXXX... f ir("ream.XXXXXX/captured_stream.XXXXXXthreads.e(ir("/captured_stream.XXXXXXe(f threads.f threads.reads.-byte object <02Xred_stream.XXXXXXch is: read_fd_ == -1number of threads.L">close_fd)in : e number of threads.number of threads. se_fd) <ad_fd_ == -1ubstring of ..) in t the number of threads.threads.read_fd_ == -1lose(args->close_fd)ir(" == -1Xt the number of threads.
mp/captured_stream.XXXXXXmber of threads.s->close_fd)lose(args->close_fd)yte object <ch is:  of ads.rgs->close_fd) <t the number of threads.t ... ubstring of /captured_stream.XXXXXX: ect the number of threads.= -1the number of threads. <ected t the number of threads.ected -1s./tmp/captured_stream.XXXXXXir("the number of threads. detect the number of threads.e(ubstring of t the number of threads.XXXct <s->close_fd)XXXXX/captured_stream.XXXXXXmp/captured_stream.XXXXXXreads.led: ir("cve( < of d er of threads.= -1stream.XXXXXXect the number of threads.hdir("iled: -byte object <rgs->close_fd) ed: XXXlose_fd)e object <t f ads.reads.iled:  <etect the number of threads._fd)threads.d ubstring of etected lose_fd)) in f (args->close_fd)f eption with description " <_fd_ == -1string of >close_fd): the number of threads.eption with description " exception with description "er of threads.ed: reads.in e object < substring of : eption with description "... s.ect the number of threads.XXXXXring of  e object <L"mp/captured_stream.XXXXXXthreads.) failed: L"lose(args->close_fd)++ exception with description " of threads.d_stream.XXXXXXe(red_stream.XXXXXXd): ) in  substring of mp/captured_stream.XXXXXXhich is: ected rgs->close_fd)ad_fd_ == -1Xct <e(in XXXch is:  == -1e(reads.rject <etect the number of threads.ubstring of ailed: ch is: t the number of threads.("r/captured_stream.XXXXXXrgs->close_fd)d_ == -1/tmp/captured_stream.XXXXXXect the number of threads.-1se(args->close_fd)etect the number of threads.threads.led:  == -1yte object <se(args->close_fd)not rled: (args->close_fd)xecve( substring of _fd)read_fd_ == -1 of threads.d e number of threads.-1-1the number of threads.: t the number of threads...) in XXX. failed:  substring of _fd_ == -1ring of t read_fd_ == -1 (" xception with description "L"tured_stream.XXXXXXnumber of threads. aptured_stream.XXXXXXcve(yte object <ted mp/captured_stream.XXXXXX>close_fd)f threads._fd_ == -1tured_stream.XXXXXXse_fd)ad_fd_ == -1etect the number of threads.e number of threads.f eption with description " failed: ads.d_ == -1t er of threads. detect the number of threads.ir("ad_fd_ == -1 of threads.lose(args->close_fd)d:  of f stream.XXXXXX is: d)d_ == -1ads.L") failed: d_stream.XXXXXXe(. d: >close_fd)read_fd_ == -1mp/captured_stream.XXXXXXected eption with description "("s.hich is: t the number of threads.red_stream.XXXXXX failed:  _fd_ == -1XXXer of threads.threads.ring of  of threads.xecve(s: (args->close_fd) is: ubstring of ct <se_fd)... ed: etected iled:  substring of . reads.led: X failed: /captured_stream.XXXXXXlose(args->close_fd)-1>close_fd)XX <hdir("ream.XXXXXX/tmp/captured_stream.XXXXXX_fd_ == -1ed: f threads. failed: r... s->close_fd)_fd_ == -1..) in t e object <er of threads.ed: mber of threads.iled: d_stream.XXXXXX aptured_stream.XXXXXXf stream.XXXXXXxecve(se(args->close_fd)etected ) in hdir("s.rgs->close_fd) substring of eption with description "("ream.XXXXXXxception with description "e object <L"e number of threads.lose_fd)-1++ exception with description "xecve(hich is: failed: 
 of iled:  failed: etect the number of threads.in e object < ) in f am.XXXXXX exception with description "f threads. of ads.hich is: s.read_fd_ == -1. ect the number of threads.reads.mber of threads.L" failed: d_ == -102X of threads.ted d: /tmp/captured_stream.XXXXXX) in iled: se_fd)e(led: ted se(args->close_fd).XXXXXXaptured_stream.XXXXXXred_stream.XXXXXX(args->close_fd)e(am.XXXXXXX_fd_ == -1e(threads. exception with description "iled:  <= -1ring of lose_fd)ject <ads.
-byte object <iled: ted rgs->close_fd)d: XXXct <L"e(s.xecve(rgs->close_fd)etect the number of threads...) in d_ == -1s. == -1.XXXXXXxception with description " ads.f threads.Xetect the number of threads.f cve(02Xd_ == -1ad_fd_ == -1threads.d_stream.XXXXXXs. of threads.ted  substring of ..) in ch is: ..) in . reads...) in ...  ...) in led:  substring of read_fd_ == -1
ch is: ream.XXXXXXrf threads.>close_fd)-byte object <etect the number of threads.se(args->close_fd)cve(threads.... se(args->close_fd) substring of failed: red_stream.XXXXXXted /tmp/captured_stream.XXXXXXyte object <ed: s->close_fd) failed: yte object <f Xetect the number of threads.se_fd): : e object <failed: mp/captured_stream.XXXXXXyte object <XXX <lose(args->close_fd)ailed: object </tmp/captured_stream.XXXXXXled: ("tured_stream.XXXXXX-byte object <>close_fd)ubstring of e(ir("led: ream.XXXXXX_fd)string of ream.XXXXXXled: object <xception with description "d  detect the number of threads.yte object <XXXXXf ect the number of threads.ir("iled: not the number of threads.>close_fd)...  ...) in etected ir("led: d:  ...) in rgs->close_fd)se(args->close_fd)e object <s->close_fd)) in hich is: tured_stream.XXXXXXs: er of threads.ubstring of s.threads.ring of hdir("X <: ed: mp/captured_stream.XXXXXXng of ct <not ng of ailed: se(args->close_fd) of threads.hich is:  of threads. detect the number of threads.d)_fd)hich is: hich is: ad_fd_ == -1 of threads..XXXXXXtured_stream.XXXXXX substring of ubstring of etected in mp/captured_stream.XXXXXX. _fd_ == -1d  < ...) in led: ng of ailed: the number of threads.d: rgs->close_fd)) failed: threads. substring of = -1threads.(args->close_fd) failed: : read_fd_ == -1ring of f threads.e number of threads.ads. mber of threads.s.failed: . : /captured_stream.XXXXXX
read_fd_ == -1 ...) in . s->close_fd)iled: string of hich is: ch is: d_stream.XXXXXXse_fd)s->close_fd)ect the number of threads.object <reads.++ exception with description "ad_fd_ == -1XXXf object <Xd: ring of cve(ream.XXXXXX substring of /tmp/captured_stream.XXXXXXream.XXXXXXobject < detect the number of threads.02Xstring of ted /captured_stream.XXXXXXxecve() in iled: not ++ exception with description "ted ads./tmp/captured_stream.XXXXXXstring of  se(args->close_fd)e( < of threads.stream.XXXXXX) in ..) in d d: /tmp/captured_stream.XXXXXX ...) in d_ == -1yte object < substring of -byte object <d_ == -1led: t the number of threads.s: ad_fd_ == -1ed:  exception with description "-1e object <) in (args->close_fd)_fd)02Xfailed: xception with description "e(d)d_stream.XXXXXXads.L"lose(args->close_fd)se_fd)f red_stream.XXXXXXXaptured_stream.XXXXXXstring of ++ exception with description " xception with description "(args->close_fd)xecve(XXXXXd_ == -1ads. is: s->close_fd)02X of threads.led: rgs->close_fd) of d: d)
>close_fd)cve(ream.XXXXXXstream.XXXXXX exception with description "...  substring of reads.the number of threads.mber of threads.>close_fd)red_stream.XXXXXXse_fd) ...) in ch is: stream.XXXXXXt lose_fd)number of threads.s: xecve(threads.ch is: in s: >close_fd)reads.er of threads. of se_fd)number of threads.etect the number of threads.failed: ads.threads.f ) in  ("_fd_ == -1-byte object < == -1ch is: ring of (args->close_fd).XXXXXXetected e number of threads.02Xject <string of mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXfailed: ring of  substring of f threads.. _fd_ == -1ct <XXXXXreads._fd)
ream.XXXXXX. e(02Xd)xception with description "hich is: ir("the number of threads.threads.r/captured_stream.XXXXXXe(-byte object <ed: ect the number of threads.f  _fd_ == -1ailed: -1ng of XXX/tmp/captured_stream.XXXXXX substring of e number of threads.... e( detect the number of threads.aptured_stream.XXXXXXthreads.led: se_fd)xception with description "object <ream.XXXXXXhich is:  failed: rgs->close_fd)d)hich is: string of etect the number of threads.rgs->close_fd)lose(args->close_fd)iled:  substring of f string of L"_fd)red_stream.XXXXXXnot rgs->close_fd). read_fd_ == -1d_stream.XXXXXXhich is: reads.ads.number of threads.se_fd)d_ == -1...  of lose(args->close_fd)s->close_fd)stream.XXXXXXe object <eption with description ">close_fd)the number of threads.ted led: se(args->close_fd)aptured_stream.XXXXXX.XXXXXXlose(args->close_fd)led: ject <Xstring of s.rmber of threads.am.XXXXXXstring of .XXXXXXetect the number of threads.ream.XXXXXX-byte object <ads.yte object <xception with description "Xd: t etect the number of threads.ubstring of stream.XXXXXX Xin  failed: se(args->close_fd) is: read_fd_ == -1led: d_ == -1reads...) in  exception with description "eption with description "lose_fd)aptured_stream.XXXXXXXs: threads.f am.XXXXXX of threads.t ... xception with description "s.XXXXX <ailed:  substring of ("threads.threads.02Xthreads.read_fd_ == -102Xaptured_stream.XXXXXXch is: object < <led: d: t the number of threads.ected  failed: = -1ng of t the number of threads.rgs->close_fd)ubstring of /tmp/captured_stream.XXXXXXaptured_stream.XXXXXXt the number of threads.threads.object <
threads.-byte object <ailed: number of threads.s.iled: _fd) == -1se(args->close_fd) ...) in f number of threads.... :  detect the number of threads.++ exception with description " == -1ject <number of threads.lose_fd) is: se(args->close_fd) detect the number of threads._fd_ == -1 am.XXXXXXse(args->close_fd)s: ring of threads.
the number of threads.eption with description "d_ == -1e number of threads.++ exception with description "_fd_ == -1xception with description "("ted ads.
number of threads.in hich is: yte object <mber of threads.rgs->close_fd)t f threads.s: iled: threads._fd_ == -1s: xecve(d: etect the number of threads.s.threads.reads...) in .XXXXXX02Xthe number of threads.threads.etected d s.++ exception with description "in yte object <  is: lose_fd)ject <number of threads. detect the number of threads. of yte object <ed: Xreads.led: number of threads.the number of threads.xception with description "s.aptured_stream.XXXXXX exception with description " is: stream.XXXXXX("d_stream.XXXXXXd_ == -1se_fd)t the number of threads.tured_stream.XXXXXX is: se_fd)
e(/captured_stream.XXXXXX.XXXXXXreads.se(args->close_fd)d_stream.XXXXXXd: ..) in  detect the number of threads. se_fd)) in etected tured_stream.XXXXXX(args->close_fd).XXXXXX.XXXXXX is: ailed: led: e(rgs->close_fd)f mber of threads.aptured_stream.XXXXXXxception with description "t the number of threads.reads. xception with description "lose(args->close_fd)number of threads./tmp/captured_stream.XXXXXX substring of am.XXXXXXam.XXXXXXnumber of threads.. ed:  <ubstring of /captured_stream.XXXXXX failed: e(mp/captured_stream.XXXXXX <red_stream.XXXXXXthreads.er of threads.XXXXXads./captured_stream.XXXXXX..) in ected d:  failed: . tured_stream.XXXXXX of threads. of threads.ailed: yte object <XXXXX exception with description "robject <s->close_fd)ads.... hich is: . d s->close_fd) substring of number of threads.s. substring of er of threads.d)ect the number of threads.not led: iled:  of threads.mber of threads.++ exception with description "/captured_stream.XXXXXXread_fd_ == -102Xetected threads...) in cve(failed: hich is: -byte object <) in etect the number of threads. <ch is: aptured_stream.XXXXXXlose(args->close_fd)lose_fd)er of threads.-1 failed: ..) in ed: 02Xred_stream.XXXXXXream.XXXXXXfailed: _fd) <. am.XXXXXXect the number of threads. am.XXXXXXXiled: eption with description "not ... d_stream.XXXXXXf /captured_stream.XXXXXXthreads.mber of threads.ailed: d)..) in iled: am.XXXXXXhich is: s.XXXXs->close_fd)d ("ir("rgs->close_fd)++ exception with description " is: L" lose(args->close_fd)cve( of threads.ch is: ++ exception with description "tured_stream.XXXXXXse(args->close_fd)= -1 of  of aptured_stream.XXXXXX of ad_fd_ == -1ch is: rgs->close_fd)read_fd_ == -1ads.e object <ubstring of lose(args->close_fd) yte object <lose_fd)er of threads.e number of threads.lose_fd) ...) in (args->close_fd)_fd_ == -1ed: ted se(args->close_fd)e number of threads.ted ream.XXXXXXected : e number of threads. substring of read_fd_ == -1.  == -1failed: mp/captured_stream.XXXXXXng of t the number of threads.ct <ad_fd_ == -1se_fd)cve(ads. of threads.e(d yte object <etected stream.XXXXXXXam.XXXXXXd_stream.XXXXXXXXXXXam.XXXXXXect the number of threads.t the number of threads.s:  == -1not -1_fd_ == -1eption with description "02X(": ected lose(args->close_fd)-byte object <XXXf ) in _fd_ == -1 of threads.d ng of  ...) in s. detect the number of threads.ct <string of  <-byte object <in /tmp/captured_stream.XXXXXXs->close_fd)/captured_stream.XXXXXXled: e(ect the number of threads.t string of ads.s.hdir("number of threads.: in s. of threads.am.XXXXXXlose(args->close_fd)ads.ring of ads._fd_ == -1 ) failed: xception with description "-byte object <L"02X_fd_ == -1e object <red_stream.XXXXXX is: XXXs:  == -1t the number of threads.ads.f threads.mber of threads.s: ubstring of  ...) in number of threads.er of threads.er of threads. detect the number of threads. of threads. exception with description "etected s->close_fd). e object <failed: t d_stream.XXXXXX(args->close_fd)yte object <xecve(_fd) read_fd_ == -1= -1X is:  detect the number of threads.ailed: s->close_fd)t .XXXXXXlose_fd)eption with description "/captured_stream.XXXXXXe number of threads.XXXed: etect the number of threads. <d_ == -1ect the number of threads.
.XXXXXXd_ == -1mber of threads.failed: . eption with description " of /captured_stream.XXXXXXe object <ad_fd_ == -1threads.red_stream.XXXXXXads.hdir("read_fd_ == -1) in lose(args->close_fd)e object <ct <= -1-byte object <++ exception with description "ad_fd_ == -1: /captured_stream.XXXXXX d: ..) in failed: ..) in tured_stream.XXXXXXject <cve((") in ads.threads. exception with description "02Xted ubstring of ect the number of threads.red_stream.XXXXXXd t the number of threads.etect the number of threads.f threads.led: ct <yte object <-byte object < == -1: ch is: cve(ct <threads.. ng of  >close_fd)(args->close_fd)ct <XXXt the number of threads.d_stream.XXXXXXse(args->close_fd) <aptured_stream.XXXXXXrgs->close_fd)d)ected the number of threads.number of threads.d_stream.XXXXXX substring of d_stream.XXXXXXch is: ) in  of threads.(args->close_fd)) failed: number of threads..XXXXXXXXXir("X failed: am.XXXXXXfailed: ed: ) failed:  == -1rd: lose_fd) exception with description "se(args->close_fd)ad_fd_ == -1 of threads.e(tured_stream.XXXXXX...  t  of threads.ad_fd_ == -1) in -1 string of ubstring of led: -1mp/captured_stream.XXXXXX>close_fd) <ads./tmp/captured_stream.XXXXXXch is: : .XXXXXX: s.e object <s.Xse_fd)Xnumber of threads.-byte object <ct < ream.XXXXXX 02XX-1led: ubstring of = -1d)eption with description "ads.t the number of threads._fd)ad_fd_ == -1iled: ted d d XXXXXmber of threads.ct <ads. == -1 ) in failed:  ted . ad_fd_ == -1failed: stream.XXXXXXed:  reads.er of threads. ted s->close_fd)>close_fd) detect the number of threads.ads._fd_ == -1reads.ng of d)stream.XXXXXX detect the number of threads.
s->close_fd)..) in /tmp/captured_stream.XXXXXXir("e number of threads.ect the number of threads.read_fd_ == -1) in not  substring of s.. ailed:  <lose(args->close_fd)ir("mber of threads.in failed:  detect the number of threads.ct <in number of threads. mp/captured_stream.XXXXXXe(xception with description "mp/captured_stream.XXXXXXlose_fd)d  detect the number of threads.
d: : s->close_fd) == -1ected tured_stream.XXXXXXject <02Xject <) in  == -1_fd)ect the number of threads.aptured_stream.XXXXXXhdir("_fd)>close_fd)..) in d: hdir("/tmp/captured_stream.XXXXXXlose_fd)... ng of 02X.XXXXXX.XXXXXXthe number of threads.ch is: _fd_ == -1Xject <threads./tmp/captured_stream.XXXXXX
 ...) in  substring of _fd)tured_stream.XXXXXX ir("object <ct <threads.aptured_stream.XXXXXXobject <X02Xam.XXXXXX02Xfailed:  detect the number of threads. xecve(ed: mp/captured_stream.XXXXXX failed: lose(args->close_fd)Xlose(args->close_fd)reads.>close_fd)ch is: XXXXXetected hdir("tured_stream.XXXXXXubstring of  of threads.failed: iled:  of s->close_fd)lose(args->close_fd)not ected lose_fd)hich is: ream.XXXXXXthe number of threads. detect the number of threads.-1-1L"reads. of Xs: /captured_stream.XXXXXXct <iled: f threads.lose_fd)threads.lose(args->close_fd)/captured_stream.XXXXXXetect the number of threads._fd_ == -1 <_fd_ == -1 substring of red_stream.XXXXXX/tmp/captured_stream.XXXXXXyte object <lose_fd)red_stream.XXXXXX) in ng of hdir("L"e number of threads. of threads. ng of etect the number of threads.the number of threads.s._fd)ected eption with description "reads.. ng of se(args->close_fd) xception with description "eption with description "/tmp/captured_stream.XXXXXXse_fd)se_fd) detect the number of threads.ads.lose_fd)XXXXXstream.XXXXXX exception with description "_fd)ream.XXXXXX-1ream.XXXXXXng of ++ exception with description "eption with description "hich is: e number of threads.) in er of threads.s: 02Xd mber of threads.se_fd)ect the number of threads.-1 reads.number of threads...) in er of threads.not -byte object <f threads.>close_fd)/tmp/captured_stream.XXXXXXd_stream.XXXXXXread_fd_ == -1r /captured_stream.XXXXXXam.XXXXXXect the number of threads. == -1hdir(".XXXXXXcve(L"XXX-byte object <_fd)L"reads.red_stream.XXXXXX... ream.XXXXXXfailed: e number of threads.the number of threads. ed: failed: ct <se_fd)_fd)hich is: threads.ream.XXXXXXeption with description " of mp/captured_stream.XXXXXX) failed: xception with description "string of e(-byte object <e(tured_stream.XXXXXX: lose_fd)not ected ring of eption with description "-byte object <ject <stream.XXXXXXtured_stream.XXXXXXfailed: ailed:  hdir("threads.(args->close_fd)L"ream.XXXXXXs->close_fd)>close_fd)ected d e(iled: -1mp/captured_stream.XXXXXX substring of object <e number of threads.eption with description "s: t xecve(-1ed:  <= -1ected red_stream.XXXXXXrs.object <object <lose_fd)XXXXXd)) failed: tured_stream.XXXXXXfailed: rgs->close_fd)ed: = -1ailed: the number of threads.d: tured_stream.XXXXXXected  of threads.d reads.) in xecve(eption with description "se(args->close_fd)ted _fd_ == -1. ) in d in = -1Xfailed:  hich is: ("threads.threads.d_ == -1>close_fd)s->close_fd)-byte object <..) in XXXXX of threads.L"etect the number of threads...) in : am.XXXXXX
/captured_stream.XXXXXX02X..) in mber of threads.the number of threads.ailed: ... aptured_stream.XXXXXXxception with description "ted ected reads.02X_fd)the number of threads.in d)se_fd)/captured_stream.XXXXXXads.(args->close_fd)ed: d_ == -1yte object <XXXXXXf ailed: /captured_stream.XXXXXX lose_fd)s.... X. read_fd_ == -1ject <ads.("e object <not mp/captured_stream.XXXXXXnot d_stream.XXXXXX of ng of  exception with description " substring of ads.lose(args->close_fd)d ) in /captured_stream.XXXXXXd_ == -1ubstring of ted ("d ct <ad_fd_ == -1 of threads.s.se(args->close_fd)ad_fd_ == -1ject <ject <("ads.lose_fd)reads.xception with description "tured_stream.XXXXXXled: d_ == -1eption with description "f e object <ted s.d)) in XXX failed: ads.XXXXXXailed: aptured_stream.XXXXXXs.ng of 02Xd d: the number of threads.ailed: d  e number of threads.mp/captured_stream.XXXXXXthe number of threads.read_fd_ == -1red_stream.XXXXXX == -1ected Xthreads.in not e object <d ) failed:  substring of  failed: ring of /tmp/captured_stream.XXXXXXXXXXXlose_fd) exception with description "ed: aptured_stream.XXXXXX-byte object <ads.mber of threads.ads.ch is: -1hdir("..) in se_fd)ads.am.XXXXXXeption with description "lose(args->close_fd)) failed: ++ exception with description "e number of threads.ads.iled: Xhdir("ring of lose_fd)threads.X failed: XXXailed: xception with description "ad_fd_ == -1aptured_stream.XXXXXXthreads.ubstring of mp/captured_stream.XXXXXXrin reads.ailed: the number of threads.stream.XXXXXXxception with description "d ) failed: not not  <xecve(e((args->close_fd).  detect the number of threads.XXXads.++ exception with description "ir("read_fd_ == -1red_stream.XXXXXX etected se(args->close_fd) Xrrgs->close_fd) == -1ng of hdir("lose(args->close_fd)..) in ch is: ct <ring of _fd) failed: XXX substring of f threads. failed: t the number of threads.in etected d_ == -1... threads.object <rct <. ubstring of d_ == -1cve(ailed: ng of threads.iled: threads.am.XXXXXX-1ng of  is: object <_fd)am.XXXXXX/tmp/captured_stream.XXXXXXXXX detect the number of threads.xecve(read_fd_ == -1the number of threads.. threads.ir("e object <) failed: red_stream.XXXXXX
reads.e object <led: -byte object <rgs->close_fd)er of threads.XXXobject <(args->close_fd)ted e(ream.XXXXXXse_fd). se_fd)object <lose(args->close_fd) of threads.t ch is: etected string of mber of threads.reads.failed: tured_stream.XXXXXXhdir("_fd_ == -1ct <X/tmp/captured_stream.XXXXXX of _fd)d_stream.XXXXXXs.t eption with description "++ exception with description "number of threads.s->close_fd)mber of threads.: e object <the number of threads.XXXXXted er of threads.= -1-1ed: L"++ exception with description "= -1t d_stream.XXXXXXads.ads. exception with description "f threads.number of threads.not :  failed:  <hich is: object <the number of threads.ected ) failed: ect the number of threads.threads.f threads.ads.reads. ...) in ads.stream.XXXXXX>close_fd)ailed:  <s.string of -1er of threads.ected ) in se_fd) detect the number of threads.threads.am.XXXXXXf threads..XXXXXX of . number of threads.d_stream.XXXXXXXream.XXXXXX ream.XXXXXX/captured_stream.XXXXXXXetect the number of threads.e(ng of f threads.ailed: ng of mp/captured_stream.XXXXXX) failed:  < of d s.Xiled: (args->close_fd)_fd_ == -1e number of threads.... d)read_fd_ == -1ch is: yte object <Xd) d_stream.XXXXXXhdir("ng of ++ exception with description "iled: hich is:  == -1d_ == -1t the number of threads.ect the number of threads.lose(args->close_fd)iled: s.ring of .XXXXXXrgs->close_fd)lose_fd)..) in read_fd_ == -1) in ject <ect the number of threads.rgs->close_fd)lose(args->close_fd)mber of threads.f rgs->close_fd)f threads.(args->close_fd)tured_stream.XXXXXXcve(yte object <(args->close_fd)yte object <02Xs. detect the number of threads.threads...) in xecve(d_ == -1ted  failed: d red_stream.XXXXXXstream.XXXXXX.XXXXXXd) == -1: not s.read_fd_ == -1/tmp/captured_stream.XXXXXXd_stream.XXXXXXled: d: hdir("d_ == -1..) in ailed: XXX exception with description " of threads.ir("-1("led: ++ exception with description ": ) in ailed: s.led: iled:  rgs->close_fd)s._fd)ring of ads.se_fd) failed: the number of threads.XXXXX++ exception with description "yte object <ailed: /tmp/captured_stream.XXXXXXxception with description " substring of reads.XXads.red_stream.XXXXXXrobject <XXXected ected red_stream.XXXXXX ) failed: d_ == -1ch is: xception with description "se(args->close_fd)failed: am.XXXXXX exception with description "s.ads.failed: lose(args->close_fd) is: etected (args->close_fd).XXXXXX <ir(". /captured_stream.XXXXXXmber of threads.. se_fd)ect the number of threads.am.XXXXXX>close_fd)the number of threads. detect the number of threads. of ir("lose(args->close_fd)e number of threads.ect the number of threads.eption with description "/captured_stream.XXXXXX/tmp/captured_stream.XXXXXX <the number of threads.02X <e object <) failed:  failed: eption with description "ream.XXXXXXd: am.XXXXXXreads.d d s:  ...) in ) in lose_fd) ...) in ject <t the number of threads.hdir("..) in  ...) in in ... X read_fd_ == -1ng of t the number of threads.hich is: ject < exception with description ":  <se_fd)object <f threads.e object <_fd)ailed: t ct < == -1XXXXXs: d_ == -1hich is: ject <(args->close_fd)am.XXXXXXthreads._fd_ == -1the number of threads.-1(args->close_fd)L" < <L"failed: xception with description "eption with description " failed: d: ) failed: s./captured_stream.XXXXXXread_fd_ == -1++ exception with description "ch is: /tmp/captured_stream.XXXXXX-1. e(reads.reads.f ream.XXXXXX++ exception with description ". ject <ed: lose_fd)d:  <mp/captured_stream.XXXXXXt   substring of e object <d: ("object <er of threads._fd)etect the number of threads. detect the number of threads.threads.read_fd_ == -1led:  == -1++ exception with description "ads.reads.xception with description "f threads._fd)/captured_stream.XXXXXXads. -byte object <... ect the number of threads.reads.etect the number of threads. detect the number of threads.number of threads.ream.XXXXXXected t ) in ed: ect the number of threads.led: xception with description "t the number of threads.ted etect the number of threads.rreads..XXXXXX..) in s.xecve(s->close_fd)f threads.-1) in threads. failed: ad_fd_ == -1 ...) in er of threads.
number of threads.s.threads._fd)etect the number of threads.
ads._fd) ct <e(ject <lose(args->close_fd) failed: -1ads. XXXXXeption with description "_fd)ad_fd_ == -1= -1) failed: ected  of threads.++ exception with description "e number of threads.XXX-1reads.) in ailed: read_fd_ == -1red_stream.XXXXXXd) XXXch is: ++ exception with description "number of threads.ch is: ect the number of threads.se(args->close_fd)string of ..) in iled: _fd)stream.XXXXXXubstring of d ream.XXXXXXer of threads.in rred_stream.XXXXXX/tmp/captured_stream.XXXXXXred_stream.XXXXXXad_fd_ == -1-byte object <ject <e(e(cve(XXXXXobject < </tmp/captured_stream.XXXXXXtured_stream.XXXXXXreads.ch is: ir("etected string of /tmp/captured_stream.XXXXXX is: lose_fd)) in -byte object <t stream.XXXXXX of eption with description "ad_fd_ == -1lose_fd) ...) in stream.XXXXXX == -1ailed:  is: yte object <ir("ream.XXXXXXd)threads.Xthreads.02Xe object <X exception with description "_fd)>close_fd)reads.(" ad_fd_ == -1("ct <cve(ject <reads.L" is: object <s.ubstring of s.se(args->close_fd)etect the number of threads.rgs->close_fd)ads./captured_stream.XXXXXX..) in X is: >close_fd)s->close_fd)se(args->close_fd)..) in  detect the number of threads.ream.XXXXXXe(ring of d)Xd threads.ected ..) in ring of se_fd)tured_stream.XXXXXXmber of threads.rgs->close_fd)ads.string of d_ == -1ads.e(d) == -1s: rgs->close_fd)("read_fd_ == -1s.e number of threads.xception with description "ct <XXXXXd)ailed: 02X ...  exception with description "ct <lose_fd)ected s:  == -1 failed:  of ) in r of threads.ch is: XXXstream.XXXXXXubstring of  d 
/tmp/captured_stream.XXXXXX  of s->close_fd)mber of threads.) failed: lose(args->close_fd)reads.cve(/captured_stream.XXXXXXring of er of threads.ailed: string of f xecve(eption with description "se_fd)..) in s->close_fd)ect the number of threads.ed: ++ exception with description " exception with description "tured_stream.XXXXXXX of threads.ng of not  == -1led: failed: threads.d: X ch is: threads.02Xaptured_stream.XXXXXXailed: ir("in .XXXXXXe number of threads.e( ...) in etect the number of threads.L" of f threads. of threads.ir("++ exception with description "ch is: read_fd_ == -1ed: threads.s:  ...) in 
ads.am.XXXXXX ject <am.XXXXXX <>close_fd)cve(XXXXXxecve(hich is: threads.reads.... ring of 02Xf ng of Xads.e object <) in e object <lose_fd)ailed: t the number of threads.etected .XXXXXXL"d  <("t the number of threads.object <s.ted stream.XXXXXXch is: ++ exception with description "read_fd_ == -1s: lose(args->close_fd)eption with description "e number of threads.e number of threads.XXXXX(args->close_fd)("ected  detect the number of threads.e object < yte object <d_ == -1not  exception with description "se(args->close_fd)ads.xecve(threads.>close_fd)ected XXX-1f threads._fd)in ng of etected in iled: 02X ng of t rmp/captured_stream.XXXXXX of threads.eption with description " of threads.L"led: s. of threads. d_stream.XXXXXX("
xecve(rf threads.X ...) in ect the number of threads.aptured_stream.XXXXXX of threads.f threads.se(args->close_fd)rL"rnot er of threads.xecve(_fd) of threads.stream.XXXXXXed: t X... ted ring of 
hich is: ream.XXXXXXe number of threads. is: rads.ected  >close_fd)... lose(args->close_fd)stream.XXXXXXd_stream.XXXXXXyte object < is: f mp/captured_stream.XXXXXXetected -byte object <rstream.XXXXXX... iled: (args->close_fd). 
hdir("ng of  ...) in ream.XXXXXX... _fd)led: ...  = -1d: s->close_fd)xception with description "yte object <lose_fd) failed: e(ubstring of ring of ad_fd_ == -1/captured_stream.XXXXXX is: ) failed: failed: ++ exception with description "XXXXXect the number of threads.L" detect the number of threads.d_ == -1the number of threads.ng of ailed: ted 02Xthreads.. ) failed: etected XXXXXs.ream.XXXXXX-1etect the number of threads.s.-1. d_stream.XXXXXX("object <failed:  detect the number of threads. detect the number of threads./tmp/captured_stream.XXXXXXnumber of threads.reads.XXXred_stream.XXXXXX>close_fd)er of threads.lose(args->close_fd)_fd)..) in cve(s.mp/captured_stream.XXXXXXs.er of threads.iled: >close_fd)ir("d_ == -1d)lose(args->close_fd)ch is: t d_ == -1reads.Xreads._fd)ream.XXXXXXthe number of threads.hdir("tured_stream.XXXXXXnot ected ..) in led: ads.d_stream.XXXXXX failed:  == -1) failed: ir("mber of threads.tured_stream.XXXXXXX02Xring of (args->close_fd)mp/captured_stream.XXXXXX is: ir("object <-byte object <("ch is: ... s: ("ream.XXXXXXstring of ected lose_fd)Xeption with description "ject < of object <rgs->close_fd)ected /captured_stream.XXXXXXads.s.f threads.L"XXXd)er of threads.ads. is: t the number of threads.stream.XXXXXX-1ected am.XXXXXX02Xin  failed: s->close_fd)/captured_stream.XXXXXXL"tured_stream.XXXXXXe number of threads.f threads. <f ted ed: ed: XXXXXe object <mber of threads.threads.e object <e object <("threads.led: ch is:  ++ exception with description "red_stream.XXXXXXthe number of threads.iled: ... er of threads.L"cve(etect the number of threads.X("/captured_stream.XXXXXXf threads.-1ect the number of threads.eption with description "ng of e object <(args->close_fd)ir("Xreads.hich is: ch is: xecve((args->close_fd)stream.XXXXXXd_stream.XXXXXXaptured_stream.XXXXXXring of ng of ubstring of d -byte object <lose(args->close_fd)red_stream.XXXXXX) failed:  detect the number of threads.d  /captured_stream.XXXXXX
 is: not rgs->close_fd)("r.XXXXXXiled: threads.xecve(ng of  <d_stream.XXXXXXXXX... /tmp/captured_stream.XXXXXX) in = -1lose_fd)read_fd_ == -1L" 
>close_fd)f threads.eption with description " == -1s. of threads.ject <_fd_ == -1the number of threads.>close_fd)rd_stream.XXXXXXled: ct <: ed: d)-byte object <not L"d_stream.XXXXXXhich is: threads.cve(ailed: number of threads.ject <lose_fd)stream.XXXXXXe object < exception with description "ch is: ect the number of threads._fd_ == -1t xecve(red_stream.XXXXXXed: read_fd_ == -1..) in ubstring of reads.Xd_ == -1 exception with description "eption with description " of red_stream.XXXXXXmber of threads. ...) in >close_fd)-1 failed: ubstring of cve( of  substring of ng of XXXXXyte object <. ted d_stream.XXXXXX == -1e number of threads.ailed: string of ected se_fd)_fd_ == -1XXXXXt f aptured_stream.XXXXXX is: stream.XXXXXX ) in /captured_stream.XXXXXX ...) in  exception with description " substring of red_stream.XXXXXX/tmp/captured_stream.XXXXXX ad_fd_ == -1 == -1 yte object < ...) in ailed: Xread_fd_ == -1 _fd_ == -1d)) failed: = -1/tmp/captured_stream.XXXXXX_fd)ads. . the number of threads._fd)mber of threads.led: failed:  cve(threads.e(02X) in XXXxception with description "se_fd)... t the number of threads./tmp/captured_stream.XXXXXXe object <ubstring of f stream.XXXXXXed: eption with description "(args->close_fd)= -1ir("
-1lose_fd)d)("ted ted  failed: yte object <ubstring of hdir("e(the number of threads.) failed: /tmp/captured_stream.XXXXXXrgs->close_fd) ...) in ..) in  ng of (args->close_fd)aptured_stream.XXXXXX failed: ...  ...) in  == -1ected not reads.ject <ect the number of threads./captured_stream.XXXXXX++ exception with description "Xe object <e(
cve(am.XXXXXXs: object <: f /tmp/captured_stream.XXXXXX-1lose(args->close_fd)02Xs->close_fd)stream.XXXXXXs: reads.object <s._fd_ == -1xecve( ...) in lose_fd)failed: hich is:  ject <... >close_fd)rgs->close_fd)e(ailed: object <ailed: ch is:  substring of s->close_fd)ailed: xecve(L"lose_fd)etected d led: ailed: _fd_ == -1/tmp/captured_stream.XXXXXXng of /tmp/captured_stream.XXXXXX...  failed: lose_fd)etect the number of threads.rgs->close_fd) hich is:  substring of -byte object <red_stream.XXXXXXstream.XXXXXXnumber of threads.s.++ exception with description "d_ == -1 f  == -1ring of ject < ...) in t the number of threads. substring of read_fd_ == -1ch is: ubstring of xecve(/tmp/captured_stream.XXXXXXlose(args->close_fd)ubstring of ng of object < rng of t the number of threads..XXXXXXXXXXXs.f 
) in  <ads.ring of XXXthreads.threads...) in e number of threads.ir(" failed: (args->close_fd) is: (args->close_fd)>close_fd)02XL"etect the number of threads.= -1mber of threads. stream.XXXXXXer of threads.aptured_stream.XXXXXXad_fd_ == -1etect the number of threads.-byte object <-1read_fd_ == -1("(args->close_fd)iled: : lose(args->close_fd)/tmp/captured_stream.XXXXXX_fd_ == -1ads.ailed: ads.cve(hdir("in read_fd_ == -1s: ected  of threads.
f threads.ch is: cve(er of threads.ted ..) in Xads.
rgs->close_fd)tured_stream.XXXXXXer of threads.am.XXXXXX ...) in f threads.f  == -1rgs->close_fd)reads. detect the number of threads.ir("yte object <++ exception with description "ect the number of threads.02X(" mp/captured_stream.XXXXXXed: ("ads.ject <threads.in .XXXXXXmber of threads.xecve(t the number of threads.cve(..) in ng of e object <ailed: XXXXX is: ) failed: hdir(" exception with description "ring of tured_stream.XXXXXXe number of threads.ect the number of threads.
.XXXXXXailed: ad_fd_ == -1d_ == -1red_stream.XXXXXXt the number of threads.s.er of threads.am.XXXXXXd)s->close_fd)/tmp/captured_stream.XXXXXXlose_fd)the number of threads.led: -1ubstring of reads._fd)d)threads. exception with description " of threads.d ) in d_ == -1s. eption with description "yte object <ect the number of threads.... ..) in hdir("rgs->close_fd)f threads.se(args->close_fd)d ng of ads.ubstring of string of mber of threads. == -1s->close_fd)02Xring of   is:  (args->close_fd)etect the number of threads._fd_ == -1iled:  of threads..XXXXXXthe number of threads.mp/captured_stream.XXXXXX(args->close_fd)stream.XXXXXXmp/captured_stream.XXXXXXted in xception with description "d_ == -1 substring of /captured_stream.XXXXXXxecve(ted ad_fd_ == -1d_stream.XXXXXXe( substring of xecve(yte object <failed: stream.XXXXXXer of threads.se_fd) failed: stream.XXXXXXXXXir("in : .XXXXXXfailed: >close_fd) detect the number of threads.e object < ads.ed: _fd_ == -1 -byte object <s.lose_fd) failed: number of threads.xecve(02Xled: ads.ubstring of stream.XXXXXX++ exception with description "etect the number of threads.ed: >close_fd)d_ == -1d_stream.XXXXXXred_stream.XXXXXXubstring of  substring of eption with description "s.= -1d_stream.XXXXXXt etected ads.object <se_fd)f : threads.: number of threads.reads.d_ == -1ng of  of ++ exception with description "e number of threads.ubstring of e object <-1 cve(ream.XXXXXX is: yte object <hdir(" ...) in red_stream.XXXXXXt the number of threads.>close_fd)s.d)e(failed: e object <red_stream.XXXXXXcve(in ted ) in _fd_ == -1d number of threads.s.. t the number of threads.reads. exception with description "/captured_stream.XXXXXXads.e((args->close_fd)string of t ..) in L" of  : -byte object <_fd)ed: read_fd_ == -1reads. detect the number of threads. exception with description " failed: t the number of threads.ailed: Xng of ected -1 f threads.XXXXX... ir("/captured_stream.XXXXXX: _fd_ == -1ream.XXXXXX-byte object <02X .XXXXXXf threads.hdir("s->close_fd) substring of (args->close_fd)/tmp/captured_stream.XXXXXX(args->close_fd)led: /tmp/captured_stream.XXXXXXs->close_fd) f ch is: /tmp/captured_stream.XXXXXX... aptured_stream.XXXXXXxception with description "XXXXXng of lose_fd)s: -byte object <-byte object <aptured_stream.XXXXXXcve(ected ... mp/captured_stream.XXXXXX failed: _fd)_fd)s.ch is: reads.ject <mp/captured_stream.XXXXXXt XXX(args->close_fd)reads.ed: er of threads.am.XXXXXX("e object <the number of threads.eption with description "d)lose_fd) ...) in stream.XXXXXXreads.xecve(  failed: mp/captured_stream.XXXXXXrer of threads.XXXcve(e object <in ir("am.XXXXXX /captured_stream.XXXXXXch is: ring of f threads.number of threads.ailed: f threads.red_stream.XXXXXXxecve(d_stream.XXXXXX("d: failed: t ads.mber of threads.f threads.d)/tmp/captured_stream.XXXXXXnumber of threads.ch is: rL" of d ng of  ch is: s.d: failed: lose_fd)mp/captured_stream.XXXXXXject <>close_fd)not XXX of rgs->close_fd)se(args->close_fd)read_fd_ == -1not iled: ailed: d)lose(args->close_fd) d_stream.XXXXXXobject <ng of tured_stream.XXXXXX mber of threads.ted lose(args->close_fd)reads.iled: : etect the number of threads.yte object <xecve(lose_fd)ect the number of threads.) failed: stream.XXXXXXs.cve(xception with description "reads.ject <..) in ct <(args->close_fd)string of ) in ct <. L"ubstring of reads.Xject <aptured_stream.XXXXXXd: t ring of ng of  detect the number of threads.tured_stream.XXXXXX("ream.XXXXXX++ exception with description ") in  hich is: string of 
red_stream.XXXXXXmber of threads.am.XXXXXXect the number of threads.ream.XXXXXXam.XXXXXXhich is: s.s->close_fd)/tmp/captured_stream.XXXXXXng of f ads.s.xecve(Xir("er of threads.tured_stream.XXXXXXect the number of threads.reads.02XXXXXX("iled: lose_fd)se_fd) detect the number of threads.not d)-byte object <yte object <ir(" of reads.stream.XXXXXXe(iled:  is: red_stream.XXXXXXstream.XXXXXXcve(e number of threads.d)= -1threads.Xfailed: reads. ads.ads.ad_fd_ == -1>close_fd)ads.ad_fd_ == -1ad_fd_ == -1s..XXXXXXtured_stream.XXXXXXL"L"e object <yte object <threads.read_fd_ == -1XXXXXrstring of ubstring of read_fd_ == -1_fd_ == -1iled: reads.ad_fd_ == -1-1ected am.XXXXXX.XXXXXXs:  ...) in = -1threads.
ir("XXX++ exception with description "_fd_ == -1 detect the number of threads..XXXXXXs->close_fd)XXXXXs: ailed: (args->close_fd)raptured_stream.XXXXXX/captured_stream.XXXXXX == -1>close_fd)iled: iled: ) failed:  of threads.(args->close_fd)threads. of threads.mp/captured_stream.XXXXXX_fd)yte object < ...) in  detect the number of threads. ...) in t ) failed: object < the number of threads.am.XXXXXXs.Xxecve(d_ == -1 <tured_stream.XXXXXX.XXXXXXf ) failed: t  : -byte object <ted mp/captured_stream.XXXXXXf threads.the number of threads.++ exception with description "s.object <d)mp/captured_stream.XXXXXXe object <lose_fd)_fd_ == -1s->close_fd) failed: ++ exception with description "ir("f ) in ream.XXXXXX) in in  <d)XXXcve(ubstring of ject <er of threads.etected ct <ream.XXXXXX d  substring of not  of threads.string of aptured_stream.XXXXXXetected e(s: ject <: lose_fd)lose_fd)hich is: :  ...) in ected tured_stream.XXXXXXled: the number of threads.tured_stream.XXXXXX of s. exception with description " detect the number of threads.ct <r++ exception with description "f threads.ubstring of >close_fd) <XXXXX>close_fd). ng of L" the number of threads. ...) in t ed: etected XXX("hdir("etect the number of threads.string of lose(args->close_fd)ream.XXXXXXected ject < detect the number of threads.: ... tured_stream.XXXXXXch is: iled: f iled: the number of threads.ream.XXXXXXXrgs->close_fd) <aptured_stream.XXXXXXe(read_fd_ == -1ir("xception with description " failed: lose(args->close_fd)mber of threads.etect the number of threads.xecve(cve(ream.XXXXXX ...) in = -1ch is: .XXXXXXe object <ailed: L" substring of reads.mp/captured_stream.XXXXXX.XXXXXXd)XXXxecve(ed: ads.("led: in se(args->close_fd)>close_fd)xecve(reads.the number of threads.
mber of threads.>close_fd)stream.XXXXXX failed: object <ailed: f ailed: read_fd_ == -1the number of threads.ct <d: f threads.XXX..) in etect the number of threads.hich is:  substring of ch is: xception with description "f threads.rgs->close_fd)read_fd_ == -1/tmp/captured_stream.XXXXXX exception with description "ir("failed: _fd_ == -1f threads.d e((args->close_fd)red_stream.XXXXXXected ... ad_fd_ == -1>close_fd)L"e number of threads.stream.XXXXXXread_fd_ == -1("ng of ir("(args->close_fd)in  detect the number of threads.string of ) failed:  == -1 of _fd)Xfailed: object <e(ring of ed: threads.xception with description "rgs->close_fd)lose(args->close_fd)ject <hdir("hdir("s. failed: L"s. failed: _fd)e(s.lose_fd)number of threads.hdir("XXXmber of threads./tmp/captured_stream.XXXXXXin threads._fd)f hich is: s->close_fd)ject <se_fd) XXXxception with description "02Xd ... threads.("hich is: threads._fd_ == -1f ject < == -1object <) in ch is: iled: am.XXXXXX= -1 substring of tured_stream.XXXXXX  XXXXX. se_fd)lose(args->close_fd)XXX..) in lose(args->close_fd). XXXXX s...) in ..) in rmber of threads.XXXcve( failed: ("d)rgs->close_fd)ir("xecve(d_stream.XXXXXX of reads.ed: XXXXXstring of ir("s: ch is: XXXXX == -1t rgs->close_fd)..) in Xe object <d_stream.XXXXXXXring of not  -byte object <ream.XXXXXX(args->close_fd)se_fd)etected yte object <ads.mp/captured_stream.XXXXXX: stream.XXXXXX threads.) failed: aptured_stream.XXXXXXyte object < exception with description " detect the number of threads.-1ng of t 02Xng of read_fd_ == -1 failed: ads.number of threads._fd_ == -1s: ected mp/captured_stream.XXXXXXnot >close_fd)e object <aptured_stream.XXXXXX <f read_fd_ == -1ad_fd_ == -1ect the number of threads.s. of ++ exception with description "d_ == -1in ..) in iled: 02Xhdir(" of threads.etected number of threads. == -1ads..XXXXXX
) in  of threads.(args->close_fd)threads. XXX
: xecve(s->close_fd)hdir("d ("red_stream.XXXXXXt lose_fd)t  se_fd)s.ring of xception with description "in ng of rgs->close_fd) of threads.lose(args->close_fd)lose(args->close_fd)ads.: 02Xads. exception with description "iled: string of  failed: in iled: ++ exception with description "s->close_fd)s.threads.rgs->close_fd)02Xect the number of threads.t the number of threads. is: d_ == -1ads.in XXXXXthreads.s->close_fd)
lose_fd)) in hdir("L"ject <t ed:  ad_fd_ == -1t  is: failed: ted ject < of threads.) failed: r(">close_fd)02Xxecve(yte object <tured_stream.XXXXXXred_stream.XXXXXXXXXXXxecve(s.
 ...) in  ad_fd_ == -1) failed: e object <lose(args->close_fd)f threads./tmp/captured_stream.XXXXXXt lose(args->close_fd)the number of threads....  is: ubstring of  ... ir("ad_fd_ == -1  substring of  <02Xted = -1 <. s.02Xream.XXXXXXubstring of ubstring of xception with description " /tmp/captured_stream.XXXXXXlose_fd) <yte object <ed: rgs->close_fd)number of threads.ted 
 of threads.02Xreads. == -1ads.d_stream.XXXXXX>close_fd)threads.mber of threads.s->close_fd)d_stream.XXXXXXe object <hdir("mber of threads.xception with description " in ..) in number of threads.etected 
..) in tured_stream.XXXXXX <L"e object <  of threads.object <reads.
se(args->close_fd)tured_stream.XXXXXXring of e number of threads.t f number of threads.ads.xception with description "stream.XXXXXX. failed: s.etected threads.aptured_stream.XXXXXXad_fd_ == -1xecve( detect the number of threads.L"-1>close_fd)number of threads.led: t the number of threads.s: = -1Xstring of XXXXX02Xmber of threads.: ir("cve(lose_fd)X02Xse(args->close_fd)ch is: ) in XXX of  is:  exception with description "t rgs->close_fd)threads.) in object < <rgs->close_fd) failed: number of threads.the number of threads...) in d_stream.XXXXXX: mber of threads.yte object <ch is: -byte object </captured_stream.XXXXXXed: ("t  failed: led: mp/captured_stream.XXXXXXs.L"= -1ream.XXXXXXs: >close_fd)number of threads.... ailed: d)iled: rgs->close_fd)rgs->close_fd) failed: mp/captured_stream.XXXXXXlose(args->close_fd)lose(args->close_fd)tured_stream.XXXXXX/tmp/captured_stream.XXXXXX. iled: Xaptured_stream.XXXXXXected hich is: ir("_fd)
cve(02Xhich is: er of threads.etect the number of threads.ect the number of threads.s->close_fd)ads.f  detect the number of threads.d X..) in = -1: 02Xads.threads.yte object <cve(d: t in ... ) failed: ("ch is: ream.XXXXXXetected mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXhdir("ads.reads.ad_fd_ == -1d xception with description "etect the number of threads.aptured_stream.XXXXXXd: e(>close_fd)ject <
ring of xception with description "aptured_stream.XXXXXXted hdir("ected ch is: .XXXXXXrgs->close_fd)string of s.ads.. ads. of .XXXXXX substring of d)s: ailed: xception with description "se_fd)... e object <XXXt the number of threads. ) failed: the number of threads.not ch is: -byte object <ailed: XXXXXread_fd_ == -1. XXXXX-byte object <xecve(: XXetect the number of threads._fd_ == -1er of threads.ect the number of threads./tmp/captured_stream.XXXXXXailed: eption with description "ailed: e number of threads.= -1etected  failed: read_fd_ == -1threads.led: led: ads.object <ads. <>close_fd)... d_stream.XXXXXXeption with description "ject <= -1d: f threads._fd_ == -1ad_fd_ == -1ailed: se_fd)yte object <lose_fd)ubstring of ted red_stream.XXXXXXxception with description "f ) in ch is: led: d) failed: the number of threads.eption with description " detect the number of threads.iled: . lose(args->close_fd)am.XXXXXX of threads. of threads.etect the number of threads.ubstring of iled: rgs->close_fd)aptured_stream.XXXXXXe(ch is: ailed: tured_stream.XXXXXX
 ...) in etected  failed: :  < of ect the number of threads.ch is: e object <reads. failed: string of = -1am.XXXXXXiled: the number of threads.s.(args->close_fd) == -1 ...) in rgs->close_fd)tured_stream.XXXXXXf mp/captured_stream.XXXXXX is: ads.ad_fd_ == -1X02Xe object < ject <reads.yte object < of d_stream.XXXXXXread_fd_ == -1reads.led:  detect the number of threads. is: -byte object <se_fd)failed: xception with description "reads.failed: ect the number of threads. of threads./captured_stream.XXXXXXream.XXXXXXled: XXXXXthreads.ected . hich is: ng of ect the number of threads.++ exception with description "= -1etected e(ed: _fd_ == -1 failed: ream.XXXXXXailed: ) failed:  ...) in not yte object <-1er of threads.in s->close_fd) == -1in reads.s->close_fd)yte object <yte object <. led: eption with description "ed: ject < of threads.mber of threads.Xam.XXXXXXhdir("_fd)string of mp/captured_stream.XXXXXXhdir("ubstring of stream.XXXXXXam.XXXXXXject <iled:  == -1object <t the number of threads..XXXXXXmber of threads.se(args->close_fd)number of threads.s...) in hich is: e object <red_stream.XXXXXXse(args->close_fd)r++ exception with description "s.e(in ected Xmp/captured_stream.XXXXXX...  ...) in ch is: read_fd_ == -1reads.(args->close_fd)reads. iled: ) failed:  ...) in ... the number of threads.ch is: d -byte object <ad_fd_ == -1ad_fd_ == -1led: ected d)d_stream.XXXXXXd) failed: ) in _fd)number of threads.d)led: tured_stream.XXXXXXer of threads.f mber of threads..XXXXXX is: = -1threads.t the number of threads.s.XXXe object <_fd)lose_fd)/tmp/captured_stream.XXXXXXeption with description "am.XXXXXXng of -byte object <not ect the number of threads.xception with description " ... the number of threads. failed: etected xception with description "XXXXstring of led: er of threads./captured_stream.XXXXXXf threads. exception with description "mber of threads.. ect the number of threads.yte object < substring of eption with description "s.-byte object <led: t  == -1Xled: mber of threads.ubstring of  exception with description " rgs->close_fd)ted .XXXXXXted iled: not .XXXXXXtured_stream.XXXXXXaptured_stream.XXXXXXream.XXXXXXobject <read_fd_ == -1ailed: ring of rgs->close_fd)) in = -1se_fd)XXXXX/captured_stream.XXXXXXream.XXXXXXt the number of threads..XXXXXX of threads.er of threads. of in eption with description ">close_fd)-byte object <in mber of threads._fd_ == -1hich is:  of threads.e(number of threads.ect the number of threads.X of threads.reads.) failed: in t threads.d_stream.XXXXXXse(args->close_fd)read_fd_ == -1ads.ir("d_stream.XXXXXXreads.eption with description "_fd)= -1ct <ted ads.ect the number of threads.threads.mber of threads.) failed: . cve(lose_fd)e number of threads. == -1.XXXXXXtured_stream.XXXXXXaptured_stream.XXXXXXng of ..) in d: se(args->close_fd)XXXXXiled: ) in failed: lose(args->close_fd)(args->close_fd)xecve(L"ed: rs->close_fd)s: hich is: threads.. d_ == -1... _fd)reads.ng of not .XXXXXX/tmp/captured_stream.XXXXXX>close_fd)-byte object <d etected ads. detect the number of threads.ring of ) failed: /tmp/captured_stream.XXXXXX detect the number of threads.ject <s.eption with description "failed: ch is: d)se_fd)s: . :  exception with description "hdir("-1tured_stream.XXXXXX02Xlose_fd)e number of threads.xception with description " failed: xception with description "yte object <ring of ect the number of threads.-byte object <am.XXXXXXt  exception with description "= -102Xfailed:  ..) in  detect the number of threads.XXXXXrXXXXX) in rgs->close_fd)_fd_ == -1s->close_fd)ring of 02X <ng of threads.se_fd)/captured_stream.XXXXXXect the number of threads.d: d_ == -1e object <L"xception with description " is: _fd)= -1se(args->close_fd)the number of threads.cve(lose(args->close_fd)not d_stream.XXXXXXect the number of threads.se(args->close_fd)L". xecve(hich is:  detect the number of threads. of /captured_stream.XXXXXX..) in e number of threads.ads. se(args->close_fd)se_fd)... the number of threads.s. == -1ad_fd_ == -1xecve(: failed: ads./tmp/captured_stream.XXXXXXred_stream.XXXXXX substring of  ...) in lose(args->close_fd)ng of  threads.ect the number of threads.in eption with description "s->close_fd) iled: d_ == -1) failed: rgs->close_fd)yte object <reads.t ..) in xecve(>close_fd)rse_fd). yte object <d:  detect the number of threads.object <number of threads...) in  failed: am.XXXXXXs->close_fd)stream.XXXXXXin ad_fd_ == -1iled: f threads.ubstring of ct <) failed: : d)>close_fd)hdir("d_ == -1f threads.s: etect the number of threads.iled: s->close_fd)f lose(args->close_fd)d: 
reads.L"object < == -1eption with description "hdir("d_ == -1= -1ads.s->close_fd)XXXXXmp/captured_stream.XXXXXX of threads.L"am.XXXXXXxecve(led: object < of threads. == -1-1se_fd)ring of e number of threads.XXX>close_fd)("e number of threads. ...) in ubstring of _fd)ct <xecve(>close_fd)Xted the number of threads. of threads.se(args->close_fd)/captured_stream.XXXXXXxception with description "tured_stream.XXXXXXer of threads.ads.ect the number of threads. ... 
 exception with description ":  lose(args->close_fd)am.XXXXXX02X..) in d)ch is: not rt the number of threads.xception with description "rxecve(d)_fd)threads.xception with description "red_stream.XXXXXXs.mber of threads.lose(args->close_fd)red_stream.XXXXXX == -1not d)e object <hdir("string of etect the number of threads.ad_fd_ == -1se_fd)) in  of threads._fd_ == -1s: mp/captured_stream.XXXXXXobject <object < lose(args->close_fd)..) in 
string of hich is: ject <mber of threads. == -1threads./captured_stream.XXXXXXer of threads. of stream.XXXXXXse_fd) exception with description "er of threads.:  detect the number of threads.ring of d_ == -1/tmp/captured_stream.XXXXXX ...) in lose_fd)ed: xception with description "
d)eption with description " == -1iled:  <(args->close_fd)se(args->close_fd) is: ject <f threads.d)ads.xecve( is: yte object <rgs->close_fd)mber of threads.cve( failed: reads.s.ir("lose(args->close_fd)xception with description "/tmp/captured_stream.XXXXXXream.XXXXXX_fd)cve(ad_fd_ == -1read_fd_ == -1d)threads..XXXXXXread_fd_ == -1d_ == -1 ...) in XXXXXrrted xception with description "am.XXXXXXrd)f threads.object <number of threads.hich is: = -1xecve(02X(args->close_fd)ubstring of ted  detect the number of threads.mp/captured_stream.XXXXXX.XXXXXXf threads.f threads.++ exception with description "se_fd)) in d: (args->close_fd)t s: er of threads.: xception with description "not ("tured_stream.XXXXXXobject <in yte object <ad_fd_ == -1_fd) failed: se_fd) failed: er of threads.ng of  <XXXxecve(..) in  ...) in ailed: ("ads.ected  of etect the number of threads.ad_fd_ == -1. (args->close_fd)ads.ng of ... xecve( is: ted .XXXXXXyte object <d_ == -1mp/captured_stream.XXXXXXthreads.s->close_fd)("d) of threads.) failed: ++ exception with description "L"etect the number of threads. of threads.led: d_stream.XXXXXXd reads.s->close_fd)iled: rgs->close_fd)etect the number of threads.s: ct < detect the number of threads. ...) in d: e(. r/captured_stream.XXXXXXubstring of not ject <mp/captured_stream.XXXXXX_fd)string of s->close_fd)cve(not  of ed: ++ exception with description "_fd_ == -1 ect the number of threads.ring of mp/captured_stream.XXXXXXfailed:  failed: >close_fd)... d ect the number of threads.not  substring of  <t the number of threads.tured_stream.XXXXXXstring of Xhdir("..) in cve(ect the number of threads. == -1/tmp/captured_stream.XXXXXXch is: e(stream.XXXXXXect the number of threads. exception with description "d_stream.XXXXXX er of threads.string of f ected yte object <ubstring of object <s->close_fd)hich is: d_ == -1 exception with description "= -1threads.ads.read_fd_ == -1d)threads.threads.e(the number of threads.s: -1L"ected  failed: string of lose(args->close_fd)s: tured_stream.XXXXXX. s: ads.tured_stream.XXXXXX... threads.eption with description "string of reads.object <the number of threads.am.XXXXXX failed: number of threads. ject </captured_stream.XXXXXXiled: /tmp/captured_stream.XXXXXXubstring of f ch is:  of rgs->close_fd)Xch is: ) in rhdir("xception with description "eption with description " failed: s->close_fd)hich is: threads.number of threads...) in mp/captured_stream.XXXXXXreads./captured_stream.XXXXXX>close_fd)ads.s: s./captured_stream.XXXXXXads.failed:  in aptured_stream.XXXXXX failed: ) failed: /captured_stream.XXXXXXetect the number of threads.ubstring of ch is: s: stream.XXXXXX) in : lose_fd)eption with description "read_fd_ == -1ch is: -1etect the number of threads.XXXads. not tured_stream.XXXXXXad_fd_ == -1 of aptured_stream.XXXXXX
d)ct <ir("ject <s->close_fd) . XX++ exception with description "..) in _fd_ == -1s.XXXed: s...) in e object <d: e number of threads.Xe(= -1t the number of threads.Xd_stream.XXXXXXeption with description "++ exception with description "hich is: d XXXcve(mp/captured_stream.XXXXXXe number of threads.. yte object < <
etect the number of threads. of  is:  exception with description "ubstring of rstream.XXXXXXs. == -1d eption with description "e(e object <failed: _fd_ == -1s->close_fd)-byte object <-1stream.XXXXXX is: f etect the number of threads.lose_fd)-byte object <(args->close_fd)not  failed: X..) in f ad_fd_ == -1d)_fd_ == -1ct <ted ads. of led: ) failed: yte object <the number of threads.L"etected lose_fd)reads.rxecve(..) in  detect the number of threads.... am.XXXXXX failed: number of threads.se_fd)02X  detect the number of threads.eption with description "t the number of threads. ...) in ) failed: eption with description "ads.hdir("cve(-byte object <reads.: -byte object < yte object <) in  mber of threads.red_stream.XXXXXXir(") in ++ exception with description "_fd_ == -1reads.: ad_fd_ == -1d ("xception with description "ailed: iled: xecve(s: s.number of threads.r == -1etected mp/captured_stream.XXXXXX) in s->close_fd)ected ted  substring of ads.rt hich is:   == -1s->close_fd)the number of threads. detect the number of threads.not e number of threads.s.t stream.XXXXXXer of threads.number of threads.mber of threads.02Xyte object <  red_stream.XXXXXXads.r == -1..) in  of object <mp/captured_stream.XXXXXXream.XXXXXXhdir("mp/captured_stream.XXXXXX...  detect the number of threads. yte object <not ream.XXXXXX detect the number of threads._fd)_fd_ == -1se_fd)se(args->close_fd)rgs->close_fd)-byte object <L"ed: led: : stream.XXXXXX-byte object <retect the number of threads. < ...) in se_fd)e number of threads.lose_fd)XXXf  of threads.ubstring of ected mber of threads. is: xception with description " detect the number of threads.xception with description "lose_fd)failed: er of threads.in threads.d)ir("e number of threads.s->close_fd)xception with description ">close_fd)_fd)>close_fd)  substring of cve(... d_stream.XXXXXXthe number of threads.number of threads.++ exception with description "s./tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXXad_fd_ == -1mp/captured_stream.XXXXXXreads.
_fd_ == -1
s: ailed: s->close_fd)t the number of threads.hdir(": lose_fd)) in ream.XXXXXXe number of threads.X.XXXXXXXXXxception with description "(args->close_fd) <eption with description "s.eption with description "read_fd_ == -1
-1rgs->close_fd)string of ad_fd_ == -1yte object <ream.XXXXXXt  of threads.XXXXX substring of d)-1 ...) in etect the number of threads. of threads.XXXXX == -1-1) in _fd_ == -1the number of threads.-byte object <led: ) failed: ected ads.02Xf threads.eption with description " substring of number of threads.d_ == -1(args->close_fd)>close_fd).XXXXXXiled: xception with description "rgs->close_fd)d .XXXXXXd)d)
 of = -1d)threads. X) failed:  == -1 is: ng of hdir("t the number of threads. exception with description "_fd_ == -1e object <ads.s.xecve(red_stream.XXXXXXnumber of threads.t the number of threads.ring of etected in the number of threads.XXXXXthe number of threads. == -1e(red_stream.XXXXXXXXXXXed: red_stream.XXXXXXread_fd_ == -1L"s: xception with description "L"e(object <aptured_stream.XXXXXXd)++ exception with description "etected er of threads.e object <) failed: -1t e object <aptured_stream.XXXXXXads.ads.ect the number of threads.reads.e( == -1ected /captured_stream.XXXXXXcve(eption with description "tured_stream.XXXXXXiled: ad_fd_ == -1d_stream.XXXXXX-1d_ == -1ailed: object <lose_fd) of threads. of ed: string of  ...) in /tmp/captured_stream.XXXXXXstream.XXXXXXetect the number of threads.ubstring of ir("Xiled: xecve( ...) in ad_fd_ == -1ring of  is: ++ exception with description "s->close_fd)read_fd_ == -1etect the number of threads.>close_fd)ect the number of threads.f threads.d)d)ring of ad_fd_ == -1t  failed: e object <s...) in ("..) in xecve( failed: d e number of threads.ect the number of threads.ailed: Xs->close_fd)Xct <lose(args->close_fd)ch is: object <s:   detect the number of threads. exception with description "rgs->close_fd)ads.er of threads.ads.rgs->close_fd)xecve(ch is: ailed: t the number of threads.yte object <d:  exception with description " is:  == -1ads. f threads.ct <Xfailed: : ..) in tured_stream.XXXXXX.XXXXXXir("ed: d e object <
) in _fd)rgs->close_fd)red_stream.XXXXXXetected >close_fd)threads.xception with description " rream.XXXXXXct <..) in ect the number of threads.hdir("ir("in  of ect the number of threads.mber of threads.ct <ect the number of threads.ream.XXXXXXse_fd)) failed: d:  detect the number of threads.reads.-1 of threads.tured_stream.XXXXXXf e object <hich is: ected ..) in reads.ream.XXXXXX) failed:  == -1stream.XXXXXXt hdir("not 02X detect the number of threads.er of threads.xecve(d)etected in /captured_stream.XXXXXXr detect the number of threads.f threads.yte object <ad_fd_ == -1_fd) red_stream.XXXXXXyte object <: _fd)aptured_stream.XXXXXXd: -1ed: in d: /tmp/captured_stream.XXXXXX..) in etect the number of threads...) in .XXXXXXer of threads.s->close_fd)-byte object <>close_fd)yte object <ir("(args->close_fd). red_stream.XXXXXXs.e(e(-byte object <ir("Xhich is: ted aptured_stream.XXXXXXads.ject < ir(") failed: not -byte object <ad_fd_ == -1ads.-byte object <reads.... read_fd_ == -1s.in r++ exception with description "-byte object <lose(args->close_fd)t cve(s->close_fd)) failed: ubstring of = -1ad_fd_ == -1d_stream.XXXXXXd_stream.XXXXXXred_stream.XXXXXXad_fd_ == -1 == -1s.read_fd_ == -1rgs->close_fd)ect the number of threads.e object <etected s.Xch is: led: red_stream.XXXXXXhdir("d_stream.XXXXXX_fd_ == -1) in  substring of hich is: ected ted etected am.XXXXXXhich is: _fd_ == -1led: d: stream.XXXXXXse(args->close_fd)d ) failed: (" of threads.e number of threads.Xd_ == -1ject <XXXf threads.er of threads.e number of threads.etected not _fd)yte object <mp/captured_stream.XXXXXXer of threads. == -1aptured_stream.XXXXXXf threads.>close_fd) substring of 02Xmp/captured_stream.XXXXXXyte object <ed: 02X substring of ch is: _fd_ == -1XXXXXobject <s.ect the number of threads.ubstring of reads.  <f threads.s->close_fd)++ exception with description " of ("X-1ected ad_fd_ == -1ads.reads.se_fd)stream.XXXXXXxception with description "string of the number of threads.ct <mp/captured_stream.XXXXXXeption with description "e number of threads.ad_fd_ == -1L" exception with description "/captured_stream.XXXXXXd: d_stream.XXXXXXXs->close_fd)ject <... iled: threads.-byte object < e object <mber of threads.not t  threads.= -1etect the number of threads. substring of s->close_fd)rfailed: er of threads.t the number of threads.
ng of ect the number of threads.f ad_fd_ == -1 of mber of threads.stream.XXXXXX of e(>close_fd)eption with description "d: reads.not ..) in xception with description "XXXected >close_fd)-byte object <d_ == -1Xse(args->close_fd)reads.in .  reads.f iled: yte object < of threads...) in  ect the number of threads. : yte object </captured_stream.XXXXXXfailed: etected mp/captured_stream.XXXXXXct <eption with description "se(args->close_fd) s. of threads.in /tmp/captured_stream.XXXXXX == -1 substring of failed:  se_fd)failed: object <) in e(_fd)_fd): /tmp/captured_stream.XXXXXXled: ubstring of XXX..) in not e(ted ream.XXXXXXxception with description "am.XXXXXX/captured_stream.XXXXXX-byte object <s.e(ect the number of threads.am.XXXXXXse_fd) ...) in ad_fd_ == -1se_fd)the number of threads.ected ads.++ exception with description " reads..XXXXXXct < s.red_stream.XXXXXXcve(ject < of xecve(.  of threads.iled: etected  failed: f threads.) failed: failed: tured_stream.XXXXXXch is: 02Xobject <Xect the number of threads.ected d_ == -1s->close_fd) is: d_stream.XXXXXXch is: in   tured_stream.XXXXXX iled: aptured_stream.XXXXXXt ected ected failed: ted ) in : the number of threads.red_stream.XXXXXXect the number of threads.-1etected . Xailed: ch is: X
string of  ...) in /captured_stream.XXXXXXxecve(eption with description "s.er of threads.yte object <_fd_ == -1e number of threads.d_stream.XXXXXX_fd)t the number of threads.f  threads.f threads.ream.XXXXXXnot XXnumber of threads.xception with description "Xred_stream.XXXXXXL"s.reads.ct <reads.etected lose(args->close_fd)number of threads. of s->close_fd)ir("ubstring of er of threads.stream.XXXXXXf threads.cve( of threads.f ir("ct <hich is: (") in  substring of d_ == -1ream.XXXXXXmber of threads.led: L"s.number of threads.t the number of threads. failed: tured_stream.XXXXXXtured_stream.XXXXXXf threads.reads.ect the number of threads..XXXXXXetected se(args->close_fd) ...) in  <failed: f threads.hich is: etect the number of threads.t red_stream.XXXXXX++ exception with description "e( exception with description " ...) in _fd)d)string of ++ exception with description "in string of xecve( failed:  is: e(-byte object <mp/captured_stream.XXXXXXng of hich is: /tmp/captured_stream.XXXXXXd  is: f -1ring of f threads. exception with description "02Xad_fd_ == -1t the number of threads.reads.rmp/captured_stream.XXXXXXX) failed: aptured_stream.XXXXXX_fd_ == -1string of xecve(>close_fd)++ exception with description "ect the number of threads.xception with description "L"ected ect the number of threads.ected _fd)hdir("e object <reads.reads.ailed: object <s.f se_fd)
lose_fd)cve(/tmp/captured_stream.XXXXXXled: threads.ng of  failed:  substring of d:   -byte object <iled:  ailed:  detect the number of threads./tmp/captured_stream.XXXXXXeption with description "_fd_ == -1s.lose_fd)_fd)se_fd)lose_fd)ect the number of threads.in mp/captured_stream.XXXXXXthe number of threads.read_fd_ == -1e(eption with description "ected ect the number of threads.threads.d_ == -1ream.XXXXXX ch is: d: d 02Xiled: L"(args->close_fd) is:  of threads.xecve(s: ted reads.hich is: ed: r) in /captured_stream.XXXXXXted -byte object <hich is:  of threads.lose_fd)led: : L" substring of 
ream.XXXXXXmp/captured_stream.XXXXXX exception with description "ream.XXXXXXailed:  failed: d stream.XXXXXXaptured_stream.XXXXXXd 
XXX _fd_ == -1("-byte object <ream.XXXXXXxception with description "reads.se_fd)xecve( exception with description "("in L"se_fd)L"ected tured_stream.XXXXXXcve(d threads.
t the number of threads.failed: aptured_stream.XXXXXXd_ == -1mber of threads.in ng of se(args->close_fd) ...) in  of threads.t xception with description " failed: /tmp/captured_stream.XXXXXXam.XXXXXX exception with description "hdir("ailed: yte object <Xetect the number of threads.d_ == -1etected  of XXXXXring of cve(ct <hdir("/tmp/captured_stream.XXXXXXring of ject < < detect the number of threads.s.d ed: string of ect the number of threads.) in threads.ream.XXXXXXhdir("threads. aptured_stream.XXXXXX exception with description "mber of threads.s.-1XXXfailed: ..) in r..) in ) failed: ad_fd_ == -1 substring of number of threads.ected f aptured_stream.XXXXXXs->close_fd)xception with description "f threads.read_fd_ == -1>close_fd)ed: ailed:  failed: etect the number of threads.Xect the number of threads.d:  of threads.threads.threads.Xe object <... xecve(X.XXXXXX is: ir("read_fd_ == -1aptured_stream.XXXXXX++ exception with description "stream.XXXXXX. t XXXXXrgs->close_fd)d)d)_fd_ == -1ailed:  == -1L"ads.se(args->close_fd)_fd_ == -1ted  == -1/captured_stream.XXXXXXmber of threads.) in s.f threads...) in _fd_ == -1d lose(args->close_fd)lose(args->close_fd) d_stream.XXXXXX02Xxecve(xecve(d ... mp/captured_stream.XXXXXX_fd_ == -102Xthreads.d_stream.XXXXXXred_stream.XXXXXXthreads.read_fd_ == -1er of threads.
red_stream.XXXXXXobject <ected  <threads.er of threads.e(rgs->close_fd)ad_fd_ == -1mp/captured_stream.XXXXXX of threads.t ream.XXXXXXre object <e object <L" is: /tmp/captured_stream.XXXXXXream.XXXXXXer of threads.lose_fd)/tmp/captured_stream.XXXXXXe object <X... _fd_ == -1ject <threads.
/captured_stream.XXXXXXch is: ring of e object <ch is: d:  of  of threads.s.ed:  == -1xception with description "hdir("eption with description "string of in yte object <d_ == -1) in ubstring of  ...) in  of threads.ted  of s.led: tured_stream.XXXXXXlose(args->close_fd). _fd_ == -1ring of in ed: ed: ream.XXXXXXted s.f am.XXXXXX) in ailed: aptured_stream.XXXXXXcve(ream.XXXXXXetected ject <ed: ) failed: (args->close_fd) of e number of threads.ected ch is:  substring of >close_fd)er of threads.not ) in  <L"t  >close_fd)ream.XXXXXXe number of threads.eption with description "e number of threads.s.s.ject <e object <... ct <not /tmp/captured_stream.XXXXXXrgs->close_fd)>close_fd)ject <ct <mp/captured_stream.XXXXXXstring of aptured_stream.XXXXXXreads.t the number of threads.f threads.
ailed: er of threads._fd)string of .XXXXXX exception with description "reads.s.ct <s: read_fd_ == -1xecve(t the number of threads.failed: d: threads.d_stream.XXXXXXs.ng of 02Xd_stream.XXXXXX/tmp/captured_stream.XXXXXXed: -1) failed: ream.XXXXXXiled: ir("yte object <er of threads.read_fd_ == -1ect the number of threads.d_stream.XXXXXXnumber of threads. ...) in ir(" the number of threads.ad_fd_ == -1hdir("lose_fd) is: _fd_ == -1ads...) in se_fd)e(in ) in f threads.lose_fd)..) in ubstring of ... .XXXXXXeption with description " tured_stream.XXXXXXhdir("xecve(s: tured_stream.XXXXXXtured_stream.XXXXXXt the number of threads.se(args->close_fd)/captured_stream.XXXXXXthreads.XXXXX . mber of threads.ir(". number of threads.rxception with description "XXXXXrgs->close_fd)tured_stream.XXXXXX-1 failed: ct <number of threads.reads.s: yte object <se_fd)etected string of se(args->close_fd)-byte object <ad_fd_ == -1/captured_stream.XXXXXX exception with description "rgs->close_fd)ng of ads. ect the number of threads.d ng of number of threads.mber of threads.s: ream.XXXXXX == -1t the number of threads. == -1yte object <d_stream.XXXXXX..) in ++ exception with description "yte object <f -1>close_fd)= -1rgs->close_fd)etected led: s: XXXXX-1) in stream.XXXXXXstream.XXXXXX ...) in t the number of threads.lose_fd)xception with description "s. exception with description " ring of  (args->close_fd)object <se(args->close_fd)/tmp/captured_stream.XXXXXX: stream.XXXXXXthreads.) failed: s. exception with description "ailed: s: ed: (args->close_fd)_fd_ == -1d_stream.XXXXXXe(reads.: ad_fd_ == -1ir("f iled:  is: s->close_fd)tured_stream.XXXXXXe number of threads.>close_fd)e object <red_stream.XXXXXXnot (args->close_fd)f threads.02X of threads.: string of . = -1 exception with description "t ch is: failed: mp/captured_stream.XXXXXXng of  exception with description "d_ == -1Xmp/captured_stream.XXXXXX substring of _fd_ == -1Xch is: led:  ads.ram.XXXXXX(args->close_fd) of ream.XXXXXX(" of threads.d: xecve(e object <er of threads.ailed: /tmp/captured_stream.XXXXXXam.XXXXXXs.e(-1ads.f xception with description " failed: ..) in lose(args->close_fd).XXXXXXs.: X_fd_ == -1reads.tured_stream.XXXXXX failed: /captured_stream.XXXXXX... s->close_fd)threads.e object <eption with description "ad_fd_ == -1ct <eption with description "f _fd) substring of ++ exception with description "= -1f threads._fd)etect the number of threads.tured_stream.XXXXXXd: etect the number of threads.XXX-1ads. ad_fd_ == -1d ch is: d_ == -1 is: etected -byte object <L"e(t the number of threads...) in ream.XXXXXXyte object <etected .  <rgs->close_fd) == -1Xlose(args->close_fd)e object <threads.iled: ch is:  failed: s.d_stream.XXXXXXreads.ng of threads.ad_fd_ == -1yte object <(args->close_fd)reads.("read_fd_ == -1ect the number of threads...) in .XXXXXX) failed: ted d 02Xeption with description "ubstring of  exception with description "ailed: ir("er of threads.e number of threads.ad_fd_ == -1. XXXXXlose(args->close_fd)reads..XXXXXXream.XXXXXX <.XXXXXXread_fd_ == -1stream.XXXXXXd_ == -1 detect the number of threads.lose(args->close_fd) == -1... d_ == -1threads.XXXailed:  ir("02X: 
ected Xe object < is: ad_fd_ == -1e( exception with description " substring of (args->close_fd)in red_stream.XXXXXX ...) in lose(args->close_fd)ad_fd_ == -1.XXXXXXs.) in t  of threads. ...) in riled: threads. of threads. is: led: t cve(ream.XXXXXX
L" substring of XXXailed: /tmp/captured_stream.XXXXXXd: string of /captured_stream.XXXXXX == -1d mp/captured_stream.XXXXXXthreads.etected ) in se(args->close_fd) of threads.iled:  object <Xad_fd_ == -1(args->close_fd)ect the number of threads.ir("d_stream.XXXXXXct < ...) in ected Xread_fd_ == -1. threads.f stream.XXXXXXch is: XXXse_fd)ads.s->close_fd)L"the number of threads.s.e number of threads.se_fd)reads.not  == -1rgs->close_fd)d)e number of threads.e( ...  detect the number of threads.e(ch is: = -1ad_fd_ == -1. e( is: s->close_fd) ...) in -1ng of  <XXX failed: se_fd)... reads.f not XXXXXetected d: se(args->close_fd)XXXXXL") failed: xception with description "ected XXXnot ad_fd_ == -1ted ected = -1s: ) failed: s: XXXXX02Xetect the number of threads.not XL"the number of threads.ring of Xthreads.red_stream.XXXXXX(args->close_fd)threads.ect the number of threads.object <...  is: _fd)t the number of threads.mber of threads.in e(= -1Xer of threads.s:  of threads. <object <in d_ == -1ad_fd_ == -1ir("threads.ir("d) exception with description " of in e number of threads.>close_fd)the number of threads. == -1object <tured_stream.XXXXXXted . ir("ream.XXXXXXd_stream.XXXXXXlose_fd)("etect the number of threads.) failed:  == -1number of threads.02Xyte object <ads.iled: 
XXXXX/captured_stream.XXXXXXir("(args->close_fd)_fd_ == -1ct <er of threads.d ..) in e number of threads. of  of s.>close_fd)iled: ailed: f iled:  r f ("/captured_stream.XXXXXXse_fd)mber of threads.... _fd)stream.XXXXXXream.XXXXXXir(" is:  of threads.ected number of threads.led: L"ch is: s.X of threads.string of s->close_fd)... tured_stream.XXXXXXyte object </captured_stream.XXXXXXeption with description "++ exception with description "  failed: rgs->close_fd)d_ == -1s: er of threads.ect the number of threads.ailed: _fd)hich is: (args->close_fd)ailed: in XXXXXstring of :  of threads. of iled: cve(se_fd)reads.reads._fd)e( failed: red_stream.XXXXXXeption with description "..) in ted Xhich is: reads.e number of threads. ed: ad_fd_ == -1number of threads.am.XXXXXXnot lose_fd)t read_fd_ == -1ted mber of threads.ject < failed: f threads.XXXXXmp/captured_stream.XXXXXX_fd_ == -1f threads.lose_fd)XXXXXnot am.XXXXXXnot f threads.X-1tured_stream.XXXXXX.XXXXXXlose_fd)se_fd)02X/captured_stream.XXXXXX(args->close_fd)_fd)ct <ted am.XXXXXXXf (args->close_fd)r..) in not s.am.XXXXXXnumber of threads.the number of threads.the number of threads...) in er of threads.= -1t the number of threads.rgs->close_fd) of xception with description "X/captured_stream.XXXXXX..) in f threads.cve(ir("rgs->close_fd) of f hdir("etect the number of threads.yte object <mp/captured_stream.XXXXXXX/tmp/captured_stream.XXXXXX.XXXXXXhich is:  <etected not >close_fd)XXXXXiled:  detect the number of threads.("d) == -1_fd_ == -1e object <ads.Xring of  of threads.not ads.number of threads.rs.stream.XXXXXXxecve(lose_fd)d_stream.XXXXXX ) failed: ("L"f >close_fd)ch is: ng of etect the number of threads.ch is:  of e number of threads.xception with description "Xstring of ) in ... mp/captured_stream.XXXXXXed: se(args->close_fd)ected  <ected .  failed: ng of  substring of e object <. ch is: _fd_ == -1_fd)_fd)lose_fd)/captured_stream.XXXXXXe number of threads.ads.>close_fd) of ads.ect the number of threads.e(d ) in the number of threads.tured_stream.XXXXXX. er of threads.am.XXXXXX_fd_ == -1("mber of threads.) failed: etect the number of threads.Xe(ad_fd_ == -1ect the number of threads.not ) failed: mber of threads.s: string of stream.XXXXXX of threads.s->close_fd)d_ == -1) failed: ch is: XXXX substring of  is: mber of threads. substring of ring of xception with description "read_fd_ == -1d_stream.XXXXXX
 read_fd_ == -1ads. substring of ailed: d)("ads./tmp/captured_stream.XXXXXX of threads.X detect the number of threads.: .XXXXXXthreads. ect the number of threads.02X("
led: threads.er of threads.in the number of threads.string of mber of threads.not s.= -1threads.>close_fd)e object <ct <d)/captured_stream.XXXXXXed:  of threads.ected  substring of ailed: ("ect the number of threads. rad_fd_ == -1 of e(s.e number of threads.reads.failed: se_fd)d: d)yte object < rream.XXXXXXin mber of threads.failed: ++ exception with description "eption with description "etect the number of threads.not lose(args->close_fd)... ch is: ad_fd_ == -1the number of threads.) in am.XXXXXXmp/captured_stream.XXXXXXled: xception with description "read_fd_ == -1 of threads.d  of threads.the number of threads.... not the number of threads.s: d)ir("mp/captured_stream.XXXXXXe object <s./captured_stream.XXXXXXrs.d)threads.  of threads.ect the number of threads.ream.XXXXXXX>close_fd)(args->close_fd)
t hdir("hich is: ject <ir("se_fd)/captured_stream.XXXXXXam.XXXXXX= -1 of threads. threads.string of t ubstring of d)XXXXXstring of -1ected .XXXXXX/tmp/captured_stream.XXXXXXthe number of threads.s: X ...) in ... threads.object <se_fd)>close_fd)_fd_ == -1e number of threads.-byte object <etect the number of threads.s: read_fd_ == -1 yte object <02X) in ailed: in se_fd)ir(" iled: d)t the number of threads.ected ject <mber of threads._fd_ == -1rgs->close_fd) of string of read_fd_ == -1..) in ir("ject <_fd) == -1ad_fd_ == -1xception with description "ad_fd_ == -1se(args->close_fd)d_ == -1ct <string of read_fd_ == -1read_fd_ == -1ring of eption with description "s->close_fd)threads. of threads.d)d: >close_fd)>close_fd)not ) failed: ("d_stream.XXXXXXect the number of threads.xecve( detect the number of threads.re( e(..) in hdir("ream.XXXXXXXXX..) in cve(ir("ch is: threads.e number of threads.tured_stream.XXXXXXred_stream.XXXXXXam.XXXXXXs.failed: ..) in rs->close_fd)etected lose_fd)
d: led: er of threads.f threads. == -1mp/captured_stream.XXXXXX. XXX <s.ailed: d)f threads. substring of /tmp/captured_stream.XXXXXXlose_fd)
ubstring of d: f threads.se(args->close_fd)X>close_fd)) in the number of threads.ads.L" etected t the number of threads.tured_stream.XXXXXX of ("read_fd_ == -102Xlose_fd)se(args->close_fd)  mp/captured_stream.XXXXXX
d_stream.XXXXXXhdir(":  substring of ads.hich is: ir("s.t aptured_stream.XXXXXXted s: ++ exception with description "(" ...) in rgs->close_fd)Xmber of threads. failed: ) failed: 02Xtured_stream.XXXXXXetected number of threads.f d rgs->close_fd)hich is: _fd_ == -1xception with description "ubstring of XXXetect the number of threads.s.object <
 substring of  (args->close_fd)f -1 led:  ...) in r is: 02Xaptured_stream.XXXXXXad_fd_ == -1ected number of threads.red_stream.XXXXXXled: se_fd)XXXXstring of Xct <..) in ubstring of threads.ir("d L"Xcve(hich is: ad_fd_ == -1the number of threads.ailed: red_stream.XXXXXXaptured_stream.XXXXXXrgs->close_fd)) in .  <hich is: XXXch is: lose(args->close_fd)++ exception with description "d_stream.XXXXXXe object <_fd)02Xch is: d_stream.XXXXXXted -byte object <iled: object <ring of ted ir("ed: ct <++ exception with description ".XXXXXXxecve(number of threads.the number of threads.Xf threads.ct <t f threads./captured_stream.XXXXXXmp/captured_stream.XXXXXX/captured_stream.XXXXXXf threads.xecve(etect the number of threads.-byte object <the number of threads.hdir("ailed: er of threads.aptured_stream.XXXXXXled: ("Xad_fd_ == -1.XXXXXXream.XXXXXXse_fd)mber of threads.++ exception with description " 02Xhich is: _fd_ == -1failed: red_stream.XXXXXXe object <++ exception with description "xecve(xecve(hich is: . d)t L"L"tured_stream.XXXXXXject <
the number of threads.aptured_stream.XXXXXX) in ject < == -1ch is: s.ir("hich is: reads.-byte object <threads.yte object <iled: ailed: in yte object <led: f threads.XXXe(t the number of threads.
 failed: etected ) in aptured_stream.XXXXXX: aptured_stream.XXXXXXread_fd_ == -1the number of threads.eption with description ">close_fd)d: f ) in _fd)02Xmber of threads.f : d)threads.ed: ubstring of /tmp/captured_stream.XXXXXXxception with description "mp/captured_stream.XXXXXX  detect the number of threads._fd): -byte object <s->close_fd) of e number of threads.mp/captured_stream.XXXXXXXXXXX.XXXXXXeption with description "mber of threads.in am.XXXXXXct < failed:  of ch is: s. ch is:  substring of _fd)ad_fd_ == -1
 ...) in ed: s->close_fd)...  number of threads.number of threads.e number of threads.e object < of XXXXXL"threads.ch is:  detect the number of threads.t d_ == -1 failed: 
..) in number of threads. ...) in  exception with description "= -1_fd_ == -1in ailed: f  is: xecve(reads.d)ir("("not failed: /tmp/captured_stream.XXXXXX_fd)d d_ == -1threads.ected mber of threads..XXXXXX) failed: ir("threads.ected t ad_fd_ == -1lose(args->close_fd)er of threads.hdir("XXXXXe object <(args->close_fd)++ exception with description "-1) failed: hich is: t ed: reads.lose(args->close_fd): iled: ected etected L"++ exception with description ") failed: ring of am.XXXXXXXXXXXled:  == -102XX. se(args->close_fd)cve(/captured_stream.XXXXXXxecve( of threads.ring of /tmp/captured_stream.XXXXXXnot ads.f lose(args->close_fd)Xect the number of threads.X..) in hdir("d_stream.XXXXXXd_stream.XXXXXXring of t failed: e number of threads.Xlose(args->close_fd) ...) in stream.XXXXXXxception with description "f  of threads. of threads.the number of threads.etected ject <++ exception with description " == -1object < detect the number of threads.lose(args->close_fd)xecve( of threads.ring of -byte object < substring of lose_fd)ct <e object < of tured_stream.XXXXXXd_stream.XXXXXXL"ring of string of -1etected f xecve(hich is: ream.XXXXXXthreads.. object <) failed: : led: aptured_stream.XXXXXXmber of threads.lose_fd)etect the number of threads.ch is: tured_stream.XXXXXXct <the number of threads.red_stream.XXXXXX exception with description "ct <>close_fd)hich is: lose(args->close_fd) exception with description "
d: failed:  of threads. is: number of threads.threads. detect the number of threads.ads.red_stream.XXXXXXct <hdir("mp/captured_stream.XXXXXXlose_fd)etect the number of threads. <etected Xnot Xs.threads.se_fd)("hich is: string of er of threads.ected eption with description "Xse(args->close_fd)read_fd_ == -1 e(-byte object <se(args->close_fd)ailed:  substring of e(aptured_stream.XXXXXX: am.XXXXXX= -1iled: ..) in d: /captured_stream.XXXXXXs.se_fd)tured_stream.XXXXXX-byte object <: hich is: object <e(xecve(f threads.s.failed: ubstring of failed: s.mp/captured_stream.XXXXXXxecve((args->close_fd)xception with description "etected d)e number of threads.object <: -byte object <(args->close_fd)etect the number of threads.e number of threads.XXXXXailed: d ) in Xstring of ected etect the number of threads.ubstring of ads.threads./tmp/captured_stream.XXXXXXyte object <object <in  failed: hich is: s: red_stream.XXXXXXXXXe number of threads.reads.. (" < < failed: = -1ailed: cve( is: xception with description "f threads.er of threads.in : ad_fd_ == -1t  s->close_fd)ring of L"ream.XXXXXXin _fd_ == -1) failed: number of threads. failed: d ailed: se_fd)-byte object < .XXXXXX failed: ed: ring of ..) in se_fd) == -1rads.: Xnot ailed: XXXXXlose_fd)mber of threads. <X_fd)(args->close_fd) of  <ch is: ad_fd_ == -1t the number of threads.  ailed: ir(": aptured_stream.XXXXXX) in xecve(d ++ exception with description "ring of threads.cve(number of threads.. threads.ted eption with description "reads.ubstring of d)ected ailed: etected  substring of 
read_fd_ == -1-byte object <X of e(the number of threads.ct <iled: _fd)XXXeption with description "ads. substring of Xd_stream.XXXXXX failed: in ads.xception with description "e object <ed: d: cve(am.XXXXXXin eption with description " detect the number of threads.not d ted rgs->close_fd)rgs->close_fd)object <ream.XXXXXXs.threads. of threads.-1the number of threads.f tured_stream.XXXXXXrgs->close_fd)e object <lose(args->close_fd) detect the number of threads..  ads.red_stream.XXXXXX number of threads.er of threads.: lose_fd)s: ch is: /captured_stream.XXXXXX/tmp/captured_stream.XXXXXXse(args->close_fd)e object <ted read_fd_ == -1string of mber of threads.etect the number of threads.s.ng of XXXXX(args->close_fd)se(args->close_fd)++ exception with description "yte object <reads.-byte object <er of threads.ct <d e(e number of threads...) in ir("se(args->close_fd)etected e number of threads.rgs->close_fd)threads.failed: reads.XXXetect the number of threads./captured_stream.XXXXXX detect the number of threads. substring of etected number of threads.. t the number of threads.ailed: stream.XXXXXX-byte object <("t the number of threads.hdir("string of d)railed: xception with description "s.ad_fd_ == -1e(failed: am.XXXXXXng of d_stream.XXXXXXect the number of threads.hdir("s: object </tmp/captured_stream.XXXXXX detect the number of threads.= -1ed: hich is: s->close_fd)lose(args->close_fd) ring of etected /captured_stream.XXXXXX == -1..) in ct <e(etected /captured_stream.XXXXXXd_stream.XXXXXXads.number of threads.hdir("the number of threads.rgs->close_fd)eption with description "reads._fd)ng of stream.XXXXXXected  of read_fd_ == -1in f threads.XXXXX ect the number of threads.
failed: string of  failed: failed: threads.= -1ch is: ad_fd_ == -1ubstring of ir("stream.XXXXXXed: : in ir(" failed: yte object <d_stream.XXXXXX) failed: lose(args->close_fd)number of threads.xception with description "= -1ad_fd_ == -1s->close_fd) == -1(args->close_fd)er of threads. substring of string of reads.ject <d  of threads.ads.
lose(args->close_fd)... t ("read_fd_ == -1threads.er of threads. <: ) failed: hich is:  of threads. exception with description "Xd:  == -1Xetect the number of threads.
: am.XXXXXXe number of threads.eption with description "e number of threads.ring of ct <hich is: ect the number of threads.am.XXXXXXad_fd_ == -1ng of = -1s.= -1= -1: Xer of threads.: s.stream.XXXXXXted in e object <X) failed: e number of threads.XXXXX) failed: ad_fd_ == -1ed: rgs->close_fd)se_fd)++ exception with description "number of threads. ...) in L"er of threads._fd_ == -1 == -1f in se_fd)XXXXX of threads..XXXXXXect the number of threads. ...) in ) failed: iled: ++ exception with description "er of threads.ct <xecve(ubstring of am.XXXXXX... 02X(args->close_fd) is: mber of threads.se_fd)L"ailed: ) in ect the number of threads.ir(" of threads.er of threads._fd)rgs->close_fd)not led: /captured_stream.XXXXXXer of threads.= -1ng of ..) in ... 02Xs->close_fd)in e object <iled: se(args->close_fd) substring of X reads...) in xception with description "ads.ream.XXXXXXt the number of threads. of threads.se_fd)ng of ) failed: ng of   ...) in ads.ads./captured_stream.XXXXXXse(args->close_fd)threads.-1 XXXXX>close_fd)led: t the number of threads.-1) in reads.ect the number of threads.reads.>close_fd)s.object <.XXXXXXect the number of threads.string of e number of threads.XXX>close_fd)++ exception with description " <d)e object <("("s: f in xecve(aptured_stream.XXXXXXream.XXXXXXstream.XXXXXXs->close_fd)d).  e(se_fd)ring of d_ == -1 < of red_stream.XXXXXXxception with description "failed: ring of d) ...) in threads.etected in cve(_fd)threads.read_fd_ == -1ected >close_fd)e number of threads.er of threads. failed: etect the number of threads.the number of threads.t XXXXXe(d e number of threads.mber of threads.s.ubstring of  of eption with description "s->close_fd)mp/captured_stream.XXXXXX++ exception with description "se_fd)er of threads. == -1f threads.ct <ubstring of  of ads.) failed: :  is: se_fd)++ exception with description " substring of se_fd) ed:  <ads.etected not ... _fd)led: mber of threads.ads.s:  failed: X= -1s.led: d rgs->close_fd)) in ed: XXXXX.   failed: = -1d_stream.XXXXXXryte object <the number of threads.ailed: mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXed: /tmp/captured_stream.XXXXXXL"ected XXXXX detect the number of threads.aptured_stream.XXXXXXthreads.++ exception with description "ads. exception with description ".XXXXXXyte object <t the number of threads.-1>close_fd)object <t the number of threads...) in threads.ads.lose(args->close_fd)threads.Xobject <am.XXXXXX exception with description " of threads.(" ...) in  == -1f  of ected d_stream.XXXXXXled: ) in not d_stream.XXXXXXreads.the number of threads.) failed: ) failed: reads.ect the number of threads.... xecve(ected etect the number of threads.= -1in  threads./captured_stream.XXXXXXd_stream.XXXXXXthe number of threads./tmp/captured_stream.XXXXXXthe number of threads.threads.xecve(ch is: ed: d_ == -1++ exception with description "XXX-1etected XXX ...) in in yte object <ir(" == -1 ads.ailed: (args->close_fd)led: eption with description "ailed: rgs->close_fd)etected reads.d_stream.XXXXXXlose(args->close_fd) <mber of threads.se(args->close_fd)ring of  is:  of threads.... ject <) in >close_fd)-byte object <.XXXXXXobject < f failed: string of = -1ir("/tmp/captured_stream.XXXXXXlose_fd)-1ng of ir("... /captured_stream.XXXXXX-byte object <f . ) failed: ct <r_fd_ == -1 ed: led:  of threads.s.02X substring of threads.string of /captured_stream.XXXXXXled: ed: yte object <ected eption with description "ir("d_stream.XXXXXXs.... ubstring of in er of threads.) failed: t the number of threads.e number of threads.se_fd)ect the number of threads.ir("_fd_ == -1number of threads.f  ...) in  of threads.yte object <mber of threads.red_stream.XXXXXX02Xe object <ubstring of t the number of threads.ads.. etected Xect the number of threads.etect the number of threads.se(args->close_fd)/captured_stream.XXXXXXected ject <cve(Xmp/captured_stream.XXXXXX == -1lose_fd)d: t the number of threads.rect the number of threads.ng of ct <-1++ exception with description "ir("= -1rin reads. substring of 
se_fd)tured_stream.XXXXXXs->close_fd)d read_fd_ == -1ailed:  is: er of threads.hich is: Xetect the number of threads.reads./tmp/captured_stream.XXXXXXd mp/captured_stream.XXXXXXlose(args->close_fd)lose(args->close_fd)in /tmp/captured_stream.XXXXXXXXXnumber of threads. of threads.ubstring of t the number of threads.number of threads.ted ++ exception with description " ...  ...) in xception with description "ted ailed: ... tured_stream.XXXXXXyte object <X/captured_stream.XXXXXX of ads.cve(object <red_stream.XXXXXX_fd)rse_fd)L"aptured_stream.XXXXXXream.XXXXXXe number of threads.hdir("mber of threads.ubstring of /tmp/captured_stream.XXXXXX..) in in  <iled: eption with description "object <>close_fd)ad_fd_ == -1threads.: am.XXXXXXs.etect the number of threads. d)XXXXX= -1
 == -1(args->close_fd)ected  detect the number of threads.ct <xecve(ng of s: X of threads.d)f ed: tured_stream.XXXXXXread_fd_ == -1 se_fd)e(s: ("ted ted -1ailed: _fd) exception with description "se_fd)-1 == -1= -1d: ubstring of s.02Xthreads.er of threads.f -1threads. of the number of threads.rgs->close_fd)string of se(args->close_fd)(args->close_fd)..) in stream.XXXXXX++ exception with description " < ...) in Xnot  of yte object <xecve(not in the number of threads..XXXXXX exception with description "-1: etect the number of threads.ring of >close_fd)t : . xecve(ir("ted s->close_fd)er of threads.xception with description "ject <reads...) in (args->close_fd)threads.= -1e object <ect the number of threads.er of threads.number of threads.ad_fd_ == -1ubstring of d_ == -1ubstring of eption with description "object < 
ted yte object <failed: threads. lose(args->close_fd)xception with description " <s->close_fd) <ject <tured_stream.XXXXXXstream.XXXXXXt the number of threads.ailed:  of iled: se(args->close_fd)d_stream.XXXXXXd)se(args->close_fd)= -1Xs->close_fd)  -1se_fd)s->close_fd)s.
lose(args->close_fd)ject <rgs->close_fd)number of threads.-1ed: lose(args->close_fd)ed:  ...) in er of threads.ring of ring of mp/captured_stream.XXXXXX of lose(args->close_fd)er of threads.
se_fd)rd_stream.XXXXXXads.= -1tured_stream.XXXXXX) in red_stream.XXXXXXetected am.XXXXXXyte object <ir(" of  exception with description "f threads.d_ == -1d_ == -1rgs->close_fd)the number of threads.failed: Xt number of threads.s: ) failed: s.L"ream.XXXXXXt ream.XXXXXXlose(args->close_fd)the number of threads.red_stream.XXXXXXad_fd_ == -1ubstring of reads.read_fd_ == -1mp/captured_stream.XXXXXXted t the number of threads.>close_fd)yte object <yte object <reads.f -byte object <s->close_fd)ailed: .XXXXXXreads.red_stream.XXXXXXected /tmp/captured_stream.XXXXXXs.number of threads.threads.string of  _fd_ == -1f threads.e(ubstring of Xtured_stream.XXXXXXailed: read_fd_ == -102X
Xstream.XXXXXX detect the number of threads.ng of e(ng of ted reads.the number of threads.ream.XXXXXXam.XXXXXXt the number of threads.object <etect the number of threads.d read_fd_ == -1 ...  of s.s. detect the number of threads.ject <object <d)se(args->close_fd)s.iled: mp/captured_stream.XXXXXXted ) failed: /captured_stream.XXXXXXxception with description "ir("d yte object <xception with description "(args->close_fd) failed: lose_fd)Xct <mber of threads.ed: ad_fd_ == -1hdir("ailed: ted t ("/tmp/captured_stream.XXXXXX </tmp/captured_stream.XXXXXX= -1mber of threads.) in ... t ..) in ubstring of X("f threads.ream.XXXXXXubstring of d: 02Xubstring of d)e(read_fd_ == -1e(ad_fd_ == -1object <led: e object <.  of ng of ubstring of d)ng of _fd)ct <ected -byte object <rgs->close_fd).XXXXXXted  is: t >close_fd)f ubstring of s.L"lose_fd)ubstring of hich is: s.threads.d: . f threads.reads.t (args->close_fd)
  substring of aptured_stream.XXXXXXthe number of threads.(args->close_fd)s.read_fd_ == -1e(ct <am.XXXXXXch is: iled: rgs->close_fd). am.XXXXXX(args->close_fd)ailed: r("the number of threads.t ad_fd_ == -1er of threads.reads.er of threads.the number of threads. ...) in  am.XXXXXXch is: t cve( == -1failed: red_stream.XXXXXXir("number of threads.ads.read_fd_ == -1 == -1string of ect the number of threads.etected xception with description "object <in  s->close_fd) -byte object <f threads.iled: L"ream.XXXXXXs.tured_stream.XXXXXXad_fd_ == -1d: d: hdir(" is: the number of threads.read_fd_ == -1ailed: /captured_stream.XXXXXXect the number of threads.rubstring of L"s: ads. e number of threads.: >close_fd)mp/captured_stream.XXXXXX substring of etect the number of threads.L" substring of ring of 02X.XXXXXXcve(ject <string of  of ..) in  se(args->close_fd)red_stream.XXXXXX/captured_stream.XXXXXXubstring of etected ...  <ubstring of ct <ng of threads. detect the number of threads. exception with description "xception with description "-byte object <iled: ad_fd_ == -1ted  f threads.d)etect the number of threads.ct < of threads.s: am.XXXXXX of threads.XXX/tmp/captured_stream.XXXXXXubstring of tured_stream.XXXXXXriled: the number of threads.ad_fd_ == -1f ailed: ch is: ubstring of t the number of threads..XXXXXXled: led: ... -1 ...) in ubstring of  substring of se(args->close_fd)e object < 
threads.d_stream.XXXXXXnumber of threads.-1xception with description "ads.ads.s./captured_stream.XXXXXXe(e(e number of threads.XXXXXXXXject <in aptured_stream.XXXXXX(". reads.ailed: e(ected X(" detect the number of threads._fd)) failed: rads.ct <aptured_stream.XXXXXXlose_fd)f ected reads.led: _fd)etected XXXhdir("rstream.XXXXXX>close_fd) is: ed: etect the number of threads.etected ted  failed: yte object <d_stream.XXXXXXir("reads.("
tured_stream.XXXXXXiled: _fd)se_fd)) in ct <) failed:  of threads. ected ring of lose_fd)e( of s.f threads.hich is: ir("ads.failed: failed: ++ exception with description "-byte object <object <cve(threads.d)ng of in hdir("ads.s:  </captured_stream.XXXXXX>close_fd)reads.yte object <t se_fd).  ...) in threads.etected f threads. ...) in ng of failed: d_stream.XXXXXX failed: aptured_stream.XXXXXXch is: >close_fd)reads. is: in reads.read_fd_ == -1ring of failed: object <tured_stream.XXXXXX/captured_stream.XXXXXX ...) in s. <ted  of  ...) in ("iled: f threads.-byte object <object <object <02X ...) in ct <_fd_ == -1ream.XXXXXXfailed: ch is: ected /captured_stream.XXXXXXs.iled: /tmp/captured_stream.XXXXXX of ect the number of threads.("d_stream.XXXXXX(args->close_fd)e object <rgs->close_fd)++ exception with description "etected etect the number of threads.er of threads.
ct <("d_stream.XXXXXXe(hdir("reads.not ng of reads.number of threads.mber of threads.:  of threads.Xs:  detect the number of threads.) failed: er of threads.mp/captured_stream.XXXXXX++ exception with description "read_fd_ == -1s. ...) in number of threads.led: the number of threads.XXXXXXXXir("Xetect the number of threads.) failed: lose_fd) of not ) failed: ch is:  am.XXXXXXd)lose_fd)am.XXXXXXe(ch is: tured_stream.XXXXXXXXXXXrgs->close_fd)red_stream.XXXXXXted reads.threads. failed: ubstring of eption with description "s.mber of threads.
(" etect the number of threads.object <ng of d_ == -1reads.("read_fd_ == -1eption with description "ads. 02X of  exception with description "XXXXXxception with description "e object <ct <tured_stream.XXXXXX("ir("red_stream.XXXXXX... ected  is: lose_fd)ng of : se_fd)ct < /tmp/captured_stream.XXXXXXailed: d_stream.XXXXXXt the number of threads. ...) in  is:  d xception with description ". XXX.XXXXXXream.XXXXXXe number of threads.ad_fd_ == -1 ream.XXXXXXetected er of threads.02Xmber of threads.r++ exception with description "am.XXXXXXhdir("xecve( of the number of threads.hdir("mber of threads. <ng of L"t reads.-1) failed:  of not lose(args->close_fd)the number of threads.XXXXXnumber of threads.
mber of threads.-byte object <e object <
lose(args->close_fd)s: ) in d  ected  exception with description "e object <hich is:  substring of ) in string of L"t the number of threads.mber of threads.ring of ed:  .XXXXXXer of threads.-1 is: s.mp/captured_stream.XXXXXXreads.lose(args->close_fd)ream.XXXXXXhich is: ring of 02Xng of ch is: f  of /captured_stream.XXXXXX exception with description "s: ubstring of number of threads.rd_stream.XXXXXXnot eption with description "iled:  of iled: se(args->close_fd)string of (" : ed: ng of  == -1++ exception with description "etected d ring of er of threads.s: mber of threads. reads.read_fd_ == -1
eption with description " substring of f ubstring of xception with description ">close_fd)ir("/captured_stream.XXXXXXtured_stream.XXXXXX of ad_fd_ == -1 ng of xecve(se(args->close_fd)t the number of threads.
etect the number of threads.s: . hich is: (args->close_fd)aptured_stream.XXXXXXL" ...) in ring of ed: stream.XXXXXXads.etect the number of threads.hdir(") in ng of  of f threads.s->close_fd) read_fd_ == -1("aptured_stream.XXXXXXted failed: ect the number of threads.etect the number of threads.xecve(lose(args->close_fd)mber of threads.hich is: tured_stream.XXXXXXse_fd)led: ng of threads.XXXXXf iled:  of ring of _fd_ == -1f threads.f threads. t rXXXXXXreads.reads.ad_fd_ == -1object <t stream.XXXXXXthe number of threads.hich is: . object <threads.ted d)ad_fd_ == -1number of threads.threads. aptured_stream.XXXXXXads.ct <d)er of threads.iled: retected d)d_stream.XXXXXXyte object <tured_stream.XXXXXXe number of threads.string of ir("
xecve(02X exception with description "Xiled: Xreads.s: lose_fd) mber of threads.ream.XXXXXXng of number of threads.mber of threads.yte object <ads.e(++ exception with description "Xlose(args->close_fd)>close_fd)s.object <in ed: stream.XXXXXXlose(args->close_fd) tured_stream.XXXXXXreads.ad_fd_ == -1 is: ads.d ) failed: not ed: er of threads. of threads.ect the number of threads.ring of red_stream.XXXXXXring of XXX detect the number of threads.ected XXXrstring of -1ed: _fd)ad_fd_ == -1stream.XXXXXXetected ad_fd_ == -1ring of e(mber of threads.xecve(s.threads.lose(args->close_fd)se(args->close_fd)f aptured_stream.XXXXXXted ed: ads.xception with description "-1++ exception with description "yte object <ject <se(args->close_fd)lose(args->close_fd)) in failed: lose(args->close_fd)Xe object <failed: s.) in t t the number of threads. ...) in   exception with description "02Xtured_stream.XXXXXXXXXXXread_fd_ == -1Xtured_stream.XXXXXXject <X/tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXailed: number of threads./captured_stream.XXXXXXfailed: ... yte object <not lose(args->close_fd)er of threads.e number of threads.f ) failed:  == -1 is: ailed: reads.t ) in XXXe object <reads.ads.d_ == -1xecve(-byte object <ch is: etect the number of threads.iled: _fd)number of threads.yte object <hich is: hdir(" detect the number of threads. ad_fd_ == -1= -1f object <d led: am.XXXXXXread_fd_ == -1tured_stream.XXXXXXt the number of threads.++ exception with description " e(s: lose_fd)-byte object <) in ad_fd_ == -1tured_stream.XXXXXXse(args->close_fd) failed: mp/captured_stream.XXXXXX ...) in -1eption with description "rgs->close_fd)er of threads.reads.= -1hdir("ect the number of threads.d: xception with description "..) in ject <ads._fd)threads.tured_stream.XXXXXXir("threads.stream.XXXXXX/tmp/captured_stream.XXXXXXct <hich is: e object <read_fd_ == -1 failed: se_fd)lose(args->close_fd)= -1_fd_ == -1failed: 
. d)L"ng of  number of threads.d:  == -1 substring of d: mber of threads.-1ads.etect the number of threads.rgs->close_fd)e object <) in ad_fd_ == -1s.f t tured_stream.XXXXXXhich is: ted rgs->close_fd) exception with description "d e(mp/captured_stream.XXXXXX <. f e(in etect the number of threads.L"er of threads.f threads.xception with description " detect the number of threads.tured_stream.XXXXXX: f not r: ubstring of string of d_stream.XXXXXXiled: XXXXXthreads.f threads.threads.L"cve(ted threads. t 02X>close_fd)/tmp/captured_stream.XXXXXX.XXXXXXthreads.X </tmp/captured_stream.XXXXXX exception with description "er of threads. of yte object < == -1e number of threads.d_ == -1aptured_stream.XXXXXXs->close_fd)s.s: d_stream.XXXXXXt the number of threads. ...) in   substring of threads.t the number of threads./captured_stream.XXXXXXcve(XXXXXaptured_stream.XXXXXXted ng of xception with description "in /tmp/captured_stream.XXXXXXd_stream.XXXXXX detect the number of threads.) in = -1cve( ...) in ("am.XXXXXXf ng of etect the number of threads.ected = -1ads.hdir(": etect the number of threads.red_stream.XXXXXX failed: -byte object <in the number of threads.mber of threads.hdir(" of threads.s..XXXXXX the number of threads.e(not   ...) in  ...) in :  failed: 02Xreads.stream.XXXXXXse(args->close_fd)Xrgs->close_fd)tured_stream.XXXXXX) in hich is: failed: : red_stream.XXXXXXailed: XXXream.XXXXXXX.XXXXXXxception with description "s.e number of threads.d xecve(lose_fd)ted d_ == -1 ...) in rgs->close_fd)am.XXXXXXe(the number of threads.s.ream.XXXXXX_fd_ == -1 detect the number of threads.threads.mp/captured_stream.XXXXXX is:  exception with description ".  substring of 02Xreads. of threads.led: the number of threads. /captured_stream.XXXXXXreads.object <yte object <...  ...) in ect the number of threads.ream.XXXXXXt the number of threads.led: ject <XXXX failed: ed:  of ected d t  s:  is:  of threads.XXXXXXXXXd) of threads.: red_stream.XXXXXX e(ject <stream.XXXXXX
in etected d)f threads.
led: ch is: ) in d ads.string of failed: red_stream.XXXXXX= -1s->close_fd)cve(rgs->close_fd)ect the number of threads.d_stream.XXXXXXed: in /tmp/captured_stream.XXXXXX_fd_ == -1s.t object <XXXXXject <ring of xception with description "ected ..) in threads.) failed: s: = -1mber of threads.the number of threads.yte object <d se(args->close_fd)threads.etect the number of threads.object <e number of threads. substring of ted L"xception with description "++ exception with description "ad_fd_ == -1iled: s->close_fd)ng of  == -102X..) in ring of  detect the number of threads.mber of threads. substring of  detect the number of threads.f : etect the number of threads.lose_fd)t  of 02Xred_stream.XXXXXXct <s.er of threads.) in stream.XXXXXX-byte object < exception with description "d ..) in  == -1hich is: s: ++ exception with description "_fd_ == -1 ...) in ng of ject <cve(ad_fd_ == -1the number of threads.e number of threads.etected X-1etected s. detect the number of threads._fd_ == -1 of ubstring of >close_fd)e(d d_stream.XXXXXXthreads.not (args->close_fd)= -1d:  XXXed: ("ted -1reads.-byte object < <mp/captured_stream.XXXXXXd failed: se(args->close_fd)am.XXXXXXted L"red: XXXXXtured_stream.XXXXXXe number of threads. threads.ed:  of threads.lose(args->close_fd)++ exception with description "ir(">close_fd)_fd_ == -1rgs->close_fd)etected  substring of  failed: XXXXXlose(args->close_fd) failed:  of threads.rgs->close_fd)= -1 f threads.Xse_fd)XXXring of stream.XXXXXXxecve(string of t the number of threads.aptured_stream.XXXXXXed: s->close_fd) exception with description "xception with description "the number of threads. of threads./tmp/captured_stream.XXXXXX-1lose_fd)yte object < ad_fd_ == -1d)L"iled: etected >close_fd)ring of eption with description "xception with description ") in L"se_fd)ir("etected /captured_stream.XXXXXXrstring of f threads.ect the number of threads.read_fd_ == -1t ring of . er of threads.: ted _fd)d_ == -1threads.L">close_fd)Xd_ == -1 detect the number of threads._fd)threads.ch is: etect the number of threads.ad_fd_ == -1ected XXX of hich is: in ad_fd_ == -1ads.ed: e object <ream.XXXXXXthreads.er of threads.f ) failed:  lose(args->close_fd)e object <... etect the number of threads.(" substring of ected  exception with description "e number of threads.ream.XXXXXXobject <xception with description "Xaptured_stream.XXXXXX aptured_stream.XXXXXX <stream.XXXXXXailed:  aptured_stream.XXXXXX ct < ...) in ads.hich is:  failed: 
d: XXXXXnumber of threads. exception with description "in e number of threads.ted am.XXXXXX..) in mp/captured_stream.XXXXXX etected  of threads.L" <d) is: lose(args->close_fd)am.XXXXXXd_ == -1 detect the number of threads.ect the number of threads.s.ring of ) failed: Xhdir("ed: e(lose(args->close_fd)ir("ed: etect the number of threads.xecve(reads. detect the number of threads.X(") in ubstring of ailed: e number of threads.hich is: etected >close_fd)aptured_stream.XXXXXX failed:  of  >close_fd)red_stream.XXXXXXd): ailed: threads. failed:  exception with description ":  
: stream.XXXXXXe number of threads.am.XXXXXXreads.lose(args->close_fd)Xailed: Xnot -byte object <mp/captured_stream.XXXXXXream.XXXXXXt xception with description "ubstring of ubstring of in ... ng of  ad_fd_ == -1ct <ads.ject <ed: ring of number of threads.se(args->close_fd)(args->close_fd)ted  exception with description "
ed: ... ad_fd_ == -1rhich is: _fd)Xs: lose_fd)yte object <XXXect the number of threads.ch is: se_fd)("mber of threads.ring of number of threads.d Xreads.aptured_stream.XXXXXXream.XXXXXXring of d: >close_fd)ed: yte object <se_fd)am.XXXXXXect the number of threads.L"aptured_stream.XXXXXXreads.Xe object <object <tured_stream.XXXXXXreads./tmp/captured_stream.XXXXXX02X02X>close_fd)f threads. == -1ted reads.02X. mp/captured_stream.XXXXXX <ads. of not lose_fd) ...) in er of threads. ...) in d: ed: tured_stream.XXXXXXyte object <Xiled: ct <ject <... ject <etected ad_fd_ == -1 is: d  ...) in rgs->close_fd)hdir("
ect the number of threads.iled: hich is: d_ == -1mp/captured_stream.XXXXXXject < ...) in _fd)d_ == -1xception with description "red_stream.XXXXXX.XXXXXX. s.f threads.xception with description ") failed: t  == -1xecve(= -1se_fd)>close_fd)threads.led:  d_stream.XXXXXXrgs->close_fd)lose_fd)L"/captured_stream.XXXXXXnumber of threads.d)XXXXXt the number of threads.yte object <-byte object <: ring of etected ect the number of threads.f t -byte object <etected eption with description "
led: se(args->close_fd)ads.read_fd_ == -1XXXred_stream.XXXXXX failed: .XXXXXX) failed: stream.XXXXXXetect the number of threads.failed: t the number of threads.yte object <ch is:  s.se(args->close_fd)/tmp/captured_stream.XXXXXXs->close_fd)lose(args->close_fd)L"ject <e(am.XXXXXXe number of threads.e(yte object <number of threads.Xject <e number of threads.lose(args->close_fd)t not ("ring of L"++ exception with description "t e number of threads.f threads.s: er of threads.e object <_fd)ream.XXXXXX/tmp/captured_stream.XXXXXXetect the number of threads.object <("s: etect the number of threads.threads.d)ads._fd)ct <led: in the number of threads.er of threads.e object <ct <etected ct < ream.XXXXXX..) in e number of threads.am.XXXXXXcve(iled:  ...) in e( exception with description "ch is: red_stream.XXXXXXetected >close_fd)ch is: ct <ct <++ exception with description "lose(args->close_fd)e number of threads.ads.ads.object < == -1... mber of threads. d_stream.XXXXXXject < hdir("Xeption with description "/captured_stream.XXXXXXtured_stream.XXXXXXXX>close_fd)s.etect the number of threads. _fd)object <etect the number of threads.("_fd)in er of threads.e number of threads.++ exception with description "02Xaptured_stream.XXXXXXe number of threads.reads.threads.) in = -1threads.d ect the number of threads.led: ring of etect the number of threads.e object <= -1string of s: /captured_stream.XXXXXXads. of threads.reads.ring of  substring of mber of threads. of threads.rgs->close_fd)in s..XXXXXXyte object < of  of failed: >close_fd)t led: am.XXXXXXetected  lose_fd)ted (". in lose_fd)object <ct <XXXXXd)-byte object <t the number of threads.ect the number of threads.reads.(args->close_fd)d: string of .XXXXXX <hdir(" ...) in /captured_stream.XXXXXXyte object <s._fd)e(er of threads.>close_fd)>close_fd)led: stream.XXXXXXmp/captured_stream.XXXXXXtured_stream.XXXXXXnot mber of threads.-byte object <in d: s: ream.XXXXXXXeption with description "number of threads._fd_ == -1xception with description "reads.eption with description "ads.xecve(= -1X
hdir("s->close_fd)ubstring of stream.XXXXXX) failed: Xd_stream.XXXXXXads. detect the number of threads.se_fd)ed: tured_stream.XXXXXXthreads.threads.etected cve(the number of threads._fd)= -1..) in 02Xe number of threads..XXXXXXX("hdir("-1eption with description "etected /captured_stream.XXXXXX is: _fd_ == -1ream.XXXXXX <tured_stream.XXXXXXstring of ) failed: ed: s. ct < == -1_fd_ == -1 ...) in XXX... failed: _fd_ == -1ct <etect the number of threads.: read_fd_ == -1d_ == -1f threads.X
reads.object < Xe(.  of threads.ch is: in d_ == -1lose_fd)e number of threads. of threads.t d ..) in s: ring of read_fd_ == -1..) in iled: ct <ads.se_fd)) in ir(") in ubstring of s->close_fd)aptured_stream.XXXXXXring of ("read_fd_ == -1... yte object <ads.(" of threads.ted ect the number of threads.se_fd)hich is: ted f threads.("read_fd_ == -1ch is: the number of threads.s->close_fd)etect the number of threads.e(hich is:  failed: e(e object </tmp/captured_stream.XXXXXXring of retect the number of threads.aptured_stream.XXXXXXad_fd_ == -1cve((args->close_fd)reads.ng of d)Xam.XXXXXXnot _fd) se(args->close_fd)d_stream.XXXXXXstream.XXXXXX) failed: ... yte object <s->close_fd)_fd)/tmp/captured_stream.XXXXXXted ... ad_fd_ == -1se(args->close_fd)... .  of threads.: t the number of threads.number of threads. == -1/tmp/captured_stream.XXXXXXled: ailed:  of threads.
s->close_fd)f threads.s._fd)t the number of threads.s: ed: d: am.XXXXXX("Xs->close_fd) <ir("hich is: threads.hich is: d_ == -1ect the number of threads.XXXXXe object <not aptured_stream.XXXXXXailed: rreads.d rgs->close_fd)d: eption with description ": ng of ubstring of  ch is: e object <led: ted L" is: se(args->close_fd)number of threads.tured_stream.XXXXXXreads.reads.se_fd)r..) in read_fd_ == -1 ...) in ++ exception with description "..) in rreads./captured_stream.XXXXXXhdir("++ exception with description " == -1s.d: = -1mber of threads.in reads.d_stream.XXXXXXected  detect the number of threads.eption with description "hdir("ring of  <tured_stream.XXXXXXads.ected  exception with description "e((args->close_fd)ected  xecve(xception with description ") failed:  detect the number of threads.ed: hich is: f threads.s: e object <rmber of threads.02Xf ) in se_fd)hdir(") failed: r ("yte object <: .XXXXXXads.yte object <eption with description "s.string of s.ailed: reads. of not mp/captured_stream.XXXXXXXnot f  lose_fd)ed: mber of threads.(args->close_fd)mber of threads.t ad_fd_ == -1t aptured_stream.XXXXXXnot hich is: s. of XXXXXobject <) failed:  substring of tured_stream.XXXXXXcve(threads.hdir("lose(args->close_fd)ailed: -1cve( rgs->close_fd)lose_fd)/tmp/captured_stream.XXXXXXstream.XXXXXXads.ect the number of threads.: d)se(args->close_fd)>close_fd)rring of ..) in t hdir("in ads. etected eption with description ". ected se(args->close_fd)t .XXXXXXetect the number of threads.ubstring of xception with description "d: etect the number of threads.ads.number of threads.aptured_stream.XXXXXX_fd)reads.ject <yte object <s.02Xyte object <tured_stream.XXXXXXetected  substring of in Xe number of threads.e number of threads.in eption with description " < substring of ng of hdir("ads.ubstring of = -1threads.rgs->close_fd)in f threads.mber of threads. substring of d_ == -1e(number of threads. threads.se_fd)iled:  <e(red_stream.XXXXXXin .XXXXXX of threads.ads.X reads.failed: rgs->close_fd)reads.etect the number of threads. <e( ...) in d_stream.XXXXXX02X-1the number of threads./captured_stream.XXXXXXailed: yte object <ected ailed: ) in s->close_fd) lose_fd)XXXmp/captured_stream.XXXXXXd string of ring of f : _fd)_fd)string of lose_fd)number of threads. == -1s->close_fd)XXXXXtured_stream.XXXXXXreads. failed: ed: = -1aptured_stream.XXXXXX("ect the number of threads.rgs->close_fd)s.aptured_stream.XXXXXXse_fd) of threads.L">close_fd)... in ir(") failed: XXX) in mber of threads.d_ == -1t /captured_stream.XXXXXX/captured_stream.XXXXXXL"ed: string of led: f threads. == -1 of ) in lose_fd) .  detect the number of threads.rstring of -1..) in lose(args->close_fd)reads. detect the number of threads.am.XXXXXX substring of  of t  threads.mber of threads.etected er of threads. d)stream.XXXXXXiled: ected ected (args->close_fd)XXXXXng of s.ring of stream.XXXXXX detect the number of threads.threads. substring of  xecve(++ exception with description "ir("(" ...) in  ...) in 02Xd_stream.XXXXXX_fd_ == -1Xcve(... ads.... ject <++ exception with description "string of object <hich is: ream.XXXXXXd:  substring of hich is:  failed:  detect the number of threads.= -1mber of threads. failed: read_fd_ == -1ected number of threads.tured_stream.XXXXXXe(am.XXXXXXthe number of threads.L"e number of threads. etected  ed: lose(args->close_fd)threads.("t the number of threads.se_fd)d led: am.XXXXXX("er of threads./tmp/captured_stream.XXXXXXad_fd_ == -1ected  == -1er of threads.mber of threads.Xreads.in ad_fd_ == -1 <hich is: ("red_stream.XXXXXXiled: led: reads.ubstring of ir("e number of threads.tured_stream.XXXXXX
 is: Xetect the number of threads.>close_fd) <object <not ads.f threads._fd)yte object <s: se(args->close_fd)  == -1Xtured_stream.XXXXXX02Xd red_stream.XXXXXXlose(args->close_fd)... ++ exception with description "lose(args->close_fd)se_fd) of -byte object <aptured_stream.XXXXXXe object <ubstring of mp/captured_stream.XXXXXXcve(not rgs->close_fd)ads.threads.(args->close_fd)) failed: ject < of threads.-byte object <threads.xception with description " of threads.object <_fd_ == -1 string of 
object <Xfailed: _fd_ == -1d: hdir("stream.XXXXXXread_fd_ == -1ted f threads. is: reads.(args->close_fd)XXXXXs->close_fd)e number of threads.iled: object <:  failed: reads.e object <f  XXXXX er of threads.d: reads.not >close_fd)ad_fd_ == -1 substring of Xe(ream.XXXXXXam.XXXXXXring of the number of threads. == -1d_ == -1red_stream.XXXXXXch is:  of ct <rir(" exception with description "tured_stream.XXXXXXs.>close_fd) == -1ir("ad_fd_ == -1(args->close_fd) of threads. detect the number of threads.L"e number of threads.e number of threads.s:  ed: t the number of threads. failed: d)ring of rgs->close_fd)ream.XXXXXXyte object <aptured_stream.XXXXXXream.XXXXXX/captured_stream.XXXXXXyte object <red_stream.XXXXXXthe number of threads.t = -1ected s->close_fd) failed:  detect the number of threads.cve(ad_fd_ == -1= -1ct <-1hdir("02Xe number of threads. failed:  ++ exception with description "ted  of threads.am.XXXXXX == -1am.XXXXXX f threads.threads.s.cve(ct < failed: t 
d_ == -1object <_fd_ == -1number of threads.ring of d L"s->close_fd)mber of threads.mp/captured_stream.XXXXXX == -1ct <d xception with description "s.
not d_stream.XXXXXXt the number of threads. detect the number of threads.reads.. lose(args->close_fd)/tmp/captured_stream.XXXXXXreads.ed: /tmp/captured_stream.XXXXXXad_fd_ == -1ads.xception with description "t hdir("X f the number of threads.mber of threads.reads.object <>close_fd)e object <string of  substring of ed:  failed: reads.. threads. == -1
 -byte object <lose(args->close_fd)mp/captured_stream.XXXXXXobject <ected (args->close_fd)t the number of threads. ...) in X is: s->close_fd)..) in L" xception with description "= -1XXXubstring of XXXd_ == -1hdir("d_stream.XXXXXXmber of threads.e object <X <_fd_ == -1the number of threads./tmp/captured_stream.XXXXXXstring of red_stream.XXXXXXXXXXX(args->close_fd)d)/captured_stream.XXXXXXring of etected failed: f threads.= -1 substring of  is:  == -1led: _fd_ == -1 exception with description "r <s.ng of  ("02Xiled: ed: 02Xer of threads.02X/tmp/captured_stream.XXXXXX-1 == -1er of threads.eption with description "/captured_stream.XXXXXXcve( detect the number of threads.ected stream.XXXXXXected the number of threads.ject <ct <ected lose_fd)ject <X ...) in  exception with description "d_ == -1lose(args->close_fd)_fd)lose_fd)er of threads.s.ed: ad_fd_ == -1the number of threads./captured_stream.XXXXXXlose(args->close_fd)aptured_stream.XXXXXXmber of threads.XXX
etected yte object <d_ == -1yte object <mber of threads. <d_ == -1ad_fd_ == -1("/tmp/captured_stream.XXXXXXreads.ubstring of rgs->close_fd)reads.rgs->close_fd)ad_fd_ == -1ring of  failed: d_stream.XXXXXXted am.XXXXXXobject <se(args->close_fd)ads.s.. f threads.rgs->close_fd)ring of in . Xiled:  ng of d)stream.XXXXXXL"ng of number of threads.
++ exception with description " == -1am.XXXXXXads.e number of threads.etect the number of threads.er of threads.XXXhdir("-1: f threads.e(... e number of threads.ads.d_stream.XXXXXX detect the number of threads. < <se(args->close_fd)ch is: ubstring of Xaptured_stream.XXXXXXeption with description "("d_ == -1ads.cve(ailed: object <d: threads...) in L"ream.XXXXXXrgs->close_fd)t the number of threads.XXXXXX is: XXXstring of Xs->close_fd)... ng of s->close_fd)object <-byte object <ream.XXXXXX-byte object <d_stream.XXXXXXhdir("se_fd)ect the number of threads.ect the number of threads.-byte object <xception with description "(args->close_fd)ct <..) in ject <XXXXXXthe number of threads.02Xin xecve(yte object <er of threads.ads.mp/captured_stream.XXXXXX... read_fd_ == -1ct <rgs->close_fd)f threads.d_ == -1ch is: r substring of t the number of threads./captured_stream.XXXXXXhdir(" of threads.d_ == -1hdir("(args->close_fd)yte object < failed:  == -1ir("threads. exception with description "t the number of threads..XXXXXXiled: reads.Xread_fd_ == -102Xred_stream.XXXXXXyte object <yte object <ect the number of threads.f : Xstream.XXXXXX_fd_ == -1_fd_ == -1se(args->close_fd)d L"XXXXXect the number of threads.stream.XXXXXXtured_stream.XXXXXXch is: the number of threads.d se(args->close_fd)/tmp/captured_stream.XXXXXXject <red_stream.XXXXXXcve(Xs.: e object <threads.  substring of e number of threads.etected xecve(: read_fd_ == -1hdir("ect the number of threads.-1: ted XXXf threads.hich is:  ...) in ect the number of threads.ubstring of  ...) in ed: in -byte object <++ exception with description "threads.ected ("d_ == -1s->close_fd)e(cve(s.t  the number of threads.cve(failed: ... yte object <er of threads.lose_fd)d: ) failed: lose_fd)XXXXXmber of threads.ubstring of ch is: ads.er of threads.rreads.ream.XXXXXX substring of _fd_ == -1 <read_fd_ == -1read_fd_ == -1/tmp/captured_stream.XXXXXXed: ject <rgs->close_fd) aptured_stream.XXXXXX) in lose(args->close_fd)... etect the number of threads.am.XXXXXXf  <ubstring of cve(ng of Xect the number of threads. ct <_fd) ...) in  exception with description "/tmp/captured_stream.XXXXXXnot reads.s.the number of threads.ct <s:  is: se(args->close_fd) substring of d)L"..) in  reads..XXXXXXred_stream.XXXXXXs.= -1) in ads.xception with description "reads. xception with description "
 <stream.XXXXXXads.led: string of ... tured_stream.XXXXXXse_fd)stream.XXXXXX) failed: . (args->close_fd)stream.XXXXXX am.XXXXXX/captured_stream.XXXXXXeption with description "ted se_fd)ads.hdir("t the number of threads. <_fd)d_stream.XXXXXXe number of threads.. ream.XXXXXXe object <(" <object < detect the number of threads.se(args->close_fd)d ed: threads.(args->close_fd)xecve( of threads. substring of e(XXX  threads.Xin ch is: XXX02X
cve(e(..) in lose(args->close_fd)aptured_stream.XXXXXX/tmp/captured_stream.XXXXXX_fd)am.XXXXXXeption with description "led:  is: hdir(" of threads.ng of ject <xecve( failed: tured_stream.XXXXXXd_stream.XXXXXX/tmp/captured_stream.XXXXXX ...) in >close_fd)se(args->close_fd)s.lose(args->close_fd) s....  is: tured_stream.XXXXXX) failed: f ng of ct < failed: stream.XXXXXX) failed:  detect the number of threads. exception with description "s.in threads.02XX detect the number of threads.xecve(>close_fd)
...  detect the number of threads.e number of threads.threads.iled: in  led: ject <red_stream.XXXXXXetect the number of threads. is: ... reads._fd)ream.XXXXXXads.XXXXXs: ch is: am.XXXXXX of threads.hich is: .XXXXXX/tmp/captured_stream.XXXXXX) in ++ exception with description "d ) in _fd_ == -1lose_fd)ed: d: iled: XXXt _fd_ == -1tured_stream.XXXXXX. ted ad_fd_ == -1f ++ exception with description ") failed: ++ exception with description "ream.XXXXXX <ubstring of d)iled: number of threads.-byte object <lose_fd)..) in f reads.ads.02X is: d)number of threads.aptured_stream.XXXXXX:  of threads. of  of ected se(args->close_fd)tured_stream.XXXXXXfailed: s: XXXXXch is: 02Xailed: XXXXXd_stream.XXXXXXmber of threads.reads.lose(args->close_fd)d)e number of threads.(args->close_fd)er of threads.am.XXXXXX detect the number of threads.("xception with description "++ exception with description "robject <(args->close_fd)ct <= -1ads.rxecve(..) in read_fd_ == -1 : XXXXXX exception with description " == -1ed:  iled: ads.mp/captured_stream.XXXXXXng of threads.d:   is: Xrch is: er of threads.threads.ect the number of threads. detect the number of threads.("rr ads.d_stream.XXXXXX: . .XXXXXXnot hdir("xecve(threads.lose_fd)) in  failed: : /captured_stream.XXXXXXXXXXXted XXXXX-byte object <ream.XXXXXX.XXXXXXf threads. failed: led: r <XXXlose(args->close_fd)-1
threads.02Xtured_stream.XXXXXXXch is:  etected ubstring of -1e number of threads.etect the number of threads.reads.read_fd_ == -1failed: ring of the number of threads.(args->close_fd)d)er of threads.s->close_fd)r) in _fd)failed: xecve(ch is: number of threads.ubstring of   == -1 cve(hich is: red_stream.XXXXXXin the number of threads.ject <led: : e number of threads.ted XXXthreads.ir("/tmp/captured_stream.XXXXXXnumber of threads. exception with description "ailed: 
.XXXXXX s->close_fd)mber of threads._fd)/tmp/captured_stream.XXXXXX(args->close_fd)ed: d_stream.XXXXXX of threads.d_ == -1rgs->close_fd)threads.reads.mber of threads.read_fd_ == -1/captured_stream.XXXXXXnot ... ++ exception with description "s: eption with description "threads.er of threads.the number of threads.Xd_stream.XXXXXXt ed: the number of threads. detect the number of threads.reads.er of threads.... number of threads.etected /captured_stream.XXXXXXxception with description "
led: in  exception with description "ailed: _fd)d ailed: e( is: rd_ == -1/tmp/captured_stream.XXXXXXcve(02X) failed:  e object <aptured_stream.XXXXXXxecve(number of threads.aptured_stream.XXXXXXf xecve(am.XXXXXXf threads.e number of threads...) in s.f se(args->close_fd)se_fd)s.f red_stream.XXXXXXubstring of the number of threads.ads.t the number of threads./tmp/captured_stream.XXXXXX detect the number of threads. substring of xception with description "in eption with description "/tmp/captured_stream.XXXXXX) failed: ("se_fd)ads.object <..) in ected red_stream.XXXXXX failed: d threads.in ream.XXXXXXnumber of threads.: L"XXXhdir(">close_fd)e object <failed: reads.ct <) failed: ir("ads.f threads.. rads.ed: ream.XXXXXX ..) in etect the number of threads.s->close_fd)/captured_stream.XXXXXX ...) in 02X/tmp/captured_stream.XXXXXX is: >close_fd)>close_fd)aptured_stream.XXXXXX.  == -1 of ed: -1 ...) in s->close_fd) of  ...) in ) failed: XXX reads. == -1ed: ed: ir("read_fd_ == -1ailed: ..) in d tured_stream.XXXXXXeption with description "the number of threads.xecve(++ exception with description "++ exception with description ">close_fd)etected 02Xad_fd_ == -1lose(args->close_fd)e(ect the number of threads.in cve( substring of /captured_stream.XXXXXXct <ir("d)number of threads.etected  ject <threads.f se_fd) is: number of threads.failed: d)s->close_fd)reads.ad_fd_ == -1ring of e number of threads.threads.d_stream.XXXXXX) in reads.02Xch is: rgs->close_fd)_fd) substring of f threads.er of threads.f threads. L"ect the number of threads.led: red_stream.XXXXXX) in eption with description "xception with description "etect the number of threads.number of threads.s. detect the number of threads.XXXXX02X is: ng of threads.string of  substring of  substring of se_fd)XXXreads.02Xread_fd_ == -1the number of threads.failed: se(args->close_fd)= -1e number of threads.rream.XXXXXXch is: ject <ed:  is:  <_fd_ == -1tured_stream.XXXXXXetect the number of threads. ...) in  se(args->close_fd)hich is: ad_fd_ == -1t L"XXXxecve(ng of ream.XXXXXXd_ == -1  -1++ exception with description "= -1ads./tmp/captured_stream.XXXXXXads.red_stream.XXXXXXnumber of threads._fd_ == -1ubstring of s._fd)= -1.XXXXXXhdir("reads. failed: am.XXXXXX("am.XXXXXXch is: e(reads..XXXXXXled: = -1 <string of ads. failed: er of threads.ads.reads..XXXXXXmp/captured_stream.XXXXXXe object <etected 
f threads.XXXXXads. ...) in d: ir("XXXXX failed: er of threads.... eption with description "red_stream.XXXXXXnot ted r("(args->close_fd)ng of  detect the number of threads.ected Xch is: XXXXXiled: L"hdir("hich is: tured_stream.XXXXXX of threads...) in mber of threads.the number of threads.ect the number of threads.the number of threads.s.: ...  detect the number of threads.hdir("d: iled:   == -1xception with description "ng of ) failed: L"XXXXXse(args->close_fd)>close_fd)etect the number of threads. detect the number of threads.object <. e(aptured_stream.XXXXXXct <threads.tured_stream.XXXXXX . /tmp/captured_stream.XXXXXXetected ad_fd_ == -102Xtured_stream.XXXXXXthe number of threads.02X... string of ads.ct <stream.XXXXXXxecve(red_stream.XXXXXX ed: ed:  ...) in f  of  of threads.mber of threads.ted >close_fd) /captured_stream.XXXXXXed:  == -1d led: _fd_ == -1++ exception with description "ect the number of threads. ected reads.read_fd_ == -1f threads. exception with description "yte object <ch is: d e number of threads.threads. is: -byte object <lose(args->close_fd)in  se(args->close_fd)threads.ailed: se_fd). -byte object <t  f threads.hdir("d)ected se(args->close_fd)
 ...) in mber of threads. detect the number of threads.d_ == -1L"++ exception with description "(args->close_fd)ted f threads.f XXX) in t  is: etect the number of threads.not >close_fd)
 is: e object <d: tured_stream.XXXXXXream.XXXXXXse(args->close_fd)red_stream.XXXXXXXXXXXir("XXX02Xf threads.d: mp/captured_stream.XXXXXXted the number of threads.etected t ) failed: d_ == -1 detect the number of threads.d_stream.XXXXXXse(args->close_fd)mp/captured_stream.XXXXXX is: d_stream.XXXXXXiled: lose_fd)= -1lose(args->close_fd)reads.yte object <the number of threads.e number of threads.... xception with description "stream.XXXXXXng of e object < ads.ed: xecve( of threads.++ exception with description "number of threads.
eption with description "ted (args->close_fd)ect the number of threads.reads.stream.XXXXXXads.led: Xxception with description "ted ailed: lose_fd)f threads. exception with description "etect the number of threads.e number of threads.etected s->close_fd)("-1.XXXXXX++ exception with description "_fd_ == -1d)e object <reads.++ exception with description "string of object < detect the number of threads.Xir("reads. ...) in mp/captured_stream.XXXXXXad_fd_ == -1reads._fd_ == -1rtured_stream.XXXXXXream.XXXXXXiled: d_ == -1) in threads.read_fd_ == -1Xads.ed: XXXXXrgs->close_fd)lose(args->close_fd)reads.s->close_fd)red_stream.XXXXXXject <the number of threads. substring of the number of threads.-byte object <not xecve(stream.XXXXXXrXcve(-byte object <ed: object < failed:  substring of ected threads.ected ected s: tured_stream.XXXXXX-byte object <ted e number of threads.lose(args->close_fd)t the number of threads.ubstring of s: se_fd)red_stream.XXXXXX ...) in eption with description "s.ected .XXXXXXads.e object <_fd)s._fd)/captured_stream.XXXXXXed: _fd)not etected .XXXXXXd: /tmp/captured_stream.XXXXXXxception with description "reads.read_fd_ == -1 < failed: (" substring of XXX
hdir("failed: e(ads.d_ == -1 is: se(args->close_fd) failed: ) in ads.e number of threads.hich is: ailed: xecve(f threads.02Xailed: X>close_fd)xception with description "led: yte object <..) in threads.se(args->close_fd)s->close_fd)-byte object <ream.XXXXXXject <eption with description "L"ject <hich is: s.object <d_stream.XXXXXX iled: /captured_stream.XXXXXX_fd)etect the number of threads.threads.se_fd)er of threads.("lose(args->close_fd)ted ir("led: d_ == -1xception with description "d object </captured_stream.XXXXXXXct <d_ == -1..) in lose(args->close_fd) d_ == -1mber of threads.t the number of threads._fd_ == -1led:  exception with description "ubstring of  exception with description "s->close_fd)e object </tmp/captured_stream.XXXXXXred_stream.XXXXXX <d ct <hich is: aptured_stream.XXXXXXhdir("ected d not  failed: t threads.lose_fd)ads.ream.XXXXXXXXXXX(args->close_fd)e object <etect the number of threads.d_stream.XXXXXXed: stream.XXXXXXe object <s->close_fd)..) in -1e number of threads.(args->close_fd)f threads.mp/captured_stream.XXXXXXlose_fd)se_fd)(args->close_fd)ected ("failed: 02X failed: d)reads.d  exception with description "ected mber of threads.d threads. ject <d: object <: ected ream.XXXXXX_fd)/tmp/captured_stream.XXXXXXyte object <mp/captured_stream.XXXXXX02X == -1 exception with description "ect the number of threads. exception with description " == -1ads.reads.f threads. exception with description "not number of threads.ream.XXXXXXer of threads.hich is:  of etected etected ring of ubstring of tured_stream.XXXXXXs->close_fd)d: ads.hich is: hdir("se_fd)cve(ubstring of _fd)ad_fd_ == -1in xecve(d_stream.XXXXXXcve(se(args->close_fd) yte object <ject <not threads. exception with description ". yte object <reads. exception with description " detect the number of threads.f threads.xception with description "ct <yte object <ng of  is: reads.ream.XXXXXX... ect the number of threads.failed:  f threads. <XXXXXXXXreads. of threads.hich is:  substring of number of threads.in e number of threads.reads.  == -1(" f rs.ads.e(threads. ...) in ject <) failed:  <se_fd)s: 02X exception with description ">close_fd)ng of led: lose_fd)mp/captured_stream.XXXXXXxecve(tured_stream.XXXXXXed: not XXXXXXXXred_stream.XXXXXX lose(args->close_fd)(args->close_fd)eption with description "lose(args->close_fd)e number of threads.stream.XXXXXXaptured_stream.XXXXXXse(args->close_fd)reads.d_ == -1failed: ads.threads.the number of threads.threads.-byte object < == -1read_fd_ == -1lose(args->close_fd)ect the number of threads.not stream.XXXXXXubstring of  is: hdir("ir(" exception with description ". lose_fd)e(mber of threads.d: er of threads.e number of threads.e object <se(args->close_fd)ng of stream.XXXXXX) failed: d: reads.se_fd)etect the number of threads. er of threads.XXXXX++ exception with description "hdir(" <_fd_ == -1 exception with description "d: se(args->close_fd)hdir("t the number of threads.f lose_fd) of threads.-byte object <etect the number of threads._fd_ == -1XXXXX02Xthe number of threads.failed: d_stream.XXXXXX <threads.: _fd_ == -1lose(args->close_fd)ads.number of threads.ct <_fd_ == -1-1not ream.XXXXXXject <) failed: d_stream.XXXXXXobject <t ject <s: se_fd)ted  == -1robject <eption with description "d_stream.XXXXXXnot mp/captured_stream.XXXXXXXs.lose_fd)XXXhich is: mp/captured_stream.XXXXXXin eption with description "d)ject <t ect the number of threads.yte object <(args->close_fd)xception with description ">close_fd)ect the number of threads.ir("(args->close_fd)lose(args->close_fd)object <) in L"d_ == -1se_fd)ted the number of threads. exception with description "Xtured_stream.XXXXXX>close_fd)mp/captured_stream.XXXXXXreads.ream.XXXXXX) failed: ect the number of threads.etected  ...) in XXXer of threads.hich is: XXX  rs.failed: ads.re( /captured_stream.XXXXXXed: cve(= -1ch is: ect the number of threads. exception with description "aptured_stream.XXXXXXeption with description "t the number of threads.ailed: ++ exception with description ". t the number of threads.ect the number of threads.mp/captured_stream.XXXXXXad_fd_ == -1Xct <in aptured_stream.XXXXXXch is: mp/captured_stream.XXXXXXd_stream.XXXXXX <
xception with description ") failed: etect the number of threads.(args->close_fd) hdir("stream.XXXXXX lose(args->close_fd) detect the number of threads. is: etected er of threads.threads.tured_stream.XXXXXXs: s: _fd)etect the number of threads.s.-byte object <tured_stream.XXXXXX exception with description "d s.e() failed: _fd_ == -1_fd)threads.rgs->close_fd)t the number of threads.ring of lose(args->close_fd).XXXXXXs.++ exception with description "rreads.eption with description " t the number of threads. failed: ubstring of e(ted d)hdir("s->close_fd)>close_fd)
e number of threads.threads.ject <hdir("e object <lose_fd)the number of threads.ed:  of ubstring of lose(args->close_fd)iled: eption with description "read_fd_ == -1/tmp/captured_stream.XXXXXXe number of threads.Xiled: led: reads._fd). ) failed: d_stream.XXXXXXe(eption with description "r
e(er of threads.mp/captured_stream.XXXXXX++ exception with description "ct < exception with description "ected ream.XXXXXX is: ted reads.ect the number of threads.the number of threads.number of threads.threads.the number of threads.s:  read_fd_ == -1XXXads.failed: s->close_fd).XXXXXXs.xception with description "d_stream.XXXXXXse_fd)se_fd)threads. is: ng of ch is: hdir("s:  ...) in  threads.failed: rgs->close_fd)number of threads.s: d: t ir("tured_stream.XXXXXXring of yte object <iled: d)s.s. d: s->close_fd) exception with description "lose_fd) substring of _fd)am.XXXXXXt the number of threads.reads.reads.ailed:  yte object <d_stream.XXXXXXream.XXXXXX se_fd)tured_stream.XXXXXXrgs->close_fd)Xed: f ted (args->close_fd)... (args->close_fd)f threads.threads.ads.object <ailed: -byte object <..) in threads.f rgs->close_fd)iled: reads.aptured_stream.XXXXXXX ...) in s->close_fd)eption with description "++ exception with description "02X <e(ed: d_stream.XXXXXXled: se(args->close_fd)t yte object <e object <) in -1ng of  exception with description "e object <s. is: lose_fd)..) in er of threads. exception with description "in ed: _fd)_fd_ == -1aptured_stream.XXXXXXobject <d: e(er of threads.ed: ted  exception with description "t  <rgs->close_fd)= -1XXXf /tmp/captured_stream.XXXXXX..) in se_fd)d_ == -1ed: hdir("xception with description "++ exception with description "(args->close_fd)ect the number of threads.am.XXXXXXected s: ir("the number of threads...) in ("..) in rch is: 02Xhich is: string of cve(am.XXXXXXring of read_fd_ == -1Xject <++ exception with description "
 of threads.yte object <>close_fd)xecve(lose_fd)eption with description "d_stream.XXXXXXt reads.e object <... XXXobject <Xject <hdir("d mp/captured_stream.XXXXXXXnot  ...) in f = -1s.ct <reads...) in d_stream.XXXXXXeption with description "f threads.02Xted . -byte object <ected ring of  threads.string of t e object <hdir(") in lose_fd)etected ++ exception with description " failed: /captured_stream.XXXXXXrlose(args->close_fd)led: : -1 == -1ring of  e object <XXX) failed: s->close_fd) is: ads. exception with description " f f in ubstring of L"hdir("cve(-1mp/captured_stream.XXXXXXXXXXXhdir("rgs->close_fd)mp/captured_stream.XXXXXX>close_fd)L"f string of number of threads.>close_fd)ad_fd_ == -1the number of threads.) in er of threads.) failed: 
(args->close_fd)xception with description "etect the number of threads.ryte object <ng of am.XXXXXXd)aptured_stream.XXXXXXfailed:  of threads.) in s.: s.d)_fd)ring of _fd_ == -1object <ng of e object <iled:  exception with description "... xecve((args->close_fd).XXXXXXetect the number of threads..XXXXXXs.ring of /captured_stream.XXXXXXfailed: 
02Xreads.t stream.XXXXXXetect the number of threads.rgs->close_fd)ring of ++ exception with description " of rad_fd_ == -1hdir("e object <etected f ads.X (args->close_fd)lose(args->close_fd)aptured_stream.XXXXXXnot .XXXXXXject < == -1 substring of >close_fd)object <("f threads.am.XXXXXXd)ad_fd_ == -1e(yte object <mp/captured_stream.XXXXXX == -1 == -1/captured_stream.XXXXXXnot 
s.mber of threads.lose(args->close_fd)d d not object <stream.XXXXXX exception with description "reads./tmp/captured_stream.XXXXXX of threads.hdir("s->close_fd).  ...) in d: am.XXXXXXe number of threads.se_fd)e( substring of _fd)= -1XXXXXted _fd)ad_fd_ == -1threads.xception with description "number of threads.threads.f threads.s.mp/captured_stream.XXXXXXin d hdir("e number of threads.XXXXX) failed: ect the number of threads.ads.string of ) failed: d  substring of t the number of threads.red_stream.XXXXXXs: _fd)02X detect the number of threads.Xtured_stream.XXXXXXch is:   <ream.XXXXXXt tured_stream.XXXXXXd: in ailed: yte object <stream.XXXXXXstream.XXXXXX substring of am.XXXXXXir(" of threads.ed: ed: string of .  is: threads.. etected the number of threads.e(XXX... ... ad_fd_ == -1se_fd)r... cve(ad_fd_ == -1se_fd)tured_stream.XXXXXX= -1f threads./captured_stream.XXXXXXthreads.ted ed: se(args->close_fd)ad_fd_ == -1ream.XXXXXX(args->close_fd)the number of threads. detect the number of threads...) in  mber of threads.:  failed: >close_fd)number of threads.d_ == -1ream.XXXXXX02Xreads.rreads.etected read_fd_ == -1threads.mp/captured_stream.XXXXXXd_stream.XXXXXXobject < of threads.failed: failed: s.not object <ct <("e number of threads..XXXXXXaptured_stream.XXXXXXthreads.not ("ad_fd_ == -1d_ == -1= -1ads.yte object <hich is: in eption with description "... in etect the number of threads.ailed: er of threads.mp/captured_stream.XXXXXX. _fd_ == -1= -1aptured_stream.XXXXXXd_stream.XXXXXX yte object <(args->close_fd)ng of XXXXXmber of threads.e(the number of threads.tured_stream.XXXXXXtured_stream.XXXXXXred_stream.XXXXXXetect the number of threads.the number of threads.-byte object <etected  is: ads.) failed: ir("stream.XXXXXXch is: f ) in s.the number of threads.reads.++ exception with description "s->close_fd)s.mber of threads.f threads.tured_stream.XXXXXX) failed: etect the number of threads. <ct < substring of >close_fd)++ exception with description "/captured_stream.XXXXXX exception with description " is: lose_fd)e(ads.read_fd_ == -1d: d_ == -1ject <: L" substring of -1ct <s.e(d)reads.ream.XXXXXXf eption with description "02Xream.XXXXXXred_stream.XXXXXXt string of :  substring of  f threads..XXXXXXed: rgs->close_fd)xecve(f threads.ed: XXXred_stream.XXXXXX: reads.d  of stream.XXXXXXrs: e(number of threads.stream.XXXXXX detect the number of threads.) in red_stream.XXXXXX of cve(XXXject <_fd_ == -1etect the number of threads.-byte object <ng of red_stream.XXXXXXreads. <cve(not e number of threads.number of threads. of threads.rgs->close_fd)stream.XXXXXXads. failed: ream.XXXXXXreads.rgs->close_fd)... cve(s.mp/captured_stream.XXXXXXt s: reads._fd_ == -1eption with description "rhdir("d: : -byte object <reads. failed:  ...) in etected cve(threads.lose_fd)object < <ng of hich is: X <_fd_ == -1reads.) failed: tured_stream.XXXXXX: ected  ...) in L"ads. yte object < of ("_fd_ == -1ch is: s.cve(02X: ect the number of threads._fd_ == -1in  failed: XXX ...) in led: eption with description ": ..) in ed: ng of  <read_fd_ == -1s: .XXXXXXse_fd)ected  failed: ) in xecve(string of -byte object <mp/captured_stream.XXXXXXred_stream.XXXXXXam.XXXXXXream.XXXXXXct <(args->close_fd)d_stream.XXXXXXthreads.ubstring of threads.d: ++ exception with description " <ted reads.e number of threads.aptured_stream.XXXXXXng of ad_fd_ == -1se_fd) <read_fd_ == -1string of mber of threads.reads.s. <etected se(args->close_fd)XXXs: string of er of threads.ubstring of e object <red_stream.XXXXXXretect the number of threads.d)ads. of d_ == -1X++ exception with description "ring of d: L" is: d_stream.XXXXXX ...) in ream.XXXXXX) failed: -byte object < is: xception with description "rt the number of threads.XXXfailed: d)ubstring of (args->close_fd)number of threads. exception with description " failed: 02X("threads.threads.ject <_fd)er of threads.ir("eption with description "f reads.ng of hich is: ailed: am.XXXXXX02Xlose(args->close_fd)d_ == -1: ed:  is: 02Xse(args->close_fd)red_stream.XXXXXXected >close_fd)tured_stream.XXXXXXaptured_stream.XXXXXXe number of threads.in not ..) in ailed:  failed: rXted se(args->close_fd) detect the number of threads./tmp/captured_stream.XXXXXXred_stream.XXXXXXin ) failed:  <xception with description "... s.... failed: s.) failed: 
d_ == -1number of threads.ct <XXXeption with description "string of ) failed: s.... xception with description "rthreads.t reads. of threads.Xe number of threads.Xt d: ng of threads.s.XXXXXject <stream.XXXXXXected iled: threads.lose_fd)string of d: lose_fd)ads.-byte object <d_stream.XXXXXX. lose_fd)/captured_stream.XXXXXXL"_fd_ == -1..) in ) in iled: e number of threads.etected >close_fd)02X of threads.ect the number of threads.f threads.er of threads.ads.hdir("d iled: ad_fd_ == -1ected am.XXXXXXse_fd).  of ads.s->close_fd)s.ailed: threads.yte object <f hdir("/tmp/captured_stream.XXXXXX of se_fd) s._fd_ == -1 d  substring of string of etect the number of threads.ir("ir("ailed:  is: 02Xnumber of threads.++ exception with description " f ream.XXXXXX_fd_ == -1er of threads.) in  XXXXX.XXXXXXXs:  is: ) in  <red_stream.XXXXXX..) in -1eption with description "reads.led: ... the number of threads.++ exception with description "ubstring of iled: ads.yte object <ct <-1lose_fd)-byte object <e(ream.XXXXXXreads.  substring of se(args->close_fd)d: am.XXXXXXad_fd_ == -1("(args->close_fd) is: number of threads.("cve(ected  ...) in ream.XXXXXXeption with description "_fd)se_fd)/tmp/captured_stream.XXXXXXstream.XXXXXX("s.reads.ect the number of threads.cve(number of threads.er of threads.ected ubstring of reads.etect the number of threads.stream.XXXXXX == -1ted ads.ected xception with description "ct <failed: ct <ect the number of threads.e(. d_stream.XXXXXX ...) in s. e number of threads.threads.lose_fd)f threads.ubstring of failed:  d_ == -1iled: mp/captured_stream.XXXXXX is: rgs->close_fd)s: d ted d  ...) in in ) in ject < failed: string of ailed: stream.XXXXXXthe number of threads.eption with description "ubstring of tured_stream.XXXXXXubstring of ir("f threads.>close_fd)ct <ads.ubstring of  is: _fd_ == -1in  is: . ads.red_stream.XXXXXXe number of threads.er of threads.read_fd_ == -1e number of threads.ailed: failed: = -1t ream.XXXXXXads.cve(ected failed: not ubstring of d /tmp/captured_stream.XXXXXXfailed: yte object <hich is: -byte object <... ... reads.am.XXXXXX02X is: failed: rxecve(lose(args->close_fd) == -1 ...) in XXXXXring of (" detect the number of threads. failed:  etect the number of threads.Xubstring of XXXxception with description " ...) in  of object <-byte object <. se(args->close_fd)d .XXXXXXmp/captured_stream.XXXXXX substring of  == -1r stream.XXXXXXfailed: ream.XXXXXXd)
02X/tmp/captured_stream.XXXXXX-1) in red_stream.XXXXXXrs->close_fd)rgs->close_fd) tured_stream.XXXXXXubstring of -byte object < ected >close_fd)e object <02Xlose_fd)d_ == -1d)++ exception with description "e object <  is: s./captured_stream.XXXXXX_fd_ == -1
: XXXreads.d)iled: tured_stream.XXXXXXrse(args->close_fd)X) failed: d_ == -1se(args->close_fd)ted e number of threads.mp/captured_stream.XXXXXX ("tured_stream.XXXXXX == -1se_fd)reads.iled: XXXe number of threads.XXXXXd_stream.XXXXXXected ream.XXXXXX e object <d reads. -1 exception with description "am.XXXXXXer of threads..XXXXXXt the number of threads.... ring of d_ == -1. er of threads. failed: 02Xads.ted  <XXXXXnot etect the number of threads./tmp/captured_stream.XXXXXXstring of ject <xecve((args->close_fd)stream.XXXXXXt the number of threads.am.XXXXXXject <Xct <d: aptured_stream.XXXXXX ...) in failed: _fd_ == -1_fd_ == -1xecve(/tmp/captured_stream.XXXXXX failed: ads.hich is: s.reads.mber of threads.threads.not ubstring of number of threads.se_fd)cve(ch is: ads.d object <hdir(") in  substring of lose(args->close_fd)e( ...) in  ...) in f  in : threads.led: er of threads.e object <threads.hdir("_fd) ...) in /tmp/captured_stream.XXXXXXXXXXXmber of threads.: ailed: d: lose(args->close_fd)-1e(ng of  of  detect the number of threads.ch is: s: ct <XXXs.++ exception with description "hdir("L"d_ == -1xecve(ng of reads.... the number of threads.xception with description " failed: -1ed: ring of s: t lose(args->close_fd)s: read_fd_ == -1ject <... cve(d_ == -1ject <f s->close_fd)L"threads.ring of ) failed: rgs->close_fd)lose_fd)/captured_stream.XXXXXXiled: /tmp/captured_stream.XXXXXXt the number of threads.aptured_stream.XXXXXX failed: s.tured_stream.XXXXXXrf threads.xception with description "yte object <d ... rthreads.read_fd_ == -1_fd_ == -1d d: XXXXXads.se_fd)string of XXXin ch is: the number of threads.ed: ubstring of  detect the number of threads.mber of threads.
XXX02Xs.led: ct <s->close_fd)) in tured_stream.XXXXXXyte object <se_fd) of s.object </tmp/captured_stream.XXXXXXtured_stream.XXXXXXct <) failed: d)stream.XXXXXXt the number of threads.s..XXXXXX++ exception with description "ed: etected X of threads.s.eption with description "yte object <= -1++ exception with description " exception with description "hich is:  exception with description "reads.am.XXXXXXs->close_fd)02Xmber of threads.ng of ad_fd_ == -1 == -1: yte object <etect the number of threads.read_fd_ == -1in ir(" failed: -byte object < detect the number of threads.stream.XXXXXXd: rd_stream.XXXXXXred_stream.XXXXXX ...) in  == -1L"d_stream.XXXXXXlose_fd) <ads.-1ir("f threads.ch is: failed: not XXXad_fd_ == -1ted = -1ject <ch is: t the number of threads.mp/captured_stream.XXXXXX: /captured_stream.XXXXXXd_ == -1) failed: ..) in  of threads...) in XXXread_fd_ == -1t ads. substring of hich is: ject <ct <d _fd_ == -1..) in red_stream.XXXXXXt the number of threads.r++ exception with description "f threads.cve(string of  detect the number of threads._fd)t led: s->close_fd)ted   is: /captured_stream.XXXXXXrthe number of threads.lose_fd)ect the number of threads.lose_fd)ads.ailed: threads. exception with description ".XXXXXX02Xream.XXXXXXads..XXXXXXect the number of threads.reads.s.... ring of f d)threads.cve(XXXads.ng of failed: ream.XXXXXX detect the number of threads. failed: string of  of iled: d)reads.reads.ct <Xmber of threads.reads..XXXXXXthe number of threads.-1iled: etected ect the number of threads. failed: mber of threads.d: d_stream.XXXXXXd_stream.XXXXXX/tmp/captured_stream.XXXXXX led: yte object <= -1X ...) in  substring of xecve(02X..) in not d)xecve(/tmp/captured_stream.XXXXXXs: /tmp/captured_stream.XXXXXXs.read_fd_ == -1d_ == -1 is: string of mp/captured_stream.XXXXXXubstring of _fd_ == -1yte object <) failed: -1 <the number of threads.Xt the number of threads.threads.mber of threads.etect the number of threads.the number of threads.read_fd_ == -1cve() failed: r.XXXXXXxecve(threads.s: not hich is: ad_fd_ == -1e number of threads.f f  of ect the number of threads.XXXXXled:  threads.L"s: threads.in s.reads./captured_stream.XXXXXXad_fd_ == -1hdir("not xception with description "d mber of threads.d:  failed: se_fd)hich is: rgs->close_fd)/captured_stream.XXXXXX-1d)ailed: lose_fd) < ...) in d_ == -1lose_fd)threads.yte object </tmp/captured_stream.XXXXXX) in ) in ir("d: .XXXXXXtured_stream.XXXXXXthreads.e number of threads.ads. detect the number of threads.led:  of t ..) in L"led: rgs->close_fd)se(args->close_fd)lose(args->close_fd)not d e( e( ...) in /tmp/captured_stream.XXXXXXse(args->close_fd)d_stream.XXXXXXlose_fd)cve(>close_fd)s.... -byte object <ream.XXXXXX ...) in ubstring of failed: iled: ... : aptured_stream.XXXXXXd)red_stream.XXXXXX/captured_stream.XXXXXX_fd)ring of  <ads.. s->close_fd)stream.XXXXXXe object <the number of threads.yte object < failed: etected rgs->close_fd)Xfailed: lose(args->close_fd) of  is: ed:  of threads.reads.ected lose(args->close_fd)/tmp/captured_stream.XXXXXXject <rred_stream.XXXXXXlose_fd)ads. failed: threads.eption with description "X of threads. exception with description "..) in t the number of threads.number of threads.
ads.XXX.XXXXXXted = -1 detect the number of threads.cve(ed: etected etect the number of threads. failed: ) failed:   of ject <cve(object <ted d: d_ == -1ads._fd_ == -1xecve(mber of threads. rgs->close_fd)yte object <ir("XXX is: XXXXX.XXXXXXir("ubstring of ubstring of aptured_stream.XXXXXXd_stream.XXXXXXtured_stream.XXXXXXt the number of threads. exception with description "-byte object <("hdir("XXXXX detect the number of threads.d_stream.XXXXXX object <d _fd_ == -1eption with description "etected : -byte object <_fd_ == -1se_fd)am.XXXXXXreads. of threads.t s->close_fd) ...) in d_ == -1f threads.er of threads.ream.XXXXXX) in aptured_stream.XXXXXXt f cve(eption with description "ad_fd_ == -1-byte object <e number of threads.object <hdir("yte object < s.ch is: f ... t .XXXXXXse(args->close_fd)/captured_stream.XXXXXX++ exception with description "L" <cve(threads. substring of s: ir("..) in string of  == -1ted rct <= -1mp/captured_stream.XXXXXXr_fd)s. == -1 of threads.xception with description "stream.XXXXXX exception with description "ads.ng of  is: XXXXXreads.d_stream.XXXXXXlose(args->close_fd)/tmp/captured_stream.XXXXXXetect the number of threads.object <_fd_ == -1/captured_stream.XXXXXXe object <d_stream.XXXXXX... (args->close_fd)led:  <tured_stream.XXXXXXetected XXXXXs->close_fd)f not X substring of ... s->close_fd)ch is: = -1 e number of threads. ...) in er of threads.. yte object <led: s: t the number of threads.ubstring of _fd)aptured_stream.XXXXXX-1ed: d_stream.XXXXXXhich is: ad_fd_ == -1s->close_fd)ads.-1tured_stream.XXXXXX
_fd_ == -1: rgs->close_fd)ir("threads.s.s.ch is: d)aptured_stream.XXXXXX/captured_stream.XXXXXXt the number of threads.e object <er of threads.t  of -1threads.object <X(args->close_fd)se_fd)ring of -1 of threads.threads.f >close_fd)t hich is: in xception with description " object <ng of /captured_stream.XXXXXX == -1ubstring of rgs->close_fd)/captured_stream.XXXXXX failed: _fd)object < ...) in s.s->close_fd)f threads.led: ("ads.XXX) in mber of threads..XXXXXX) failed: /tmp/captured_stream.XXXXXXream.XXXXXX) in reads.= -1hdir("f  failed:  e( of retect the number of threads.XXXXX failed:  failed: ng of ect the number of threads.ect the number of threads.("-byte object <cve(lose_fd)>close_fd)XXXXX-1ected >close_fd)threads.ed: ads.ir("e(= -1 ...) in yte object <t the number of threads. in >close_fd)etect the number of threads.etect the number of threads.) in etect the number of threads.am.XXXXXXobject <d_stream.XXXXXX/tmp/captured_stream.XXXXXXect the number of threads.ailed: rgs->close_fd) failed: eption with description "lose_fd)etected reads.) in ring of ected (args->close_fd)Xs->close_fd)-byte object < == -1(args->close_fd)se_fd)yte object <number of threads.ir("led: se_fd)d)not ) failed: .XXXXXXL"ir("d)eption with description "eption with description "XXread_fd_ == -1ct <
_fd)mber of threads.d)ad_fd_ == -1ring of stream.XXXXXX: ) in etected s->close_fd)ring of d_stream.XXXXXXlose(args->close_fd) is:  detect the number of threads.ads._fd_ == -1 exception with description " detect the number of threads.t the number of threads.-1:  is: reads.) in  substring of led:  <X <d_stream.XXXXXXthreads. rgs->close_fd)e number of threads.ected xception with description "s: f  substring of = -1ubstring of e number of threads...) in lose_fd)ed: e( exception with description "L" substring of red_stream.XXXXXXred_stream.XXXXXXed: number of threads./tmp/captured_stream.XXXXXX_fd)threads.
s->close_fd)++ exception with description "++ exception with description "("ir("02XXXXreads.e object <xecve(reads.f se_fd)xception with description "++ exception with description "ubstring of eption with description "ream.XXXXXXailed: e number of threads.f threads.s: ) in Xream.XXXXXXads.ct < is: reads. exception with description " of threads.e object <yte object <aptured_stream.XXXXXXlose(args->close_fd)ng of failed:  failed: = -1
s->close_fd)t aptured_stream.XXXXXX02X-1s->close_fd)rgs->close_fd).XXXXXX <eption with description "se(args->close_fd)xception with description "ect the number of threads.L"object <) in cve(led: ailed: in _fd)X. ch is: reads.string of ct <ed: ct <led: d ir("02Xread_fd_ == -1mber of threads.hich is: _fd)Xng of ct <: string of Xect the number of threads.XXXXX>close_fd)("in the number of threads.the number of threads.ubstring of (args->close_fd)read_fd_ == -1-byte object <s.t e(reads.reads. detect the number of threads./tmp/captured_stream.XXXXXX -1 == -1object <e object <ads.s. detect the number of threads.ted threads.aptured_stream.XXXXXXs->close_fd)hdir("s: cve(er of threads./captured_stream.XXXXXXse_fd)lose_fd)s: d_stream.XXXXXXtured_stream.XXXXXXreads.etected  <read_fd_ == -1ch is: ubstring of s: eption with description "in _fd_ == -1t the number of threads.s.s.t  == -1string of ) in se(args->close_fd)string of hich is: ailed: ... not led: mber of threads.etect the number of threads.("r substring of  of etect the number of threads.xecve(d: = -1xception with description "led: lose_fd)Xhdir("ailed: threads.reads.) failed: hdir(" is: led: XXXXXs->close_fd)ream.XXXXXXthreads.ng of d f aptured_stream.XXXXXX. number of threads.mber of threads.ng of hich is: red_stream.XXXXXXch is: etected ed: mp/captured_stream.XXXXXXad_fd_ == -1-1threads.ads. failed:  detect the number of threads._fd_ == -1number of threads.ed: lose_fd)>close_fd)aptured_stream.XXXXXXt >close_fd)ubstring of d)led: e number of threads.se_fd)d ailed: 
..) in  == -1d_stream.XXXXXXse_fd)... ed: red_stream.XXXXXXf ubstring of ubstring of se(args->close_fd)s.read_fd_ == -102Xtured_stream.XXXXXXads./captured_stream.XXXXXXrgs->close_fd)er of threads.yte object <aptured_stream.XXXXXXXXXXXeption with description "d  failed: not e object <s: ) in lose_fd) ad_fd_ == -1ad_fd_ == -1e(string of ("re object <ct </captured_stream.XXXXXX) in ject < substring of ect the number of threads.) failed: ) failed: d) <failed: 
ir(" ...) in lose(args->close_fd)t the number of threads.hich is: ring of tured_stream.XXXXXX <e(-byte object <f d) ...) in ct <
s: ads.ream.XXXXXX
string of the number of threads.am.XXXXXX>close_fd)ream.XXXXXXeption with description "ect the number of threads.>close_fd) is: tured_stream.XXXXXXmp/captured_stream.XXXXXXrgs->close_fd)ads./captured_stream.XXXXXX/captured_stream.XXXXXXng of (" of t ream.XXXXXXxception with description "rs.s: s.s: in ch is: ("XXXXXct <ch is: d)ream.XXXXXXtured_stream.XXXXXX-1 ...) in ... e number of threads.s: 02Xring of s.object <ch is: stream.XXXXXXled: read_fd_ == -1ject < reads.threads.. s->close_fd) failed: ... f reads.ject <>close_fd)s->close_fd)re number of threads.ads.d)ch is: in rt object < d_stream.XXXXXXd)eption with description "ream.XXXXXXthreads./captured_stream.XXXXXXt the number of threads.e(02X detect the number of threads.eption with description "am.XXXXXXed: e number of threads.s->close_fd) is: L"e(hdir("e(ect the number of threads.X>close_fd)s->close_fd)cve(f threads. == -1am.XXXXXXL"iled:  02Xads.f ect the number of threads.t the number of threads.ad_fd_ == -1 detect the number of threads.Xads.object </tmp/captured_stream.XXXXXXlose(args->close_fd)s. er of threads. xecve(threads. == -1the number of threads.ailed: f threads.lose(args->close_fd)yte object <f threads.aptured_stream.XXXXXX-byte object <yte object <.XXXXXX-1am.XXXXXX(args->close_fd)se(args->close_fd)tured_stream.XXXXXXthreads.t the number of threads.etect the number of threads.rgs->close_fd)s->close_fd) ...) in s.rgs->close_fd)... ct <ailed: in -1 detect the number of threads.e object <etect the number of threads.ubstring of  am.XXXXXX is: ad_fd_ == -1 reads./captured_stream.XXXXXX <failed: stream.XXXXXX ring of rgs->close_fd)f se(args->close_fd)++ exception with description "t ream.XXXXXX= -1f rd: etected s: -1mp/captured_stream.XXXXXX failed: (args->close_fd)
d_stream.XXXXXXct <iled:  string of e number of threads..XXXXXX detect the number of threads.... .XXXXXXailed:  <tured_stream.XXXXXX == -1s: _fd_ == -1X(args->close_fd)ed: eption with description "-byte object <ct <ubstring of threads.
 substring of  of mp/captured_stream.XXXXXX) failed: ject <iled: not iled: cve(eption with description "d: t lose(args->close_fd)ed: ..) in : ect the number of threads.not (" failed: aptured_stream.XXXXXXse_fd)lose_fd)("s->close_fd)t d_stream.XXXXXXng of yte object <Xnot  failed:  detect the number of threads.ailed: ch is: ads.object <e object <.XXXXXXring of  is:  ...) in s.ected er of threads.(args->close_fd) of threads.ads.reads.t  == -1tured_stream.XXXXXXse_fd)/tmp/captured_stream.XXXXXX= -1number of threads.e object <XXXXXe number of threads.object <= -1ring of s: hdir("lose_fd)= -1hich is: not = -1L"e number of threads. <ir("lose(args->close_fd)= -102X++ exception with description "e(ads. of threads.reads.ected  ...) in d)ubstring of number of threads.d ted /tmp/captured_stream.XXXXXXreads.XXd) substring of _fd_ == -1ng of in lose_fd)stream.XXXXXXread_fd_ == -1 failed: stream.XXXXXXXled: L") failed: d_ == -1-1threads.s.threads.string of d xception with description "led:  ...) in object <number of threads.>close_fd).XXXXXXreads.iled: -byte object <read_fd_ == -1e number of threads.threads.ads.e object <failed: ("ream.XXXXXX("/captured_stream.XXXXXX(args->close_fd)s.etect the number of threads.X of threads.XXXXXer of threads.ed:  d ailed: ads.d: 02X) in cve(++ exception with description "r_fd_ == -1se(args->close_fd)X of er of threads.e(se(args->close_fd)ng of ect the number of threads.ads. substring of ed:  s.threads.object < ...) in ... 
f threads.ring of ir("am.XXXXXXse_fd)ir("in X/tmp/captured_stream.XXXXXXL"(args->close_fd)eption with description " substring of e number of threads. == -1 failed: t the number of threads. <>close_fd) failed: hich is: ected  detect the number of threads.ected Xin f threads.ailed: am.XXXXXXstring of se_fd)Xnot f threads.: s.not ads.cve(s.ng of ads.ct <e object <rgs->close_fd)++ exception with description "lose(args->close_fd)("ed: . e object < ...) in rin s.xception with description "ected r>close_fd)eption with description " failed: etected reads. 02Xreads.etected hich is: d)ubstring of ected eption with description "not ailed: d cve(e object <yte object <ream.XXXXXXhdir("yte object <ads./tmp/captured_stream.XXXXXXs. == -1not in not s.etect the number of threads.threads.se(args->close_fd)Xreads./captured_stream.XXXXXX= -1 == -1ailed: read_fd_ == -1t the number of threads.mber of threads.ct <hdir("reads.threads.e number of threads. ed: ++ exception with description " ...) in /captured_stream.XXXXXXse(args->close_fd)red_stream.XXXXXXstring of (args->close_fd)object <
ad_fd_ == -1failed: etect the number of threads._fd_ == -1mp/captured_stream.XXXXXX) failed: ch is: -byte object <ailed: s. object <: ected XXXring of mp/captured_stream.XXXXXXch is: read_fd_ == -1ed: ("in ng of lose_fd)ed: ..) in  s: . Xetect the number of threads.) failed: rthe number of threads.rgs->close_fd)_fd)lose_fd)reads.mber of threads.ected cve( failed: s: object <d: etect the number of threads.e object <ads.XXmp/captured_stream.XXXXXXfailed: 
etect the number of threads.not d_ == -1reads.reads.xception with description ":  xception with description "++ exception with description "hdir("etected  ring of object <.XXXXXXd_stream.XXXXXXd: ect the number of threads.Xyte object <... not object <lose(args->close_fd)ng of -1d_stream.XXXXXX is: f threads.... xception with description "XXXe number of threads.) failed: /captured_stream.XXXXXXreads.hdir("++ exception with description "r.XXXXXX ...) in ch is:  of ailed: s: ch is: -1f -byte object <ed: cve(tured_stream.XXXXXXxception with description "the number of threads.object < == -1 substring of ) in  is: lose(args->close_fd).XXXXXXfailed: number of threads.lose(args->close_fd)s: . e(e(ct < is: object <led: object <am.XXXXXXd)in aptured_stream.XXXXXX <the number of threads. of threads.s.ject <. XXXXXhdir("f threads.e(f threads.ailed: 
number of threads.ads. == -1L") in ed: d_stream.XXXXXXxception with description "-byte object < == -1mp/captured_stream.XXXXXXf ring of s. detect the number of threads. exception with description "s. lose(args->close_fd)aptured_stream.XXXXXXnumber of threads.XXXaptured_stream.XXXXXXse(args->close_fd) <yte object <: ect the number of threads.ed: e object <reads. of _fd)02X(" s->close_fd)d_ == -1ch is: -byte object <string of ) failed: etected _fd): xecve(s.s.XXXXXXXX(args->close_fd)xecve(
/captured_stream.XXXXXXe(_fd)++ exception with description ") in ng of rgs->close_fd)f threads.. /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXX XXXXX == -1string of tured_stream.XXXXXX(args->close_fd)(args->close_fd)stream.XXXXXXse(args->close_fd) failed: ct <: threads.L"eption with description "reads.am.XXXXXXin _fd_ == -1d_stream.XXXXXXd)... ject <ring of ted ... e(mp/captured_stream.XXXXXXlose(args->close_fd)ubstring of ("ect the number of threads.... _fd_ == -1ng of  substring of ) failed: xception with description "tured_stream.XXXXXXthreads.XXXt .XXXXXX= -1 substring of ailed: /tmp/captured_stream.XXXXXXads.t the number of threads.ad_fd_ == -1the number of threads.aptured_stream.XXXXXXer of threads.tured_stream.XXXXXXch is: stream.XXXXXX) failed: reads.++ exception with description "ads.) in etected  /captured_stream.XXXXXX led:  < ailed: e object <threads.XXX is:  exception with description "ring of ted lose(args->close_fd)ject <Xreads.ng of d_stream.XXXXXX_fd)mber of threads.e( ...) in ..) in ads.ted rgs->close_fd) of threads./captured_stream.XXXXXX read_fd_ == -1er of threads.f threads. detect the number of threads.read_fd_ == -1etect the number of threads.ject <_fd)lose(args->close_fd)ct <eption with description ") failed: L"= -1_fd_ == -1ads.ailed: ted d_stream.XXXXXXreads.red_stream.XXXXXXread_fd_ == -1ect the number of threads.ch is: iled: f threads.failed: _fd_ == -1.XXXXXX/tmp/captured_stream.XXXXXXcve(failed: X02XXXXXXXXXe(ring of er of threads.-byte object <d)(args->close_fd)etected ng of /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXd_stream.XXXXXXreads.d s->close_fd).XXXXXX exception with description " == -1ect the number of threads.s.string of ject <..) in reads.e object <s: ..) in etected lose(args->close_fd)reads.failed: lose_fd) of d:  ...) in ad_fd_ == -1 == -1) in ads./tmp/captured_stream.XXXXXXad_fd_ == -1ad_fd_ == -1 <mber of threads.s.: xecve(= -1s:  exception with description "eption with description "
rgs->close_fd)number of threads.... ++ exception with description "e(d_ == -1t ring of tured_stream.XXXXXXted ads.etected t cve(se(args->close_fd)ng of etected se(args->close_fd)... t the number of threads.reads.) failed: failed: hdir(" == -1mber of threads.: ream.XXXXXXyte object < rgs->close_fd)-byte object <am.XXXXXX/tmp/captured_stream.XXXXXXthreads.reads.er of threads.yte object <02Xnot e(ring of d s->close_fd)read_fd_ == -1: Xin  of xecve(f   exception with description "se(args->close_fd)s.f led: /tmp/captured_stream.XXXXXX failed: ch is: reads.d_stream.XXXXXX/captured_stream.XXXXXXe number of threads.s: xception with description "number of threads.X_fd_ == -1ct <threads.not = -1ed: tured_stream.XXXXXXt ed: s.ected s.ch is: hdir("("failed: am.XXXXXXed: red_stream.XXXXXXd_ == -1mp/captured_stream.XXXXXXled: ad_fd_ == -1= -1 se(args->close_fd)ad_fd_ == -1t s.string of se_fd)t X
 ject <failed:  of threads.am.XXXXXXthreads.s: >close_fd)xception with description "
red_stream.XXXXXX. ir("tured_stream.XXXXXXiled:  exception with description " of mber of threads.ads.ad_fd_ == -1d)XXXd /captured_stream.XXXXXX substring of f ring of X failed: -byte object <failed: mp/captured_stream.XXXXXXream.XXXXXXads._fd)threads.yte object < failed: failed: _fd)s->close_fd) substring of /tmp/captured_stream.XXXXXXe number of threads.etected rgs->close_fd)-1) failed: led: ed: cve(d_stream.XXXXXXf tured_stream.XXXXXXXX == -1red_stream.XXXXXX(" of threads.number of threads.failed: se_fd)ailed: yte object <f the number of threads.eption with description "ted lose(args->close_fd)d s. of threads.read_fd_ == -1in t the number of threads.lose_fd)rgs->close_fd)mp/captured_stream.XXXXXXnot ed: red_stream.XXXXXXxception with description "lose_fd)ad_fd_ == -1ted  ...) in  <ected failed:  ailed: mp/captured_stream.XXXXXXxception with description "mber of threads.ads.hdir("ring of s: in 
e number of threads.ream.XXXXXXcve(aptured_stream.XXXXXXthe number of threads.threads.eption with description "ad_fd_ == -1in -byte object <-byte object <ring of ng of e number of threads.e( 02Xobject <hich is: ct <_fd_ == -1lose_fd)ch is: ring of led: X_fd_ == -1-1ject <read_fd_ == -1-byte object < of aptured_stream.XXXXXXt : lose(args->close_fd)ject <= -1s.stream.XXXXXXXd: ubstring of ) failed: object < of threads.++ exception with description "threads.>close_fd)f threads.02Xd  is:  substring of s: yte object </tmp/captured_stream.XXXXXXrXXXiled: _fd)lose_fd)se_fd)eption with description " detect the number of threads.rgs->close_fd)the number of threads.Xad_fd_ == -1/tmp/captured_stream.XXXXXX ...) in  ailed: red_stream.XXXXXXr..) in ads.read_fd_ == -1) in number of threads.(") failed: d)er of threads.s: ubstring of s->close_fd)hich is:  -1 detect the number of threads.not mber of threads.se_fd) detect the number of threads.xecve(in r_fd_ == -1d_stream.XXXXXX: reads.ads.ed: lose(args->close_fd)xecve((args->close_fd)e number of threads.tured_stream.XXXXXXed: d_stream.XXXXXXs.d_stream.XXXXXXrected hich is:  == -1ads.L"iled:  <ads.ream.XXXXXX.XXXXXXetected e number of threads.e object <rgs->close_fd)ected ream.XXXXXX substring of s->close_fd)s: failed: ject < ...) in ..) in  ...) in >close_fd) detect the number of threads.er of threads.ect the number of threads.ect the number of threads. not  exception with description ".XXXXXX.XXXXXX-1
t . ads.iled: object <ads.e object <ir("ject <ected Xring of threads.failed: hich is: _fd)mber of threads. exception with description "ted e number of threads. substring of L"not d)mp/captured_stream.XXXXXX. ring of e number of threads.object <ted ng of  exception with description "mber of threads....  ...) in XXXXXreads.xecve(f threads.-1 exception with description "ted lose_fd)ect the number of threads.xception with description "hdir("
etected ...  is: eption with description " <-1ailed: ad_fd_ == -1hdir("ected aptured_stream.XXXXXXtured_stream.XXXXXX: Xf d_ == -1hich is: hich is: hich is: number of threads.d: f ... ... Xect the number of threads.d: ailed:  is: lose(args->close_fd)string of threads. ...) in  substring of  . in _fd)ubstring of  of s. of threads.cve(f d_stream.XXXXXXXad_fd_ == -1ream.XXXXXXt the number of threads.rs.string of ir(" of threads.read_fd_ == -1s->close_fd)ect the number of threads.lose(args->close_fd). lose_fd)_fd)++ exception with description "red_stream.XXXXXXreads.ads.ailed: -1se_fd)ailed: ("ad_fd_ == -1..) in .XXXXXXL".XXXXXXiled:  failed: s.e(d)X detect the number of threads.f t the number of threads.the number of threads.ng of /captured_stream.XXXXXXads.e number of threads.led: s.tured_stream.XXXXXXd ect the number of threads..XXXXXXetected ream.XXXXXXads.X("t the number of threads.number of threads.ected eption with description "xception with description "XXXXXted  == -1aptured_stream.XXXXXX("_fd)ring of _fd_ == -1se(args->close_fd)ch is: reads.ected ect the number of threads.eption with description "/captured_stream.XXXXXXad_fd_ == -1se(args->close_fd) <(args->close_fd)rgs->close_fd)XXXthreads. detect the number of threads...) in ...  detect the number of threads.t the number of threads.ch is: 02Xeption with description "ad_fd_ == -1 == -1d_ == -1cve(e object <tured_stream.XXXXXX failed: read_fd_ == -1threads.er of threads.am.XXXXXX  e object <etect the number of threads.ring of ject <led: number of threads.(args->close_fd)stream.XXXXXX <X("mp/captured_stream.XXXXXXs...) in the number of threads.string of ("ream.XXXXXX of threads.(args->close_fd)tured_stream.XXXXXX(args->close_fd)threads.= -1s.ailed: .   exception with description "etect the number of threads.se(args->close_fd)ct <rgs->close_fd)red_stream.XXXXXXnumber of threads.in  == -1 failed: rgs->close_fd)... d)d:  ...) in ected xception with description "d_ == -1lose(args->close_fd)er of threads. of d: (args->close_fd)ch is: t the number of threads. failed: read_fd_ == -1e object <aptured_stream.XXXXXXs: ad_fd_ == -1red_stream.XXXXXX) in 02Xlose(args->close_fd)  of threads.read_fd_ == -1d_ == -1. ("yte object <stream.XXXXXX/captured_stream.XXXXXXtured_stream.XXXXXXmber of threads.ect the number of threads. 
failed: er of threads.>close_fd)s.d)ir("aptured_stream.XXXXXXyte object <se(args->close_fd)02Xnumber of threads. ...) in er of threads.ream.XXXXXXstring of ring of xecve(ject <yte object <lose(args->close_fd)e object <lose_fd) substring of e object < ...) in  of s->close_fd)s.f  reads.xception with description "etect the number of threads.ject <ram.XXXXXX..) in ) in  exception with description "d_ == -1_fd)s->close_fd)s: s.hich is: : ubstring of xception with description "
f threads._fd_ == -1 exception with description ".XXXXXX02Xads.object <ad_fd_ == -1 exception with description "("xecve(threads.
 in ch is: yte object <threads.f threads.mber of threads. == -1f threads./captured_stream.XXXXXX < of threads.se_fd)s.t the number of threads.mp/captured_stream.XXXXXX detect the number of threads. substring of XXX failed: ir("ads.) failed: mp/captured_stream.XXXXXXads.hdir("the number of threads.-1X failed: hdir("ad_fd_ == -1rred_stream.XXXXXXthe number of threads. detect the number of threads.string of  rect the number of threads.e number of threads.string of  detect the number of threads. detect the number of threads.-1d: ) in mp/captured_stream.XXXXXX) in -byte object <e object <ted ch is: ++ exception with description "number of threads._fd) of threads.Xeption with description "read_fd_ == -1= -1("XXXXXhich is: led: _fd_ == -1in (args->close_fd)stream.XXXXXXlose_fd)d_stream.XXXXXXyte object <) in string of >close_fd)ring of f d:  led:  substring of  ect the number of threads.ad_fd_ == -1ads.ad_fd_ == -1yte object < of ailed: red_stream.XXXXXX is: ir("the number of threads. of threads.yte object <ng of d_ == -1s: 02Xect the number of threads.rgs->close_fd)ect the number of threads.ads.ad_fd_ == -1ect the number of threads.ct < == -1-1/captured_stream.XXXXXX(">close_fd)hich is: stream.XXXXXX>close_fd)= -1  ...) in d:  == -1ir("02X  of reads.
ailed: lose_fd)ected (args->close_fd)se_fd) substring of stream.XXXXXX ...) in e number of threads.. d_stream.XXXXXXreads.lose(args->close_fd)yte object <XXXhich is: the number of threads.++ exception with description "lose(args->close_fd)hich is: d_stream.XXXXXXs->close_fd)ubstring of hdir("mp/captured_stream.XXXXXXs: cve( detect the number of threads.-byte object <tured_stream.XXXXXX. er of threads.d_stream.XXXXXX-1se(args->close_fd)t the number of threads.the number of threads.led: hdir("Xreads.t the number of threads.("etect the number of threads. substring of e number of threads.tured_stream.XXXXXXnot ected failed: reads.d_stream.XXXXXX.XXXXXXse_fd)>close_fd)lose(args->close_fd)f threads.failed: e number of threads. == -1read_fd_ == -1s->close_fd)ng of d)ads.XXXXXXXXt ... ject <d_ == -1d  e number of threads.>close_fd)reads.xception with description "ailed: mber of threads.("ream.XXXXXXtured_stream.XXXXXX... s->close_fd)s. ) failed: string of  of .XXXXXXads.eption with description "stream.XXXXXXred_stream.XXXXXXads.-1am.XXXXXX("e number of threads.reads.ed: f t d_stream.XXXXXX substring of ct <lose_fd)lose_fd)XXXXX_fd)ct <r <stream.XXXXXX is: tured_stream.XXXXXX..) in  of  detect the number of threads./tmp/captured_stream.XXXXXXd_stream.XXXXXXeption with description "object <_fd)e number of threads. detect the number of threads.aptured_stream.XXXXXXreads.se_fd)yte object <s.X-1ject <... am.XXXXXXject <aptured_stream.XXXXXXmp/captured_stream.XXXXXXlose(args->close_fd)iled: aptured_stream.XXXXXX ...) in tured_stream.XXXXXXch is: XXX= -1hich is: the number of threads.er of threads.stream.XXXXXXe(rgs->close_fd)>close_fd)/tmp/captured_stream.XXXXXX..) in object <etected d: ..) in  == -1object <= -1object <ir("read_fd_ == -1X) failed: etect the number of threads.++ exception with description "... object <mber of threads. == -1ads.t tured_stream.XXXXXXstring of  of threads.ect the number of threads.er of threads. substring of iled: ads.se_fd)ject <f = -1ad_fd_ == -1am.XXXXXX(args->close_fd)ed: /captured_stream.XXXXXXs: cve( of threads.mp/captured_stream.XXXXXX substring of in etected  == -1
ct <am.XXXXXX of in hich is: e(XXXXXthreads.ject </tmp/captured_stream.XXXXXXads.number of threads.X of ng of reads.t 
d). in not . s->close_fd)string of etect the number of threads.t d_ == -1aptured_stream.XXXXXXread_fd_ == -1s->close_fd)02Xring of se_fd) detect the number of threads.string of mp/captured_stream.XXXXXX_fd)ject <ailed: e object <number of threads.not Xxception with description "ected tured_stream.XXXXXX..) in tured_stream.XXXXXXream.XXXXXXt Xct <eption with description "threads.in hdir("hich is: hich is: red_stream.XXXXXX of threads.f /captured_stream.XXXXXXs->close_fd) substring of lose_fd)ted f threads.xception with description "e number of threads.number of threads.++ exception with description "
02Xreads.(args->close_fd) exception with description ") failed: se(args->close_fd)hdir("..) in am.XXXXXXf threads.ct <s.f threads.) failed: /captured_stream.XXXXXXads.e object <tured_stream.XXXXXXs.cve(d)L"object < of threads.the number of threads.ng of ream.XXXXXXrch is: ir("se(args->close_fd)ect the number of threads.d)lose_fd).XXXXXX/tmp/captured_stream.XXXXXXd)in /captured_stream.XXXXXXed: r. Xreads. ...) in ject </captured_stream.XXXXXXd  ads.Xeption with description "++ exception with description "object <lose_fd)XXXs: d)ream.XXXXXXected string of ject <f threads.-1L"ir("
er of threads.) failed: read_fd_ == -1number of threads.XXXXXreads.ted er of threads.ng of xception with description "stream.XXXXXX++ exception with description "ject <se_fd)ads.ng of etected e number of threads.s. ct <hdir("threads. <) in aptured_stream.XXXXXX(" substring of  ...) in f threads.++ exception with description "xception with description "object <not   yte object < == -1d_stream.XXXXXX detect the number of threads.reads. is:  failed: ject <rgs->close_fd)ad_fd_ == -1led: threads.cve(ailed: d hdir("xecve() in  the number of threads...) in ads.ads...) in mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXject <in d)XXXXXs->close_fd)lose(args->close_fd)xception with description "f threads.s->close_fd)retected xecve( == -1ect the number of threads.ir("ir("++ exception with description "++ exception with description ": iled: ads.) in reads.rreads. f threads.rgs->close_fd)xecve(ct <xception with description "red_stream.XXXXXXe(s->close_fd)ream.XXXXXXobject <ected stream.XXXXXXXXXnot t the number of threads.ring of XXXXXXXXring of /captured_stream.XXXXXXt the number of threads.... mber of threads.ad_fd_ == -1("ubstring of  ...) in cve(/tmp/captured_stream.XXXXXXd)number of threads.se_fd)ct <reads.d)hich is:  led: in  detect the number of threads.xecve(se_fd)mp/captured_stream.XXXXXX of eption with description "lose(args->close_fd)am.XXXXXXhdir("etected ++ exception with description "read_fd_ == -1threads. XXXtured_stream.XXXXXXreads.) in ected ailed: ct <mp/captured_stream.XXXXXXaptured_stream.XXXXXXected  ...) in ch is: XXXXXject < ...) in >close_fd)(args->close_fd)lose_fd)s->close_fd)ream.XXXXXXd  detect the number of threads.t _fd_ == -1led: . >close_fd)e number of threads._fd)d ring of  == -1xecve( <_fd_ == -1t the number of threads.e( failed: L"... = -1_fd)e number of threads.-byte object <reads...) in reads.the number of threads.mp/captured_stream.XXXXXXe(ailed: /tmp/captured_stream.XXXXXXring of f ng of  ...) in .XXXXXXs. == -1ream.XXXXXXed: 02X-1hich is: ailed: reads. ads.) in iled: iled: yte object <se_fd)f d_ == -1er of threads.f e(s: reads. of threads. is: hich is: mp/captured_stream.XXXXXXads.ject <ubstring of am.XXXXXXs.ng of yte object <er of threads.d_stream.XXXXXXin e object <02Xrgs->close_fd)) failed: xecve(failed: the number of threads.red_stream.XXXXXXads.lose(args->close_fd)ted f L" etected etect the number of threads.threads.aptured_stream.XXXXXXe object <XXXXXL") in am.XXXXXXe( threads.t 
 not the number of threads.d .XXXXXXred_stream.XXXXXXreads.etected xecve(f yte object <failed: s.X of failed:  se(args->close_fd)d: d_ == -1red_stream.XXXXXX-1etect the number of threads.e number of threads.aptured_stream.XXXXXXetected threads.ads.led: lose(args->close_fd) eption with description "etect the number of threads. ...) in lose_fd)iled: not ("..) in reads.t  == -1(args->close_fd)etected -byte object <ng of  ected ) failed: threads.XXXXXir("
d)se(args->close_fd)failed: cve(read_fd_ == -1++ exception with description "er of threads.) in aptured_stream.XXXXXXected e(.  == -1_fd_ == -1mp/captured_stream.XXXXXXhich is: iled: t the number of threads.XXXXXXected d_ == -1X: ads.ring of yte object <se(args->close_fd)ads._fd)e object <failed: reads.number of threads.= -1ng of  == -1-1number of threads.++ exception with description "number of threads.
se_fd)etect the number of threads.Xd not ected tured_stream.XXXXXXe(the number of threads.XXXam.XXXXXX..) in ...  substring of ject <L"yte object <not lose(args->close_fd)ream.XXXXXXe(ch is: s.s.er of threads.) in mber of threads._fd_ == -1hdir(" failed:  is: eption with description "red_stream.XXXXXXread_fd_ == -1led: ed:  ted threads.tured_stream.XXXXXXs.number of threads.er of threads...) in  ...) in ir("-byte object <) failed: d_ == -1Xject <se_fd)= -1XXXect the number of threads.ad_fd_ == -1d_stream.XXXXXXd_stream.XXXXXX detect the number of threads.hich is: .  >close_fd)e object <Xse_fd) substring of lose_fd)ect the number of threads.read_fd_ == -1ct <ailed: (" substring of : led: >close_fd)string of am.XXXXXXad_fd_ == -1xception with description "02Xailed:  substring of e(rthe number of threads.hdir("se(args->close_fd)Xf threads.-byte object < detect the number of threads.iled: ch is: d_stream.XXXXXXetected ++ exception with description "s->close_fd)mber of threads.d: d_stream.XXXXXXs->close_fd)red_stream.XXXXXX failed: 02Xthreads. ad_fd_ == -1ad_fd_ == -1stream.XXXXXXring of d)) failed: string of yte object <: -byte object <rgs->close_fd)red_stream.XXXXXXmber of threads. detect the number of threads...) in = -1hich is: _fd_ == -1-byte object <object <string of cve(e number of threads.XXXlose(args->close_fd)ect the number of threads. <in cve(-1-1_fd) substring of X substring of = -1ads.e number of threads.-1...  of ring of e object <red_stream.XXXXXXf threads./captured_stream.XXXXXX("rt the number of threads.hdir("robject <f threads.se_fd)f mber of threads. stream.XXXXXXxception with description "se_fd)tured_stream.XXXXXXe object <threads.= -1) failed: d)d: reads.iled: XXXam.XXXXXX failed: -1threads.Xer of threads. <) failed: etected lose(args->close_fd)d_ == -1s.failed: read_fd_ == -1/captured_stream.XXXXXXthreads.  exception with description "ed: d_stream.XXXXXXream.XXXXXXubstring of red_stream.XXXXXXng of the number of threads.etect the number of threads.ailed: threads.s: r ...) in  substring of object <-byte object <the number of threads.d_stream.XXXXXXlose_fd) of threads.t the number of threads.ailed: lose_fd)hdir("not ) failed: s: failed:  (args->close_fd)/tmp/captured_stream.XXXXXXL"r substring of >close_fd)ads.  substring of  failed:  failed: t the number of threads.... s->close_fd) of threads. of /tmp/captured_stream.XXXXXXt the number of threads.iled: d). /tmp/captured_stream.XXXXXXubstring of stream.XXXXXXXXXthe number of threads.ailed:  <lose(args->close_fd)-1d hich is: ("object <yte object <ch is: rgs->close_fd)r++ exception with description "etect the number of threads.se(args->close_fd) failed: ct <ubstring of  of -1red_stream.XXXXXX of threads.-byte object <lose_fd)d_ == -1am.XXXXXXreads.er of threads.ir(" <.  failed:  exception with description "tured_stream.XXXXXXxception with description "etected -1 L" of threads.02Xect the number of threads.hdir(") failed: lose(args->close_fd)e(ch is: eption with description "ct <... d_stream.XXXXXXect the number of threads.xecve( detect the number of threads.read_fd_ == -1L"
-1t ng of not led: s->close_fd)s.X of threads.number of threads.... s.number of threads.threads. : rgs->close_fd)failed: XXXXX) in f threads...) in reads.am.XXXXXXxecve(rgs->close_fd)s: ) failed: yte object < is: e(s.xception with description "ram.XXXXXX++ exception with description "hich is: ads.s->close_fd)d_ == -1 f /captured_stream.XXXXXX ected cve(d)  of failed: se(args->close_fd)ng of -1reads.e object <(") failed: not 02Xthe number of threads.iled: ng of s->close_fd)tured_stream.XXXXXXd_ == -1s->close_fd)_fd)the number of threads.-byte object < of threads.ads.d)cve(lose_fd)_fd)e(ailed: threads.s: se_fd)ads. substring of e number of threads._fd)se_fd)= -1 detect the number of threads.lose(args->close_fd)aptured_stream.XXXXXXs.string of f  ("ubstring of ir("string of ads.ir("lose(args->close_fd)ir("XXXXX of ct < <ailed: read_fd_ == -1
not ... f threads.lose(args->close_fd)in  ...) in ted ch is: d_ == -1..) in >close_fd)d_stream.XXXXXXhich is:  of threads.
 of /tmp/captured_stream.XXXXXXs.t L" hdir("iled: ads.>close_fd)failed: f  == -1ream.XXXXXXring of aptured_stream.XXXXXXt the number of threads. <not se(args->close_fd)ad_fd_ == -1number of threads.object <-byte object <ubstring of yte object <hich is: cve(lose_fd)d: s.ad_fd_ == -1reads.red_stream.XXXXXXted   of er of threads.eption with description "Xs./captured_stream.XXXXXXread_fd_ == -1failed: etected s.er of threads.X("e(d  <xecve(ir("iled: : f threads.t ng of ch is: threads.XXXXXcve(hich is: string of ads.yte object <ailed: ng of e number of threads.xception with description "e number of threads.etected object <t ads.se_fd)++ exception with description " failed: ream.XXXXXXt the number of threads.cve(XXXeption with description "iled: hdir(" exception with description "reads._fd_ == -1L"Xted X) failed: cve((args->close_fd)ed: rer of threads.-byte object <Xreads.mber of threads.yte object <stream.XXXXXXd_ == -1led: reads.not .XXXXXXcve(ads.stream.XXXXXXnumber of threads.ir("ject <ream.XXXXXX substring of in : ct < is: yte object <s->close_fd) ct <e object <XXXXXt led: -byte object <string of ailed: se(args->close_fd) ++ exception with description "lose_fd)e number of threads.++ exception with description "XXXXXXed: eption with description "... d: d_ == -1lose(args->close_fd)yte object <-byte object <stream.XXXXXX.XXXXXXailed: ject <ads.ected  Xring of Xf  exception with description "XXct < d 
ubstring of r... f etected eption with description "s->close_fd)L" ...) in yte object <the number of threads.f threads.("lose_fd) == -1f failed: ads.in reads.f threads.ng of (".XXXXXXetect the number of threads.threads.the number of threads.se_fd) of : ) in d_stream.XXXXXXXXXXt the number of threads.e object <se_fd)not d d_stream.XXXXXXtured_stream.XXXXXXstring of ads. <-byte object <etected = -1e( == -1not  detect the number of threads.ect the number of threads.failed: ) failed:  == -1etect the number of threads.ject <xecve(yte object <ring of hich is:  of threads.threads. == -1ads.lose_fd)++ exception with description "s->close_fd)cve() in ads.stream.XXXXXXreads.am.XXXXXXmber of threads.t ed: red_stream.XXXXXXnot = -1ubstring of  detect the number of threads.etect the number of threads.t the number of threads.er of threads.ect the number of threads. failed: reads.: the number of threads.reads.stream.XXXXXXads.object <("ch is: ) in d: string of ng of ring of er of threads. of threads.etect the number of threads.e object <ed: mber of threads.er of threads.ed: string of threads.. read_fd_ == -1not stream.XXXXXXhdir(" substring of 02X_fd): ream.XXXXXX ubstring of ch is: e(("++ exception with description "xecve(e(ream.XXXXXXL"ubstring of 02X++ exception with description "d)lose(args->close_fd)s.e object <threads. == -1..) in d ted number of threads.the number of threads.
. tured_stream.XXXXXXstring of e number of threads.mber of threads.ected xecve( of threads.threads.f threads.ch is:  of threads. ...) in X(args->close_fd)reads.xception with description "iled: string of ) in f ted L"t the number of threads.threads.am.XXXXXXXyte object <...  == -1mp/captured_stream.XXXXXXhdir("iled:  == -1L" <ubstring of e object <++ exception with description " == -1L"iled: led: tured_stream.XXXXXX of ir(" ject <ed: e number of threads.t the number of threads.stream.XXXXXXXXXXXXring of etected stream.XXXXXXch is: ubstring of ring of L"ted string of s. detect the number of threads.re object <(args->close_fd) == -1failed: stream.XXXXXX++ exception with description "xecve( >close_fd)failed: 02Xubstring of  exception with description "hich is:  ...) in ream.XXXXXXstring of  failed: am.XXXXXXe(("ct <iled:  substring of  substring of XXXXXXin  <the number of threads.t the number of threads. detect the number of threads.XXXread_fd_ == -1 of threads.hdir(" of d the number of threads.L"e object <
yte object <.XXXXXXf s->close_fd)Xng of /captured_stream.XXXXXXads.e object <lose_fd)hich is: eption with description "e object <
in er of threads.) in  is: ads.X... s: hdir("threads.s. exception with description " ...) in -byte object <..) in tured_stream.XXXXXXected ring of ads.iled: e object <s.cve(tured_stream.XXXXXXin read_fd_ == -1s->close_fd)ted s.d)("stream.XXXXXX= -1the number of threads.-1) failed: e(d)
ect the number of threads.aptured_stream.XXXXXXL"reads.XXXXXected  is:  substring of ubstring of _fd_ == -1e(yte object <t the number of threads.(args->close_fd)mp/captured_stream.XXXXXXobject <++ exception with description "read_fd_ == -1++ exception with description "string of s->close_fd)yte object <string of ads.lose(args->close_fd)lose(args->close_fd)se(args->close_fd) of threads.ads.t the number of threads.yte object <(args->close_fd)XXXXX) failed: in ct <s.ch is: red_stream.XXXXXX(args->close_fd) <hdir("..) in  exception with description "
ailed: s.: ailed: ct <ng of ject < threads. er of threads..XXXXXXreads.= -1string of ..) in in s.iled: ads.reads. of number of threads.stream.XXXXXXs.Xng of ... se(args->close_fd)Xected ads.mber of threads.failed: ted ("xception with description "ject <se(args->close_fd)failed: ng of aptured_stream.XXXXXXse_fd)d d_ == -1) in aptured_stream.XXXXXX failed: iled: e(_fd_ == -1 of rct <aptured_stream.XXXXXX-1 of  substring of ad_fd_ == -1mp/captured_stream.XXXXXXL"string of ject < failed: ct < is: threads.se_fd) ...) in cve(e(d: ng of -1d e object <lose_fd)_fd)in : stream.XXXXXXlose(args->close_fd)-1ads.lose_fd)red_stream.XXXXXXd xception with description "Xam.XXXXXX of threads.ng of  exception with description "ream.XXXXXXXXX ...) in _fd_ == -1++ exception with description "_fd)) in s.etected e object <-byte object <yte object <object <threads.rlose_fd)02Xred_stream.XXXXXX. -1in ailed:  is: lose_fd)iled: ad_fd_ == -1ir("t the number of threads. exception with description "string of stream.XXXXXXt the number of threads.ed: . ) in xception with description "mp/captured_stream.XXXXXX) failed: stream.XXXXXXfailed: ected /tmp/captured_stream.XXXXXXs->close_fd)ed: ect the number of threads.s.etect the number of threads.ream.XXXXXXd_ == -1led: am.XXXXXX) in xecve(in ng of threads.object < is: .XXXXXXL"mp/captured_stream.XXXXXXthreads.t  failed: se(args->close_fd)hdir("e(Xir("yte object < is: ring of rgs->close_fd)_fd_ == -1object <d: d_stream.XXXXXX object <e object < _fd)e(ad_fd_ == -1(args->close_fd)xception with description ") in d)XXXlose_fd)iled: ected stream.XXXXXX hich is: -byte object <. L": reads.ject <d_ == -1mp/captured_stream.XXXXXX) in  is: rng of  string of ected -1mp/captured_stream.XXXXXX-1++ exception with description "s.ch is: d_ == -1yte object <hdir("f threads.ring of etect the number of threads.cve(se(args->close_fd)reads.cve(t hich is: object <ad_fd_ == -1lose(args->close_fd)-1(args->close_fd)Xe(er of threads.number of threads.ect the number of threads.ad_fd_ == -1e object <ted er of threads.ring of _fd_ == -102X substring of  == -1..) in ("-byte object <.XXXXXXct <iled: d: s.t ) failed:  ect the number of threads.s->close_fd)d  detect the number of threads.>close_fd)s. ...) in string of threads. detect the number of threads..XXXXXXfailed:  ...) in rgs->close_fd)t xception with description "/tmp/captured_stream.XXXXXXse_fd)lose(args->close_fd)etected ream.XXXXXXf threads.ng of cve(mber of threads.in d read_fd_ == -1.XXXXXXnot string of X exception with description "red_stream.XXXXXX XXXmp/captured_stream.XXXXXX= -1hich is: hdir("Xnot 02X is: ) in  of etected -byte object < ("L"-byte object <e number of threads.tured_stream.XXXXXXnumber of threads....  of ring of ++ exception with description " of : red_stream.XXXXXX_fd)xception with description "ct <rgs->close_fd)ct <e(reads.string of xecve(rgs->close_fd)ailed: d_stream.XXXXXXd)) in hdir("ch is: ad_fd_ == -1d_stream.XXXXXX failed: in ) in 
er of threads.red_stream.XXXXXX
am.XXXXXXs._fd)... ct <.XXXXXXected ream.XXXXXX>close_fd)X exception with description "lose(args->close_fd)threads.X of ected -1 exception with description "se(args->close_fd) is: not ch is: yte object <XXXXXstream.XXXXXXmp/captured_stream.XXXXXXected s.e number of threads.aptured_stream.XXXXXXt the number of threads.("ected not ..) in mber of threads.e object <ads.ad_fd_ == -1d string of s.ted se_fd)d)= -1iled: failed: s. == -1ir(" failed: t in L"  detect the number of threads.s.red_stream.XXXXXX++ exception with description "d_ == -1tured_stream.XXXXXXxception with description " == -1.XXXXXXhdir("ect the number of threads.aptured_stream.XXXXXX. ailed:  d: object <cve(: (args->close_fd)reads.) failed: ch is: reads.("in mber of threads.ng of er of threads.ads.failed: ads.cve(e(ted d_stream.XXXXXXX. cve(d_ == -1ads.s->close_fd)iled: tured_stream.XXXXXX/captured_stream.XXXXXXetected -byte object <ailed:  ...) in d_ == -1 substring of reads.t the number of threads.ad_fd_ == -1) failed: yte object <d: -1... XXX of threads.ailed: ream.XXXXXX.XXXXXX... ad_fd_ == -1mp/captured_stream.XXXXXXobject <am.XXXXXXiled: am.XXXXXXads.number of threads.ads.
tured_stream.XXXXXX ads.stream.XXXXXXads.lose(args->close_fd).XXXXXXad_fd_ == -1read_fd_ == -1iled:  xecve(ected  substring of stream.XXXXXX..) in ubstring of lose_fd)eption with description "e number of threads.d_ == -1++ exception with description "ir("d  ...) in = -1(" ...) in ("ct <read_fd_ == -1number of threads./captured_stream.XXXXXX == -1ng of rgs->close_fd).XXXXXXd_stream.XXXXXXthreads.eption with description "lose_fd)-byte object <: cve(aptured_stream.XXXXXX ch is: yte object <the number of threads.s: am.XXXXXXlose_fd)ted aptured_stream.XXXXXXring of  failed: xception with description "ailed: ject </captured_stream.XXXXXXxecve(
 failed: _fd)e number of threads./captured_stream.XXXXXXream.XXXXXX: ads._fd_ == -1Xse_fd) detect the number of threads.etect the number of threads...) in am.XXXXXXct < substring of  detect the number of threads..XXXXXXe object <lose(args->close_fd)eption with description " is: ) in 
string of  is: reads.XXXe( is: . d: not mp/captured_stream.XXXXXXrgs->close_fd)failed: cve(d: ) in -byte object <ng of  is: t (args->close_fd)read_fd_ == -1-1reads.led: ("tured_stream.XXXXXXthreads...) in not yte object <ring of ject <read_fd_ == -1string of e number of threads.ream.XXXXXXlose(args->close_fd)/tmp/captured_stream.XXXXXX. ubstring of ir("ected the number of threads. is: failed: s.("= -1reads.ring of -1d_ == -1read_fd_ == -1 of threads.iled: se(args->close_fd)d_stream.XXXXXXected ected ir("ect the number of threads.ubstring of lose(args->close_fd)-1XXXd  is: string of red_stream.XXXXXXhdir("_fd_ == -1red_stream.XXXXXXubstring of d_ == -1am.XXXXXX_fd_ == -1d: ng of string of  eption with description "t d:  of threads.ring of ir("in led: ring of etect the number of threads.not ) in  substring of  exception with description "er of threads.in r <ring of ... rf threads.e(s->close_fd)e(-byte object <: ected  substring of ) in  of d_ == -1threads.rgs->close_fd)s->close_fd)ubstring of er of threads.red_stream.XXXXXXt ads.ream.XXXXXX_fd_ == -1ng of t the number of threads.s: ch is: ("ubstring of ads.e number of threads. exception with description "iled: . aptured_stream.XXXXXXads.... xecve(
in eption with description "reads.ct <_fd_ == -1  exception with description "mp/captured_stream.XXXXXXch is: hich is:  detect the number of threads.failed: s->close_fd)s->close_fd)XXXs: t the number of threads.er of threads. of threads.d_ == -1ject <the number of threads.stream.XXXXXXfailed: 
/captured_stream.XXXXXXs: /captured_stream.XXXXXX of s.eption with description " ...) in ring of 02Xthreads.s: tured_stream.XXXXXX>close_fd)ch is:   d_stream.XXXXXX) in stream.XXXXXX of threads.e(read_fd_ == -1led: d: etected XXX>close_fd)t the number of threads.s.iled: = -1    etected ("ads.led: led: red_stream.XXXXXXrgs->close_fd)d_ == -1: cve(>close_fd)mber of threads.) in ring of t /tmp/captured_stream.XXXXXX_fd_ == -1 L"am.XXXXXX-1ring of d_stream.XXXXXX_fd)s->close_fd)s->close_fd) substring of ..) in 02Xhich is: t ads.t the number of threads.d) is: /captured_stream.XXXXXXfailed: = -1tured_stream.XXXXXX-byte object <Xrmber of threads. detect the number of threads.Xd_ == -1xception with description " s->close_fd)ring of t -1ream.XXXXXXs.ed: d_ == -1 of threads. == -1mber of threads.mber of threads.ads.threads.led: lose_fd)threads.-1ring of f d)s.threads./captured_stream.XXXXXX-1ads. ...) in not hich is:   of am.XXXXXXhich is: f ng of hich is: ng of  of (args->close_fd)s: 
lose(args->close_fd)d_stream.XXXXXX detect the number of threads.er of threads.e(aptured_stream.XXXXXXct <read_fd_ == -1eption with description "Xetect the number of threads.mp/captured_stream.XXXXXXe(read_fd_ == -1etect the number of threads.the number of threads.ad_fd_ == -1 L"ailed: xecve( == -1.XXXXXX>close_fd) is: am.XXXXXXd_stream.XXXXXXxception with description "red_stream.XXXXXXeption with description ". iled: threads.ailed: etect the number of threads.d led: mber of threads.ect the number of threads.etect the number of threads.-byte object <ct <.XXXXXXr.XXXXXXads.Xmber of threads. substring of e number of threads.ected tured_stream.XXXXXXr == -1se(args->close_fd)object <ring of not am.XXXXXXstream.XXXXXXt the number of threads.ng of XXX 02XL"object </tmp/captured_stream.XXXXXX/captured_stream.XXXXXX_fd_ == -1reads.) in  <hdir("e object <ct <= -1 exception with description "..) in  == -1in threads.e(ed: se_fd)se(args->close_fd)rhdir("ct <Xam.XXXXXX("the number of threads.Xir("ubstring of hich is: : d: red_stream.XXXXXXailed: ... ..) in se_fd)t cve(aptured_stream.XXXXXX... -1ads..XXXXXXaptured_stream.XXXXXXthe number of threads.ng of . mber of threads. substring of stream.XXXXXXin ject <reads. of threads./captured_stream.XXXXXXXfailed: L" failed: yte object <se_fd)t ... led: led: ("(args->close_fd)ch is: s.ring of L"d_ == -1ring of ir("rgs->close_fd)L"f ailed: Xthe number of threads./tmp/captured_stream.XXXXXXream.XXXXXXd_stream.XXXXXXrgs->close_fd) detect the number of threads.Xailed:  ...) in e number of threads.ir("ted ..) in er of threads.L"..) in 02Xct <ct <_fd_ == -1r == -1ir(" detect the number of threads.ct <("s->close_fd)++ exception with description ") in f (" detect the number of threads. </captured_stream.XXXXXXse_fd)threads.d  == -1-byte object <) in in s.iled: mber of threads.s: = -1ad_fd_ == -1-byte object <02X se_fd)not ed:  read_fd_ == -1number of threads...) in  of : threads.lose_fd)e object < ect the number of threads.s: stream.XXXXXXd ads. failed: s: ads.tured_stream.XXXXXX..) in etect the number of threads.f threads.Xted . XXXXXnot d_ == -1read_fd_ == -1failed: number of threads. == -1number of threads.-byte object < == -1red_stream.XXXXXXobject <... xception with description "mber of threads.XXXXX: aptured_stream.XXXXXXted s: t rch is: se_fd).XXXXXXted s->close_fd)/tmp/captured_stream.XXXXXX <not s: ted aptured_stream.XXXXXXream.XXXXXXected t .XXXXXXed:  object <mber of threads.(args->close_fd)not ads.red_stream.XXXXXXe(e(lose_fd)d_ == -1ring of (args->close_fd) exception with description "= -1 substring of ect the number of threads.hich is: : ) failed: ir("X.XXXXXXs.not ring of ailed: e(d_ == -1tured_stream.XXXXXXd:  ng of  detect the number of threads.er of threads.L" exception with description "se_fd)ng of 02Xthe number of threads. detect the number of threads.d  xecve(etected xception with description "("d: er of threads.) failed: L"_fd)s->close_fd)etect the number of threads. == -1 < <threads.the number of threads.am.XXXXXX of threads.am.XXXXXXer of threads.hich is: ++ exception with description "red_stream.XXXXXXrgs->close_fd)er of threads.ad_fd_ == -1ted 02Xstring of  substring of e(object < 02Xreads.read_fd_ == -1in iled: f threads.
ject < lose_fd) == -1/captured_stream.XXXXXXailed: 
>close_fd).XXXXXX..) in   exception with description "se_fd)L"(args->close_fd)L"_fd)am.XXXXXXe number of threads.led: hdir("ng of rd hich is: mp/captured_stream.XXXXXX/captured_stream.XXXXXX: ted threads.
 is: d_stream.XXXXXXubstring of : _fd) == -1yte object <ailed: s->close_fd)am.XXXXXXin er of threads.ct <... /tmp/captured_stream.XXXXXX
stream.XXXXXXaptured_stream.XXXXXXect the number of threads.tured_stream.XXXXXX(args->close_fd)read_fd_ == -1er of threads.mber of threads.ed: ubstring of d cve(led: ads.
 detect the number of threads.ng of  detect the number of threads.cve( substring of red_stream.XXXXXXream.XXXXXXubstring of : mber of threads.) in (args->close_fd)/tmp/captured_stream.XXXXXXream.XXXXXX
ring of s. is: _fd_ == -1... ream.XXXXXXs.iled: tured_stream.XXXXXXrgs->close_fd)e number of threads.object < failed: L"e number of threads.e object <e object < se_fd)cve(ads.t the number of threads.X substring of led: : 02X>close_fd)d_ == -1d: object < mber of threads.) failed: e number of threads. .XXXXXXmp/captured_stream.XXXXXX substring of read_fd_ == -1ted iled: hich is: /captured_stream.XXXXXXetect the number of threads.s->close_fd) is: d)cve(ring of ted Xthe number of threads.ject < <am.XXXXXX++ exception with description "ubstring of .XXXXXXmp/captured_stream.XXXXXXread_fd_ == -1.XXXXXXrch is: ... Xthreads.e number of threads.number of threads..XXXXXX detect the number of threads.iled: ailed: ream.XXXXXXreads.hich is: f  detect the number of threads.s:  exception with description " of threads.d: : lose(args->close_fd)/tmp/captured_stream.XXXXXXxecve(lose_fd) e number of threads.not ct <ailed: ++ exception with description "ng of ) in tured_stream.XXXXXXreads.hdir("red_stream.XXXXXXect the number of threads.) failed: xception with description "ads.threads.ads.++ exception with description "lose(args->close_fd) < s.tured_stream.XXXXXXlose(args->close_fd)= -1/captured_stream.XXXXXXct <threads.er of threads.eption with description "ng of stream.XXXXXXad_fd_ == -1 ...) in   (args->close_fd)ream.XXXXXXXXXs. .XXXXXXt the number of threads.s->close_fd)string of >close_fd)object <f threads..XXXXXXreads.>close_fd) of threads.tured_stream.XXXXXX.  < detect the number of threads.object <ads.. ct <f  ch is: d)er of threads.ct <lose(args->close_fd)d: ng of s: mber of threads. XXXXXrd  ng of hdir("XXXubstring of etect the number of threads.) in se_fd)lose_fd)e object <am.XXXXXXstream.XXXXXXreads.-byte object <iled: ryte object <xecve( exception with description "XXXXXir("ch is: _fd)threads.ed: string of s: ream.XXXXXX ...) in d e number of threads.s.red_stream.XXXXXX/captured_stream.XXXXXX exception with description " is: Xthreads. t the number of threads.ubstring of ted /tmp/captured_stream.XXXXXXch is: e( == -1xception with description "ad_fd_ == -1. xecve( is: rect the number of threads.lose_fd)= -1) failed: ring of d: etect the number of threads.s.ch is: d ject <ream.XXXXXXtured_stream.XXXXXXct <threads..XXXXXXct <("ng of  failed: xecve(not  substring of _fd_ == -1read_fd_ == -1e(d)rgs->close_fd)reads.lose(args->close_fd)lose_fd)XXXXXnumber of threads.s: >close_fd)s: d_stream.XXXXXX. s.ailed: _fd_ == -1ject < of hich is:  exception with description " detect the number of threads.lose_fd)ads.lose(args->close_fd)(args->close_fd) is:  exception with description "f rgs->close_fd)led: = -1ir(") failed: threads.XXXe( of  ...) in ed: = -1string of iled: in lose_fd)reads. exception with description "-1-1 t s.etect the number of threads. == -1/captured_stream.XXXXXXred_stream.XXXXXXeption with description "not lose_fd)led: ch is: ir("f failed: ch is: mp/captured_stream.XXXXXXse(args->close_fd)string of lose_fd)("read_fd_ == -1se_fd)>close_fd)cve(rgs->close_fd)failed: mber of threads.etected ) failed: L"++ exception with description "ring of ect the number of threads.XXXXXed:  detect the number of threads.XXX ...) in d: number of threads.xception with description "ject <e(hich is: e object <= -1mp/captured_stream.XXXXXXt ads. exception with description "hdir("ad_fd_ == -1ir("iled: etect the number of threads.number of threads.s. == -1reads.d_ == -1..) in f ads.XXXXXxception with description "ted XXXam.XXXXXX exception with description "
stream.XXXXXXfailed:  <lose(args->close_fd)/captured_stream.XXXXXXthreads.
red_stream.XXXXXX <= -1s.tured_stream.XXXXXXreads.hich is: eption with description "ubstring of = -1.XXXXXX... se_fd)string of f threads.XXt the number of threads.e(ads.xception with description "object <e number of threads. mber of threads.reads.d_ == -1xecve( ...) in not _fd_ == -1rted number of threads.string of : s->close_fd)s: /tmp/captured_stream.XXXXXXxception with description "yte object <XXXXXred_stream.XXXXXXin .XXXXXXse(args->close_fd) of threads.: f threads.lose_fd)ng of /captured_stream.XXXXXXd_stream.XXXXXX ads.Xcve(e number of threads.reads.in _fd_ == -1ir("ect the number of threads.aptured_stream.XXXXXXng of ) failed: reads.rgs->close_fd)red_stream.XXXXXXcve(e(failed: >close_fd)mber of threads._fd)_fd_ == -1s: ed: f threads.ailed: s: reads.threads.rhdir("... d_stream.XXXXXXiled:  failed:  exception with description "ailed: se_fd)Xir("red_stream.XXXXXXed: threads.eption with description "f threads. <hich is: f X failed: ) failed: f ect the number of threads.-1Xxception with description "ads. 
XXXmber of threads.t d: object <reads.reads.er of threads.reads.s.: s.threads. <ailed:  detect the number of threads.ch is: >close_fd)reads.ir("-1er of threads.ject < e(stream.XXXXXXir("string of in e number of threads.etect the number of threads.ads.etect the number of threads.hdir("in ject </tmp/captured_stream.XXXXXX failed: hich is: d_stream.XXXXXX-byte object <e object <in read_fd_ == -1ect the number of threads.ailed: ads.etected . read_fd_ == -1lose_fd)s->close_fd)se(args->close_fd) of ++ exception with description "hich is: ect the number of threads.in tured_stream.XXXXXXs:  
ad_fd_ == -1f threads.in tured_stream.XXXXXX: >close_fd)led: reads. is: ++ exception with description " failed: e object <se(args->close_fd)etect the number of threads.f X/captured_stream.XXXXXXXXXXXrhdir("object < <ream.XXXXXX(args->close_fd)xception with description ") in not r of threads.se_fd)e( of threads.se_fd)ubstring of etect the number of threads.ed: lose_fd)d: string of t aptured_stream.XXXXXX substring of xception with description "ted  of threads.er of threads.("number of threads.xecve(..) in ads.threads.eption with description "tured_stream.XXXXXXam.XXXXXX/tmp/captured_stream.XXXXXX < of threads.) failed: t . -byte object <(args->close_fd)the number of threads.Xf threads.ject <
tured_stream.XXXXXXailed: _fd_ == -1reads.hich is: ject <t the number of threads.led: _fd_ == -1threads.in cve(e number of threads.lose(args->close_fd)the number of threads.-byte object <-byte object <led: d_ == -102Xeption with description "d_ == -1++ exception with description "lose(args->close_fd) of threads.threads.s->close_fd)d:  of mber of threads.s->close_fd)ubstring of  substring of d_ == -1ailed: lose_fd)mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXreads.led: ject <("(args->close_fd)ir("xception with description "mber of threads. detect the number of threads.led: _fd_ == -1ream.XXXXXXin f threads. tured_stream.XXXXXXread_fd_ == -102X("/tmp/captured_stream.XXXXXXf number of threads. ..) in not  ads.reads.02Xd_ == -1lose_fd)reads.s.ailed: _fd_ == -1mp/captured_stream.XXXXXXad_fd_ == -1eption with description "ted reads.not etect the number of threads.number of threads.ected d = -1Xed: s: s->close_fd)s: aptured_stream.XXXXXXlose_fd)threads...) in reads.("the number of threads._fd_ == -1++ exception with description "xecve(hich is: ct <hdir("led: -byte object < of threads.xception with description " red_stream.XXXXXXled: e( exception with description "string of ..) in ted ++ exception with description "not ... eption with description " se_fd)se_fd)object < of se(args->close_fd)s. of threads.= -1s->close_fd)threads.ad_fd_ == -1f threads.ailed: hdir("mber of threads.object <ch is: ject < exception with description "failed:  ..) in ++ exception with description "se(args->close_fd)rreads.ct </captured_stream.XXXXXX02Xe(lose_fd)rgs->close_fd) detect the number of threads.object <ir(" == -1er of threads.am.XXXXXX... ubstring of ads.ring of s.ch is:  failed: read_fd_ == -1d_stream.XXXXXXstring of  == -1("ct <.XXXXXXe number of threads. of threads.) in 
se_fd) led: d: f  XXXX/captured_stream.XXXXXXXXXXXxception with description "d ads.yte object <L"read_fd_ == -1ubstring of object <("threads.eption with description "++ exception with description "reads.t stream.XXXXXXfailed:  ...) in t t etected  is: tured_stream.XXXXXXads.iled: ream.XXXXXXreads.s: Xads.f threads.object <threads.f threads.("d)ream.XXXXXXe(ads.d_stream.XXXXXXmber of threads.s. is: f threads. of threads.ad_fd_ == -1mber of threads.t Xs.ring of ted ect the number of threads.(args->close_fd) detect the number of threads.tured_stream.XXXXXXt . d_ == -1ads.ject <cve(ubstring of ch is: d_stream.XXXXXXXaptured_stream.XXXXXX) in : ream.XXXXXXads.xecve(threads.tured_stream.XXXXXX.XXXXXXd ad_fd_ == -1_fd_ == -1t the number of threads. < etected ream.XXXXXXthe number of threads.ads.stream.XXXXXXreads.L"se_fd)(args->close_fd)aptured_stream.XXXXXXject <mber of threads.t object <stream.XXXXXXled: ("ring of  == -1reads.object <
(args->close_fd)X) failed: s->close_fd)d_stream.XXXXXXhdir("s.r>close_fd)d_stream.XXXXXX/captured_stream.XXXXXX(args->close_fd)/tmp/captured_stream.XXXXXX-1-1X++ exception with description "eption with description " exception with description "s->close_fd)object <d)ject <L"s: XXXXXe(ad_fd_ == -1led: ted  red_stream.XXXXXX-1ect the number of threads.("threads.lose_fd) == -1eption with description "XXXthe number of threads.ir("iled:  of the number of threads.se(args->close_fd)etect the number of threads.f threads...) in : ubstring of re number of threads.e number of threads.ring of e object <XXXXXfailed:  se(args->close_fd)ng of ..) in iled: ct <-1ir("= -1lose(args->close_fd)...  of threads.s...) in  == -1ed: rgs->close_fd)_fd_ == -1Xmber of threads.
s->close_fd)etected t /tmp/captured_stream.XXXXXXted stream.XXXXXXe number of threads.mber of threads.d)stream.XXXXXX) in ected read_fd_ == -1xception with description "s./captured_stream.XXXXXXhdir("red_stream.XXXXXXted  of lose(args->close_fd)reads. is: lose(args->close_fd)ubstring of hdir("ject <ring of  detect the number of threads.) failed: 02Xthe number of threads.se(args->close_fd)stream.XXXXXXstring of hich is: aptured_stream.XXXXXXct <e(d_stream.XXXXXXect the number of threads.xception with description "rads.xecve(ed: etected ad_fd_ == -1) in failed: ...  substring of >close_fd)) failed: am.XXXXXX:  XXXXXmp/captured_stream.XXXXXXct <lose(args->close_fd)ubstring of ct <etected  ...) in the number of threads.>close_fd)se(args->close_fd)/tmp/captured_stream.XXXXXXthreads. of d)lose(args->close_fd)= -1etect the number of threads.: d_stream.XXXXXXam.XXXXXXthe number of threads.led: failed:  is: in etected ads.e object <.XXXXXX..) in mp/captured_stream.XXXXXXe number of threads.red_stream.XXXXXX. ..) in ect the number of threads.d_stream.XXXXXX. iled: ) failed: e object <ad_fd_ == -1the number of threads.cve(.XXXXXXled: t the number of threads.d: yte object <) failed: stream.XXXXXXlose_fd)L"reads.etect the number of threads. ected aptured_stream.XXXXXXhich is:  substring of in _fd_ == -1etect the number of threads.reads. of threads.>close_fd)object <read_fd_ == -1xception with description "object <ailed:  is: s.number of threads.ads.eption with description "ed: hich is: cve(reads.se_fd)read_fd_ == -1s->close_fd)XXXXXread_fd_ == -1e(ng of mp/captured_stream.XXXXXXaptured_stream.XXXXXX <d: f threads.. d rgs->close_fd)s.ected ct <
mp/captured_stream.XXXXXXrir("the number of threads.failed: e object <t the number of threads.>close_fd)ted read_fd_ == -1/tmp/captured_stream.XXXXXX of  exception with description "se(args->close_fd)lose_fd)number of threads.ring of ... f threads.s: ... not etect the number of threads.lose_fd)ted ) failed: -1("rgs->close_fd)d_ == -1e number of threads.ected number of threads.the number of threads. ) failed: hich is:  er of threads.threads.am.XXXXXXxception with description "_fd_ == -1e(am.XXXXXXread_fd_ == -1s.not  is: eption with description "f threads.
 <r: ) failed: XXXXX_fd)red_stream.XXXXXX++ exception with description "..) in Xyte object <ted >close_fd) substring of am.XXXXXXmp/captured_stream.XXXXXXs. failed: xception with description "/captured_stream.XXXXXX detect the number of threads. detect the number of threads.mber of threads.eption with description "aptured_stream.XXXXXXled: xecve(_fd_ == -1_fd)d_stream.XXXXXXL"e(read_fd_ == -1ect the number of threads.hdir("ad_fd_ == -1aptured_stream.XXXXXXeption with description "se(args->close_fd)>close_fd)d_stream.XXXXXXnot  ect the number of threads. detect the number of threads.ed:  of threads.led: string of  == -1red_stream.XXXXXXect the number of threads.eption with description "t the number of threads.ected  of object <not object <not the number of threads. ...) in aptured_stream.XXXXXX of threads.aptured_stream.XXXXXXxception with description "cve(am.XXXXXXread_fd_ == -1eption with description "xecve(s->close_fd) < failed: er of threads.hdir(" ect the number of threads.. f threads.XXXXXs.
("lose_fd)ected ch is: . d_ == -1reads.XXXXXetect the number of threads.red_stream.XXXXXX-1object <eption with description "ads.rgs->close_fd) <XXXrXhich is: se(args->close_fd)ads.-byte object <the number of threads.-byte object <rd: hich is: am.XXXXXX exception with description "++ exception with description "e number of threads.ect the number of threads.e( substring of  == -1not xception with description "string of s->close_fd)... ) failed:  detect the number of threads.mber of threads.xecve(... ... string of  detect the number of threads._fd_ == -1reads.yte object <failed:  == -1string of  ...) in  == -1etect the number of threads. of threads.ads.: L".XXXXXXthreads.) in  aptured_stream.XXXXXXcve(number of threads.threads.etected threads./tmp/captured_stream.XXXXXXled: ailed: am.XXXXXX.XXXXXX /tmp/captured_stream.XXXXXXxecve( is: f iled: xception with description " mber of threads.ad_fd_ == -1 of threads.hich is: tured_stream.XXXXXX ...) in er of threads.++ exception with description "hdir("/tmp/captured_stream.XXXXXXyte object <mber of threads.xception with description ") in  failed: led: L"the number of threads.threads.X/tmp/captured_stream.XXXXXXstream.XXXXXX of f threads..XXXXXX02Xlose_fd)... d ring of ir("not d_ == -1lose_fd)(args->close_fd).XXXXXXe(ected  == -1red_stream.XXXXXXs. substring of f the number of threads.s.s.. ads.d) is:  <mp/captured_stream.XXXXXXct <ailed: ) failed: d_stream.XXXXXXlose(args->close_fd) failed: s: ir("d)number of threads.failed:  yte object <++ exception with description "-byte object <r
 etected XXXXX) failed: e(hich is: ng of ("eption with description " of t 
ch is: xception with description "ject <stream.XXXXXXhich is: (" eption with description ") failed:  failed: iled: mber of threads.string of se(args->close_fd) detect the number of threads._fd)ream.XXXXXXyte object <number of threads.mber of threads.t the number of threads./tmp/captured_stream.XXXXXX of threads. ++ exception with description "threads./tmp/captured_stream.XXXXXXs:  substring of ch is: 
the number of threads.t L"etected er of threads.reads.s._fd)XXXd_ == -1f ("string of    detect the number of threads.cve(ed: -1iled: ring of eption with description ".XXXXXX of threads.  == -1..) in rgs->close_fd) failed: ng of red_stream.XXXXXXe object <mp/captured_stream.XXXXXX: 
f aptured_stream.XXXXXXXXXthreads.... read_fd_ == -1: : lose_fd)ch is: rgs->close_fd)threads.hich is: ject < is: e number of threads.number of threads.>close_fd)t ad_fd_ == -1read_fd_ == -1XXX. f ++ exception with description "rs.-byte object <e(e object <aptured_stream.XXXXXXd)xecve(aptured_stream.XXXXXX) in the number of threads.ct < ...) in f ) in 02Xs: = -1XXXream.XXXXXX detect the number of threads.ch is: red_stream.XXXXXX eption with description "(args->close_fd)02XL"s:  exception with description ") failed: se(args->close_fd)/captured_stream.XXXXXXmber of threads.string of -1ubstring of aptured_stream.XXXXXX ("-1t the number of threads.er of threads./captured_stream.XXXXXXXXX... not e object <iled: hich is: failed:  of threads.yte object <: led: e number of threads.ir("etect the number of threads.er of threads.mp/captured_stream.XXXXXXrX_fd_ == -1  is: d: object <rgs->close_fd)reads.ring of ads.. failed: in /tmp/captured_stream.XXXXXXetected red_stream.XXXXXX("= -1se_fd)ect the number of threads.= -1-byte object < t ) failed: 
f threads.led: threads.ject <ect the number of threads. of threads.d)) in s.s.e(in . led: the number of threads.e number of threads./captured_stream.XXXXXXir("se_fd)f threads.the number of threads. ...) in ir("t s:  ...) in read_fd_ == -1s->close_fd)ubstring of xecve(reads.etect the number of threads.se_fd)r == -1xecve( failed: ailed: -byte object <d se_fd)read_fd_ == -1stream.XXXXXXs->close_fd) == -1>close_fd)xecve(ream.XXXXXXthreads.threads. rt the number of threads.hich is: reads.X(args->close_fd)iled: se(args->close_fd)ring of d_ == -1threads.led: red_stream.XXXXXX is: s.ubstring of  of ed: _fd)read_fd_ == -1>close_fd)xception with description "yte object </tmp/captured_stream.XXXXXXyte object <t se(args->close_fd)eption with description "e number of threads.ng of  substring of ads.s: iled: iled: er of threads. failed: ir("ring of led: :  red_stream.XXXXXXf threads.cve(ted mp/captured_stream.XXXXXXin X failed: reads.t the number of threads.tured_stream.XXXXXXer of threads.number of threads.e number of threads.in d_stream.XXXXXX-byte object </captured_stream.XXXXXX failed: s._fd_ == -1 of cve(s.hdir("L"f threads.lose(args->close_fd)hich is: se(args->close_fd)mp/captured_stream.XXXXXXaptured_stream.XXXXXXam.XXXXXX-byte object < <L"etect the number of threads.XXXected ng of reads.object <: /tmp/captured_stream.XXXXXX exception with description "ir("tured_stream.XXXXXXected threads.t /captured_stream.XXXXXXlose(args->close_fd)rgs->close_fd)Xject <se(args->close_fd)rd_stream.XXXXXXer of threads._fd)_fd_ == -1the number of threads.>close_fd)lose_fd) of threads.ads.cve(in s->close_fd)Xads. ...) in reads. failed: .XXXXXXads.lose(args->close_fd)ct <tured_stream.XXXXXXmp/captured_stream.XXXXXX  is: rgs->close_fd)) failed:  of ir("threads.er of threads. exception with description "e number of threads./tmp/captured_stream.XXXXXX. ed: er of threads.r exception with description "mp/captured_stream.XXXXXX ... s.cve(  of d)lose_fd)se_fd)xception with description "ream.XXXXXXxecve(in f threads.ad_fd_ == -1. etected iled: the number of threads.(args->close_fd)red_stream.XXXXXXected ir("ubstring of mber of threads.iled: stream.XXXXXXer of threads./tmp/captured_stream.XXXXXXxception with description "se(args->close_fd)_fd_ == -1..) in am.XXXXXX exception with description " of ailed: not red_stream.XXXXXX_fd_ == -1e object <ream.XXXXXX == -1 failed: Xf f threads.t ed:  of threads.-1object <f XXnot d ject <-byte object < <..) in string of -1ected /tmp/captured_stream.XXXXXX ...) in >close_fd)L"d:  is: hich is:  ...) in threads.ct <ailed:  (args->close_fd)the number of threads.e(f threads.mp/captured_stream.XXXXXXyte object <d_ == -1s.the number of threads.object <f threads.ir("etect the number of threads.f etect the number of threads./captured_stream.XXXXXX_fd)hich is: -byte object < detect the number of threads.lose_fd)ailed: se_fd)ect the number of threads.) in read_fd_ == -1 of read_fd_ == -1 e number of threads.
) failed: lose(args->close_fd)ailed: se_fd)XXXXXcve(ected -byte object <ted ed: object < exception with description "threads. == -1f s: string of : number of threads.aptured_stream.XXXXXXs. of red_stream.XXXXXXlose_fd)rgs->close_fd)tured_stream.XXXXXXed: ected -byte object <mp/captured_stream.XXXXXX>close_fd)threads.object </captured_stream.XXXXXXs->close_fd)ad_fd_ == -1string of /tmp/captured_stream.XXXXXX= -1r
-byte object <number of threads.reads.tured_stream.XXXXXXreads. == -1 of threads.f d_ == -1 d_stream.XXXXXXubstring of ected f reads. ads.object <cve(.XXXXXXed: L"e(... yte object <f threads. of threads.(args->close_fd)string of -1lose_fd)mber of threads.se_fd)se(args->close_fd)xecve(mp/captured_stream.XXXXXXch is: red_stream.XXXXXXhdir("etect the number of threads.) in  == -1s.er of threads.string of reads.ect the number of threads.cve( <hdir("reads.("e number of threads.e(the number of threads.ubstring of ng of e number of threads.ubstring of L"er of threads.se(args->close_fd)xception with description "reads.s.-byte object <++ exception with description "("..) in ject <XXXd_stream.XXXXXXxecve(d)s->close_fd)not red_stream.XXXXXX_fd_ == -1ubstring of rd = -1in  ...) in d_ == -1s. detect the number of threads.d ) in se_fd)threads.s: stream.XXXXXX  exception with description ".XXXXXX/captured_stream.XXXXXX rgs->close_fd)rgs->close_fd)cve(rs.number of threads.aptured_stream.XXXXXXxception with description "read_fd_ == -1ect the number of threads.ct <f threads.s.ailed:  == -1am.XXXXXXad_fd_ == -1t the number of threads.failed: e( substring of d)(" XXXring of .XXXXXXfailed: string of r <ir("ct <f  etect the number of threads.reads. ...) in XXXailed: ++ exception with description "rxecve(red_stream.XXXXXX.XXXXXXX-byte object <s.) in string of _fd_ == -1. reads.Xread_fd_ == -1ir(" is:  detect the number of threads.etect the number of threads.XXXXX of  substring of e( f threads.ubstring of = -1led: d_ == -1rgs->close_fd)re object <.  substring of failed: /tmp/captured_stream.XXXXXXd)ng of eption with description " substring of ch is: xception with description "-1tured_stream.XXXXXXcve(ailed: iled: red_stream.XXXXXXread_fd_ == -1cve(..) in ads. substring of ubstring of XXXlose_fd)++ exception with description "object < of threads.rin in .XXXXXXiled: red_stream.XXXXXXeption with description "d_ == -1 of hdir("  ...) in 02Xream.XXXXXXed: ailed: aptured_stream.XXXXXXyte object <led: ads.ted XXX) in string of t the number of threads.("/captured_stream.XXXXXXring of _fd_ == -1se(args->close_fd)failed:  ) in Xhich is: t the number of threads.er of threads..  of threads.d_ == -1red_stream.XXXXXXd ..) in  <eption with description "rgs->close_fd)s->close_fd)eption with description " substring of lose_fd)d e object <tured_stream.XXXXXXt = -1reads.
in ad_fd_ == -1 mp/captured_stream.XXXXXXads.er of threads.the number of threads.ected stream.XXXXXX_fd_ == -1rgs->close_fd)xecve(02X) failed: d_stream.XXXXXX) failed: -byte object <lose(args->close_fd)ream.XXXXXXted reads.eption with description "se(args->close_fd) <t the number of threads./captured_stream.XXXXXXstring of the number of threads.) in iled: ...  d 02Xt the number of threads. substring of yte object <>close_fd)/tmp/captured_stream.XXXXXXthe number of threads.xception with description ">close_fd)hdir("s->close_fd)hich is: failed: ++ exception with description " substring of  failed: = -1number of threads.reads.s.d_ == -1= -1t the number of threads.er of threads..XXXXXXubstring of ject <-byte object <: ected led: e number of threads.d: stream.XXXXXXads.string of d_ == -1red_stream.XXXXXX.XXXXXXs: ubstring of cve(
XXXXX(args->close_fd)ailed: t red_stream.XXXXXXng of L"(" == -1 failed: t failed:  substring of led: reads.ir("aptured_stream.XXXXXXfailed:  tured_stream.XXXXXXe(threads.hich is:  failed: ir("... -1ng of s.XXXreads.(args->close_fd)d_ == -1aptured_stream.XXXXXX ...) in reads.("object <aptured_stream.XXXXXXect the number of threads.lose_fd)>close_fd)d)= -1ubstring of d d)ring of threads.am.XXXXXXd)_fd_ == -1lose_fd)_fd_ == -1ubstring of mp/captured_stream.XXXXXXr_fd_ == -1ailed: s->close_fd)ected ch is: -byte object <02Xreads.ct <threads.("threads.ct <iled: _fd) of threads.number of threads.threads. detect the number of threads.ch is:  failed: ream.XXXXXX/tmp/captured_stream.XXXXXXs->close_fd)lose(args->close_fd)ect the number of threads.lose_fd) ...) in d yte object <failed: ected ted read_fd_ == -1am.XXXXXXs->close_fd)tured_stream.XXXXXX.XXXXXXct <: 
++ exception with description "stream.XXXXXX) failed: /tmp/captured_stream.XXXXXX <ng of .XXXXXXs->close_fd)02Xobject < of /captured_stream.XXXXXX/captured_stream.XXXXXXads._fd_ == -1e(iled: er of threads._fd_ == -1object <ream.XXXXXX.  substring of ads.reads.etect the number of threads.etect the number of threads. == -1) in xception with description " detect the number of threads.XXXXX </tmp/captured_stream.XXXXXXt mber of threads.d: failed: d_ == -1 exception with description "rgs->close_fd) is:  ir(" failed: -byte object < <ubstring of ... ject < is: ct <ailed: failed: ream.XXXXXX..) in read_fd_ == -1XXXXXam.XXXXXXread_fd_ == -1-byte object <ect the number of threads.rgs->close_fd)etected led: tured_stream.XXXXXXXXXlose_fd)tured_stream.XXXXXX of ("d)in  == -1string of  failed: t  is: hdir("_fd)se(args->close_fd)object <ads. failed:  f lose(args->close_fd) is: ("e(hich is: in cve(hich is:  ...) in e object <xecve(d)Xse_fd)++ exception with description "ubstring of ring of d_ == -1ream.XXXXXXir("the number of threads.in XXXXXxception with description "tured_stream.XXXXXX. .XXXXXXrreads.e object <threads.xecve(etect the number of threads.object <XXXXX failed: s->close_fd) failed: read_fd_ == -1(args->close_fd)in (args->close_fd)object <("ring of red_stream.XXXXXXs->close_fd)threads. detect the number of threads. == -1t d: ch is: t ream.XXXXXXXin the number of threads.) failed: _fd)t the number of threads.t ject <ailed:  detect the number of threads.
ads.ad_fd_ == -1 is: read_fd_ == -1er of threads.number of threads..XXXXXX..) in ring of er of threads. exception with description "ads.am.XXXXXX. not ("ect the number of threads. detect the number of threads.read_fd_ == -1 failed: /tmp/captured_stream.XXXXXXs: ir(" == -1e number of threads.ads. of  se(args->close_fd)r is: ad_fd_ == -1threads.) in reads.hdir("e(d d) s.read_fd_ == -1ted rgs->close_fd)red_stream.XXXXXX_fd_ == -1etected  hdir("d: ct <ads.e object <) in s.XXXXXch is: .XXXXXX..) in  of threads.mber of threads.
d: ad_fd_ == -1XXXXXiled: e number of threads.ailed: object <read_fd_ == -1red_stream.XXXXXX  of t ch is: red_stream.XXXXXX: lose(args->close_fd)) failed: /tmp/captured_stream.XXXXXXstring of ..) in hdir("d_stream.XXXXXXetect the number of threads.d: ... d_ == -1se_fd)lose(args->close_fd)rted ads.ng of >close_fd)read_fd_ == -102X/captured_stream.XXXXXXd: ted  of threads.ed:  substring of X/captured_stream.XXXXXXt the number of threads.02X substring of ct <am.XXXXXXad_fd_ == -1ads.number of threads.ed: (args->close_fd) detect the number of threads.object <mber of threads.reads.ch is: stream.XXXXXXthe number of threads.failed: the number of threads.in ailed: etect the number of threads.reads.rrmp/captured_stream.XXXXXXXXXXXhich is: ring of  <d_ == -1/captured_stream.XXXXXXd_stream.XXXXXXir("ream.XXXXXXf d_stream.XXXXXXmber of threads.aptured_stream.XXXXXXer of threads.ect the number of threads.s: 02Xreads.t s->close_fd) of threads.d)the number of threads.iled:  <led: _fd) is: : = -1ct <s.("_fd_ == -1s.ject <. ..) in in xception with description "-byte object <hich is:  exception with description "ect the number of threads.read_fd_ == -1_fd_ == -1 of ..) in t eption with description "02X++ exception with description "number of threads.threads.lose(args->close_fd)XXXXXxecve(d_ == -1 == -1ring of L"threads...) in ("not d_stream.XXXXXX/captured_stream.XXXXXXch is:  is: iled: (args->close_fd)e object <ng of mp/captured_stream.XXXXXXe object < ...) in red_stream.XXXXXX ..) in etected ected ng of f threads. <rgs->close_fd)mp/captured_stream.XXXXXX of threads.ad_fd_ == -1ream.XXXXXX02X e() in hdir("-byte object <aptured_stream.XXXXXXlose_fd) <r-byte object < is: er of threads.ad_fd_ == -1ed:  failed: tured_stream.XXXXXXads.ream.XXXXXX_fd_ == -1aptured_stream.XXXXXXer of threads.d the number of threads.ads.ch is: _fd_ == -1ected failed: XXXected d  of threads.mber of threads.ailed: ) failed: mp/captured_stream.XXXXXX/captured_stream.XXXXXX substring of _fd_ == -1yte object <d ng of ted  <se_fd)-1d: rcve(ream.XXXXXXXXXXXread_fd_ == -1 == -1 is: . X detect the number of threads. detect the number of threads.tured_stream.XXXXXX02X substring of ) in Xer of threads.-1yte object < >close_fd)threads.failed: d red_stream.XXXXXXd_stream.XXXXXXed: threads.lose(args->close_fd)ream.XXXXXXlose(args->close_fd).XXXXXXected _fd_ == -1number of threads./tmp/captured_stream.XXXXXXted iled: ng of  is: d_ == -1hdir("mp/captured_stream.XXXXXXlose_fd)/tmp/captured_stream.XXXXXXXXX/captured_stream.XXXXXXt retected cve(>close_fd) substring of = -1eption with description "reads.threads.++ exception with description "++ exception with description "rmp/captured_stream.XXXXXXct <xception with description "xecve(reads.e object <failed: threads._fd_ == -1d:  02Xe object <ad_fd_ == -1 of ad_fd_ == -1 == -1d) ...) in 
etect the number of threads.threads.hich is: f threads.number of threads.ected mber of threads.ad_fd_ == -1ng of ct <am.XXXXXXd ..) in hich is: lose_fd)d_ == -1red_stream.XXXXXXrxecve(er of threads._fd)s: _fd_ == -1 ...) in eption with description "in se(args->close_fd)ct <) failed: ch is:  == -1) in lose_fd)hich is: Xetect the number of threads.led: the number of threads.
mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXthreads.= -1... ) in ject <tured_stream.XXXXXXyte object < detect the number of threads. ...) in ad_fd_ == -1s.. er of threads._fd_ == -1mber of threads. of etect the number of threads.d: ring of xecve(..) in e object <... s.cve( <tured_stream.XXXXXXobject <ng of (args->close_fd)yte object <ad_fd_ == -1ads.s->close_fd) xecve(d) of iled: f iled: ring of object <(args->close_fd)not  substring of mp/captured_stream.XXXXXXe number of threads.) in  ct <eption with description " substring of  ...) in d)ected number of threads.iled: ad_fd_ == -1xecve(ubstring of  <_fd_ == -1(args->close_fd)mber of threads.threads.ng of lose(args->close_fd)ject < substring of  .XXXXXXaptured_stream.XXXXXXeption with description ") failed: d_stream.XXXXXXtured_stream.XXXXXXs: eption with description "ect the number of threads. XXXt the number of threads.) failed: the number of threads.ng of ..) in ir("etected f threads.number of threads. of r-1lose(args->close_fd)e number of threads.string of xception with description "number of threads.t the number of threads.s: ) in (") in eption with description "e object <xception with description "s.ct < etected  detect the number of threads.not ject <-1lose_fd)ch is: reads.led: threads.mp/captured_stream.XXXXXX02Xads.read_fd_ == -1 ct <se_fd) exception with description "reads.s.reads...) in hich is: e(cve(-1ring of mber of threads.hich is:  -byte object <>close_fd)e number of threads.mp/captured_stream.XXXXXXetected . ) failed: led: ("ected >close_fd)ch is: f threads.d: xecve(t the number of threads.ect the number of threads.d)) failed: d_stream.XXXXXX-1) in d: ubstring of ng of e object <_fd_ == -1not ted ject <se_fd)e number of threads...) in e object <er of threads.XXXX exception with description "t iled: ected etect the number of threads.mp/captured_stream.XXXXXXch is: ring of : /captured_stream.XXXXXX_fd_ == -1ir("e number of threads.cve(mber of threads.s.mber of threads._fd)/tmp/captured_stream.XXXXXX-1mber of threads.xecve(++ exception with description "f xecve(_fd)_fd)ed: ) failed: f .XXXXXX is: mp/captured_stream.XXXXXXhdir(". ct < failed: string of ted ir("ring of xecve(failed: lose_fd)ed: ad_fd_ == -1 substring of reads.the number of threads.d_stream.XXXXXXthreads.ir("-byte object <: XXXr) failed: lose_fd)/captured_stream.XXXXXX of /captured_stream.XXXXXXin . ads.hdir("etect the number of threads.mber of threads.rubstring of ed: : ring of etect the number of threads.rgs->close_fd)ailed: read_fd_ == -1threads.ad_fd_ == -1etected d_stream.XXXXXXread_fd_ == -1eption with description "stream.XXXXXXtured_stream.XXXXXXXXXng of not  ++ exception with description "lose_fd) ted cve(t the number of threads.XXXng of /tmp/captured_stream.XXXXXXd_ == -1failed: am.XXXXXX-byte object <ject <xception with description "XXXXXr02X of threads.hich is: = -1 substring of er of threads..XXXXXX(args->close_fd)failed: f threads.XXXXX-1read_fd_ == -1XXXhich is: ject <_fd)) in reads.s.= -102Xiled: f Xd: = -1L"/captured_stream.XXXXXX is: reads.XXXXX is: ir("failed: d .XXXXXXer of threads.ubstring of in ad_fd_ == -1.XXXXXXch is: etected ream.XXXXXX lose_fd)not  failed: L"threads.ads._fd_ == -1etected s->close_fd)ed: eption with description " ...) in not red_stream.XXXXXXng of ) in ject <hich is:  failed: t the number of threads.the number of threads.d)s.ir("threads.Xetected lose(args->close_fd)XXXXXeption with description "..) in  ...) in string of xception with description "f threads.f etected  is: ...  of threads.failed: threads.s: not lose_fd)ed: ... se(args->close_fd) eption with description "threads.ct <-1mber of threads.) in er of threads.etect the number of threads.led:  exception with description "etected lose_fd)ream.XXXXXXse_fd)stream.XXXXXXad_fd_ == -1ailed: object <failed: e number of threads.stream.XXXXXXads.d: . aptured_stream.XXXXXXnumber of threads.lose(args->close_fd)read_fd_ == -1e object <d)-byte object <mp/captured_stream.XXXXXXiled: t the number of threads.am.XXXXXXhdir("ct <object < detect the number of threads.02X exception with description " detect the number of threads.threads.lose(args->close_fd)-1cve( d ring of /tmp/captured_stream.XXXXXXreads.threads.not lose_fd)string of mp/captured_stream.XXXXXXs.f failed: d)/tmp/captured_stream.XXXXXXin ailed: mber of threads.ng of  ect the number of threads.ject <threads.am.XXXXXX-byte object <ubstring of ) failed: etect the number of threads.ads.e(retect the number of threads.object <t the number of threads.X. ect the number of threads.lose(args->close_fd)am.XXXXXXthreads.lose(args->close_fd)mber of threads.d_ == -1++ exception with description ".XXXXXXd)ubstring of led: se(args->close_fd)02X/tmp/captured_stream.XXXXXXect the number of threads.am.XXXXXXin in t  == -1 of ring of ubstring of  substring of  of etected ad_fd_ == -1ect the number of threads. threads.threads.ted object <.  detect the number of threads..XXXXXX detect the number of threads.L"tured_stream.XXXXXXf lose(args->close_fd)f d e object <e object <XXXse(args->close_fd) <ch is: not  number of threads.cve( of etected in -byte object <d_stream.XXXXXXse_fd)Xin se_fd)read_fd_ == -1lose(args->close_fd)s.aptured_stream.XXXXXXthreads.iled: rgs->close_fd)-1retected (args->close_fd)t .XXXXXXailed:  s: ...  X d_ == -1ads.s->close_fd) of lose(args->close_fd)ir("iled:  exception with description " failed: not ++ exception with description "d_stream.XXXXXX exception with description "xecve(r detect the number of threads.e number of threads..XXXXXXcve(ubstring of . hdir(": /tmp/captured_stream.XXXXXX..) in ted etected yte object <) failed: 02Xnumber of threads. of threads.d:  ...) in Xin object <ads./captured_stream.XXXXXXer of threads.L"ted read_fd_ == -1hich is: t the number of threads.hich is: mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXX(args->close_fd)>close_fd)>close_fd) of threads.("ct <: ted _fd_ == -1threads.mber of threads.Xads.tured_stream.XXXXXX-byte object <..) in XXXad_fd_ == -1_fd)ir(" XXXnot hdir("
_fd_ == -1se(args->close_fd)  <red_stream.XXXXXXd_ == -1xception with description "("f threads.ng of tured_stream.XXXXXX02X detect the number of threads.-1hdir("xecve(ir("ect the number of threads.L"t the number of threads. ...) in Xd:  <ected d_ == -1ailed: e object </captured_stream.XXXXXX/tmp/captured_stream.XXXXXXobject <ted etect the number of threads.ubstring of  failed: stream.XXXXXXring of not string of ubstring of -byte object <lose_fd)s: s.xception with description "e number of threads.++ exception with description "d_stream.XXXXXX of threads.iled:  ads. exception with description "rread_fd_ == -1d ch is:  of ..) in d_stream.XXXXXXd d_stream.XXXXXX>close_fd)e number of threads.ed: = -1t xception with description "d:  of ring of etect the number of threads.etected red_stream.XXXXXX(args->close_fd)in  detect the number of threads. < detect the number of threads.(args->close_fd)ng of string of  d: red_stream.XXXXXXetect the number of threads.
reads.ads.ad_fd_ == -1etected XXX/tmp/captured_stream.XXXXXXXXXected  of read_fd_ == -1ream.XXXXXXrgs->close_fd)number of threads..XXXXXX) in s->close_fd)lose_fd).XXXXXXreads.ected ected ("etect the number of threads.ring of = -1f threads.++ exception with description "ed: etected lose_fd)s->close_fd)ct <ads.Xobject <: ect the number of threads.er of threads.s.++ exception with description "am.XXXXXXthreads.s->close_fd)iled: stream.XXXXXXad_fd_ == -1 of red_stream.XXXXXX= -1 exception with description ") failed: hdir("/tmp/captured_stream.XXXXXX of threads.>close_fd)d ring of ..) in >close_fd)d_stream.XXXXXXthreads.etected d: threads.... read_fd_ == -1ct <not yte object <threads.ect the number of threads. <etect the number of threads.etect the number of threads. exception with description "reads.failed: ir("se(args->close_fd)aptured_stream.XXXXXXXXXXXf threads.xecve(XXXXXled: iled: ) failed:  exception with description "e(ads. failed: ch is: -byte object <xception with description "f XXXXXted ng of d_stream.XXXXXXe( exception with description "tured_stream.XXXXXXtured_stream.XXXXXX/captured_stream.XXXXXXd)rgs->close_fd)ject <(args->close_fd) ected  .XXXXXXed:   of threads.XXXXXiled: .   ...) in -byte object <= -1Xetect the number of threads.not hich is: rXXXXX... ct <s.ch is: red_stream.XXXXXXd: ++ exception with description "ailed: ad_fd_ == -1. s.= -1d_stream.XXXXXXstring of XXXXXng of ad_fd_ == -1  /captured_stream.XXXXXXs: ads.etect the number of threads.reads._fd_ == -1string of string of . f threads.
object < detect the number of threads.f d_stream.XXXXXXtured_stream.XXXXXXread_fd_ == -1hdir(" ...) in ..) in -byte object < not yte object <.XXXXXXX) failed: se_fd)object <aptured_stream.XXXXXX= -1er of threads.reads.s->close_fd)threads.... not se(args->close_fd)red_stream.XXXXXXs.f threads.ir("..) in .XXXXXXected ed: .XXXXXX>close_fd)XXX>close_fd)led: etect the number of threads.ected ject <se_fd)rgs->close_fd)... iled: ring of L"s->close_fd)s: ) failed: d) is: rgs->close_fd)s. exception with description "_fd)string of threads. ...) in X-byte object < <the number of threads.ected cve(threads.02Xe number of threads....  detect the number of threads. . e(ads.reads.. s.) failed: ect the number of threads.aptured_stream.XXXXXX <Xnot aptured_stream.XXXXXX: = -1) failed:  of lose_fd)ailed: . aptured_stream.XXXXXXd_stream.XXXXXX of xecve(ed: se_fd)e object < ...) in ject <s.aptured_stream.XXXXXXf d: ed: in rgs->close_fd)++ exception with description "f threads._fd_ == -1t the number of threads.. ject <Xring of se_fd)ect the number of threads.etected  d_stream.XXXXXX failed: number of threads.s->close_fd)ubstring of ad_fd_ == -1s.(args->close_fd)not se_fd)ected XXXXX>close_fd)/captured_stream.XXXXXXd: led: eption with description "L" of ) failed: 
("/captured_stream.XXXXXXt the number of threads. substring of rgs->close_fd)..) in tured_stream.XXXXXXs->close_fd)ir("= -1(" number of threads.... d)= -1XXXthreads.-byte object <d_ == -1 ...) in ads.s. failed: ailed: hdir(": d)e number of threads.-1cve( <Xd: ject < ...) in d: ream.XXXXXXream.XXXXXXhich is:  failed: ected read_fd_ == -1cve(am.XXXXXXse(args->close_fd)_fd)s.mp/captured_stream.XXXXXXected _fd): ++ exception with description "/tmp/captured_stream.XXXXXXiled: ailed: ir("e(d ct <Xd)XXX e(>close_fd)
s.hich is: f threads.. the number of threads.in = -1er of threads.reads.ring of tured_stream.XXXXXX..) in rgs->close_fd)>close_fd) .  ...) in ubstring of ads.string of  substring of X: f threads.yte object <d etect the number of threads.string of  ject <hich is: ch is: read_fd_ == -1hich is: ailed: etected lose(args->close_fd)e number of threads.xception with description "X) in /captured_stream.XXXXXX of hdir("ir("= -1ected s.s.-1e(/tmp/captured_stream.XXXXXXse(args->close_fd). d_ == -1/tmp/captured_stream.XXXXXXtured_stream.XXXXXXect the number of threads.ailed: hdir("ted = -1e object <Xed: led: ("d: e(s.in  is: ad_fd_ == -1r == -1not -1ected s: string of XXXhdir(">close_fd) ...) in 
xecve(read_fd_ == -1string of  er of threads.) in  is: etected Xin  substring of ch is:  of threads.ads.am.XXXXXXs. of  of ailed: ted threads.in cve(f threads.ads.d_stream.XXXXXX ected e number of threads.-1..) in iled: failed: iled: red_stream.XXXXXX>close_fd)ect the number of threads.the number of threads.eption with description " of threads.ad_fd_ == -1s. ...) in /captured_stream.XXXXXXd: etected ) failed: aptured_stream.XXXXXXs: ads._fd_ == -1... f  failed:  exception with description "threads.(args->close_fd)etect the number of threads.d_stream.XXXXXXetected ) in d_ == -1: d = -1ads.s.ad_fd_ == -1reads.... stream.XXXXXX_fd_ == -1ailed: Xream.XXXXXXch is:  failed:  hdir("... ng of  of lose_fd)e(mber of threads.reads. is: ) failed: eption with description "ct <>close_fd)XXX  is: threads.s->close_fd)string of ject <. xception with description "cve(failed: mber of threads.
XXXread_fd_ == -1e number of threads.ad_fd_ == -1reads._fd_ == -1number of threads.: Xiled: = -102X(args->close_fd)s.s.aptured_stream.XXXXXXmber of threads.>close_fd)ct <number of threads.ted read_fd_ == -1_fd)-byte object <object <d_ == -1.XXXXXXrgs->close_fd)L"etect the number of threads.) in object </tmp/captured_stream.XXXXXXt  substring of 
t the number of threads.e(mber of threads.t f threads.++ exception with description "xecve(>close_fd) substring of 
e( of  detect the number of threads.ed: hich is: ads.t >close_fd) detect the number of threads. of threads.string of d: led: Xf aptured_stream.XXXXXXreads.f threads.-byte object <XXXXXyte object <iled: : etect the number of threads.ject <s.etected ubstring of etected etect the number of threads.lose(args->close_fd)se_fd)ream.XXXXXXL"ct <_fd)d_ == -1-byte object <threads.ect the number of threads.-byte object <in t threads.xception with description "d: threads.e object <aptured_stream.XXXXXXir("/tmp/captured_stream.XXXXXXs: /tmp/captured_stream.XXXXXX substring of . reads.d: etected ch is:  is: e object <_fd_ == -1led:  etect the number of threads.d eption with description "object <. ected d)hich is: . _fd) ...) in ted mber of threads.number of threads.reads. <..) in s.
XXXXXf threads.ected -byte object <eption with description "e number of threads.reads.s.e object <f  failed: /captured_stream.XXXXXXXXXXXrgs->close_fd)) failed: mber of threads.ct <(args->close_fd)ream.XXXXXXnumber of threads.ted ch is: -1tured_stream.XXXXXX.  (args->close_fd)se_fd)etect the number of threads.  se(args->close_fd)ted f ch is: hich is: etect the number of threads.d d: number of threads.etected mber of threads.tured_stream.XXXXXX
t the number of threads./tmp/captured_stream.XXXXXXXXXXXs.-1t string of reads.etected : XXXlose(args->close_fd)/tmp/captured_stream.XXXXXXct <etected X("L"r... s: yte object <d_stream.XXXXXX/tmp/captured_stream.XXXXXXXXXin  detect the number of threads.iled: s->close_fd)am.XXXXXX: ... mber of threads.se_fd)d_stream.XXXXXX s->close_fd)threads.ailed: -1reads.mp/captured_stream.XXXXXX..) in ted Xin  failed: number of threads.threads.failed: object <not s: ubstring of rgs->close_fd).XXXXXXaptured_stream.XXXXXXad_fd_ == -1d)xception with description "ect the number of threads.red_stream.XXXXXXt the number of threads.ads._fd_ == -1s->close_fd)) failed: mber of threads.led: ed: .XXXXXX of se_fd). X
 failed:  exception with description "threads.ct <ubstring of . : ) failed: xception with description "ir("rfailed: aptured_stream.XXXXXXhich is: ads.ir("object < ...) in  of  exception with description "/captured_stream.XXXXXXobject <d /tmp/captured_stream.XXXXXXred_stream.XXXXXX..) in ... ream.XXXXXX("rgs->close_fd)string of string of s.er of threads.Xled: reads.read_fd_ == -1>close_fd) of threads._fd_ == -1reads. exception with description "ng of aptured_stream.XXXXXXeption with description "e number of threads.= -1r exception with description "iled: ect the number of threads.t L"/tmp/captured_stream.XXXXXX..) in threads.ream.XXXXXX-byte object <
 == -1d: L"mp/captured_stream.XXXXXXject <f threads..XXXXXXled: xecve(XXXXX) in iled: d_stream.XXXXXXeption with description "ads.hich is: threads.eption with description "d e number of threads.se_fd)Xe number of threads.e number of threads...) in ir("number of threads. -1(args->close_fd)>close_fd)L" exception with description "tured_stream.XXXXXXthreads. of red_stream.XXXXXXads.ailed:  == -1hich is: ("XXXaptured_stream.XXXXXXin _fd_ == -1hich is: s: led: f ... reads..XXXXXXd)red_stream.XXXXXXtured_stream.XXXXXXubstring of read_fd_ == -1failed: ubstring of _fd_ == -1f threads.XXX-1
read_fd_ == -1(args->close_fd)e object <t  detect the number of threads.:  == -1xception with description " of threads.t ads.f threads.. number of threads. == -1cve(s.lose(args->close_fd) of threads.L"-byte object <am.XXXXXXads. ) failed: -byte object <ch is:  etect the number of threads. read_fd_ == -1 ng of ubstring of ) failed: er of threads.("e number of threads.stream.XXXXXXed: . 02Xcve(X02Xred_stream.XXXXXXthreads._fd_ == -1ed: = -1ch is:  ect the number of threads...) in  exception with description "lose(args->close_fd)ng of .XXXXXX= -1reads.d_ == -1failed: number of threads.failed: read_fd_ == -1++ exception with description "read_fd_ == -1e object <ads.ed: eption with description "XXXlose(args->close_fd)led:  of threads.reads.eption with description "read_fd_ == -1L"rgs->close_fd)ected  of read_fd_ == -1cve(X...  detect the number of threads.(args->close_fd)hdir("hich is: red_stream.XXXXXXream.XXXXXXL"/tmp/captured_stream.XXXXXXring of mber of threads.am.XXXXXX.  stream.XXXXXX(args->close_fd)number of threads.ir("failed: 02XL"ailed: (args->close_fd): stream.XXXXXXXse(args->close_fd) ...) in : ..) in   s.stream.XXXXXXs.not mber of threads.d: ect the number of threads.XXXreads.... 02Xnumber of threads.xecve(iled: xecve(_fd_ == -1ect the number of threads.02X == -1cve(L") failed: mp/captured_stream.XXXXXXreads.hdir("ad_fd_ == -1d:  f threads.-1 ...) in >close_fd)ubstring of d_stream.XXXXXXer of threads.number of threads.ch is: (args->close_fd)am.XXXXXXe object <ng of string of not read_fd_ == -1lose_fd)in (" of threads.d_stream.XXXXXXe object <ads.d)ads.string of xception with description "object <e( failed: d: ("ch is: object <mp/captured_stream.XXXXXX(args->close_fd)the number of threads.ad_fd_ == -1(": 
t  ...) in ad_fd_ == -1ted _fd)... eption with description "ailed: d: rhdir(" read_fd_ == -1ted cve(ir(" <..) in s.xecve(ir("/tmp/captured_stream.XXXXXXcve(string of aptured_stream.XXXXXXetect the number of threads.++ exception with description "d)("d_stream.XXXXXX= -1hdir("e number of threads.ch is: = -1reads.ng of ailed: iled: f : reads.object <ubstring of rir("_fd)xecve(am.XXXXXXailed: reads.Xcve(_fd)threads.s.etected ch is: string of  <_fd_ == -1ted f t lose_fd)
 is: ir("_fd_ == -1. read_fd_ == -1led: threads. in ject <red_stream.XXXXXXe number of threads. is: s->close_fd)threads. substring of ..) in : object <tured_stream.XXXXXX/tmp/captured_stream.XXXXXX_fd_ == -1ject <led: XXX failed: se(args->close_fd)_fd_ == -1 d) substring of number of threads. detect the number of threads.ted  mber of threads. <d_ == -1-byte object < ...) in etected string of in .XXXXXX of d_stream.XXXXXXtured_stream.XXXXXX-1_fd_ == -1d: reads.: r... . ..) in ng of am.XXXXXX of threads.Xrgs->close_fd)t the number of threads.r(args->close_fd)ject < substring of failed: ++ exception with description "(args->close_fd)d read_fd_ == -1er of threads.: the number of threads._fd)cve(not /captured_stream.XXXXXXeption with description "ch is: .XXXXXXe(rgs->close_fd)ads.XXXXXs.d_stream.XXXXXX XXXmp/captured_stream.XXXXXXXXXobject <e number of threads. <threads.XXXXX= -1_fd)ected L"L"lose(args->close_fd). object <= -1read_fd_ == -1d_ == -1L"s.++ exception with description "er of threads.ring of tured_stream.XXXXXXXubstring of  ...) in d)lose_fd)am.XXXXXX(args->close_fd)xception with description "iled: se(args->close_fd) failed: r/captured_stream.XXXXXXailed:  is: ++ exception with description "/tmp/captured_stream.XXXXXX: ed:  exception with description " failed:  substring of d d: . e object <etected _fd)threads.... ads.d reads.eption with description ": XXir("yte object <) failed: etected  substring of object <-1/tmp/captured_stream.XXXXXX..) in  == -1t ad_fd_ == -1 of ) in  f am.XXXXXXfailed: threads._fd_ == -1lose_fd)t d)led:  of ads.not ) failed: eption with description "_fd_ == -1= -1d_ == -1mp/captured_stream.XXXXXX-1s: tured_stream.XXXXXXir("etected d: object <..) in e object <ads. X/tmp/captured_stream.XXXXXX>close_fd)(args->close_fd)X <lose_fd).XXXXXXt ailed: threads.etected ++ exception with description " of threads. ...) in cve(-1ubstring of .  hich is: e( detect the number of threads.tured_stream.XXXXXXXeption with description "
read_fd_ == -1xception with description "object <mber of threads.threads.threads.xception with description "ct <not threads.led: reads. detect the number of threads.-1not  detect the number of threads.se(args->close_fd)d)failed: am.XXXXXX-byte object <hdir("red_stream.XXXXXX-1..) in ) in -byte object <hdir("XXXXX/tmp/captured_stream.XXXXXXred_stream.XXXXXXXthe number of threads.ted ..) in d)not . se_fd)ir("threads.rgs->close_fd)) in  exception with description "string of ++ exception with description "rgs->close_fd)hich is:  ("ected (".  of >close_fd)ect the number of threads.s.lose(args->close_fd)ed: xecve(read_fd_ == -1eption with description "red_stream.XXXXXXect the number of threads.led: ++ exception with description "ng of e object <= -1 is: ed: _fd_ == -1object <d_ == -1ject <threads.d)..) in f lose(args->close_fd)f cve(string of -1ng of am.XXXXXXstream.XXXXXXlose_fd)lose(args->close_fd)ected tured_stream.XXXXXXect the number of threads./tmp/captured_stream.XXXXXXed: ads.
ream.XXXXXX("ads.etected t lose(args->close_fd)XXX02Xr02X02Xted  of threads.ect the number of threads.reads.ected read_fd_ == -1XXXreads.am.XXXXXX++ exception with description "= -1(args->close_fd)++ exception with description "re object <xception with description "se(args->close_fd)ed: d_stream.XXXXXX ...) in e(ads. of threads./tmp/captured_stream.XXXXXX er of threads.etect the number of threads.threads. <ed: ch is: 
 threads.s->close_fd)Xf threads. of threads.lose_fd)(args->close_fd) detect the number of threads.(args->close_fd)mber of threads.xecve(d in string of (args->close_fd)ailed: d_ == -1am.XXXXXXad_fd_ == -1 of ... XXXXXt ++ exception with description "-1rXrgs->close_fd)t the number of threads.t d_stream.XXXXXXred_stream.XXXXXXe object < is: read_fd_ == -1s->close_fd)reads.mber of threads.tured_stream.XXXXXX of threads.XXXject <red_stream.XXXXXX/captured_stream.XXXXXX.XXXXXXrgs->close_fd)ailed: etected tured_stream.XXXXXXread_fd_ == -1threads.ream.XXXXXX == -1number of threads. < detect the number of threads.the number of threads.-1xception with description " is: eption with description "string of 02Xhich is:  ream.XXXXXX is: r.XXXXXXmber of threads.L"reads.mber of threads.eption with description "d: failed: number of threads.led: s->close_fd)threads.) failed:  is: ring of stream.XXXXXX++ exception with description "lose(args->close_fd)L"not ected mp/captured_stream.XXXXXXin ..) in ted f threads.number of threads.= -1f threads. failed: er of threads.se(args->close_fd)hich is: in  <(">close_fd)ad_fd_ == -1-1string of ected am.XXXXXXobject <.XXXXXX is: reads.s: _fd_ == -1 of threads.object <iled: ed: ch is: threads.failed: reads. substring of ect the number of threads. t /captured_stream.XXXXXXeption with description "s.-1 <Xs: etected failed: threads.etect the number of threads.hich is: ted object <eption with description "t etect the number of threads.Xt e number of threads.threads.ected  <se_fd) ) in yte object < exception with description "cve(f not number of threads.xecve(ted f  d d ads.etected mber of threads.not etect the number of threads.XXXXX of threads.e number of threads.number of threads.ads.not 
ubstring of e number of threads.string of ng of d ("hdir("se(args->close_fd) r Xlose(args->close_fd)Xd ch is: ir("rgs->close_fd)led: Xmber of threads.r++ exception with description ") in se_fd)se_fd)not raptured_stream.XXXXXX <am.XXXXXXtured_stream.XXXXXXt the number of threads.xception with description "ect the number of threads.-byte object <d_ == -1ir(" detect the number of threads.red_stream.XXXXXXng of ir("eption with description "... ch is: _fd_ == -1mber of threads.read_fd_ == -1mp/captured_stream.XXXXXXads.= -1ailed:  detect the number of threads.lose(args->close_fd) ring of ++ exception with description "e object < <) in .XXXXXXam.XXXXXXeption with description "ject <number of threads...) in 
d_ == -1reads.f threads.xecve(-1er of threads. failed: XXXrad_fd_ == -1= -1tured_stream.XXXXXX..) in etected ir("_fd)= -1L"ject < mber of threads.f reads.stream.XXXXXXeption with description "ect the number of threads.02X ct <ring of lose(args->close_fd)..) in e object <hdir("er of threads.-1ng of = -1L"mp/captured_stream.XXXXXXs.s: .XXXXXX... lose_fd)ct <string of lose_fd) == -102X < <++ exception with description ">close_fd)am.XXXXXX_fd) of xception with description " ... hdir("/captured_stream.XXXXXXcve(e number of threads.stream.XXXXXX failed: ir("XXXXXch is: f number of threads.aptured_stream.XXXXXXled: ..) in ch is: ..) in iled:  exception with description "/captured_stream.XXXXXX substring of rir("reads.er of threads.ct <stream.XXXXXX mp/captured_stream.XXXXXXfailed: led: mber of threads.number of threads.reads.ir("ring of  (args->close_fd)se(args->close_fd)object <d_stream.XXXXXXs->close_fd)ailed: /tmp/captured_stream.XXXXXXf f e object <L"d: etect the number of threads.reads._fd_ == -1reads.cve(f threads.s.f threads.led: ted e number of threads.(args->close_fd)er of threads. mp/captured_stream.XXXXXX++ exception with description "L"f threads.ected number of threads.d_stream.XXXXXX-1d)("hich is: e(XXs->close_fd)tured_stream.XXXXXX) in rgs->close_fd)= -1s: object <-1 exception with description "s: number of threads.s.s.xecve(mp/captured_stream.XXXXXXthe number of threads.ject <_fd_ == -1>close_fd)reads.threads.: eption with description " <... read_fd_ == -1/captured_stream.XXXXXXam.XXXXXXXhdir("d: s->close_fd)se_fd) of d_stream.XXXXXXe number of threads.led: d_ == -1ject < == -1d)f threads.object <cve(/tmp/captured_stream.XXXXXXxecve(xecve(s->close_fd)tured_stream.XXXXXXthreads.ads.eption with description "rgs->close_fd)ad_fd_ == -1.XXXXXXstream.XXXXXX..) in the number of threads.not /tmp/captured_stream.XXXXXXeption with description "-1d e object <ubstring of lose(args->close_fd)-1d)xecve(: stream.XXXXXXlose_fd)f L"ad_fd_ == -1e( == -1s->close_fd)stream.XXXXXXetect the number of threads._fd_ == -1f ring of object <t the number of threads.mber of threads.f threads.X: am.XXXXXX failed: L"rads./captured_stream.XXXXXXXng of  substring of (args->close_fd)se(args->close_fd) lose(args->close_fd)s. ...) in red_stream.XXXXXXXXXs->close_fd)d)ted object <t number of threads.: ailed: threads.>close_fd)ject <am.XXXXXXthreads.>close_fd)..) in hdir("-1rgs->close_fd)threads.t the number of threads.er of threads. == -1) in red_stream.XXXXXXe( XXXXX Xd reads.ubstring of ect the number of threads.not failed:  ...) in s: = -1f xception with description "L"hich is:  eption with description "threads.s.hich is: /captured_stream.XXXXXXse(args->close_fd) == -1ubstring of : mp/captured_stream.XXXXXX..) in 
d_stream.XXXXXX++ exception with description "  == -1tured_stream.XXXXXX e(. aptured_stream.XXXXXXubstring of >close_fd)ng of 
-1ed: hich is: s.se(args->close_fd)f threads. == -1etected ect the number of threads.ted f threads.++ exception with description "eption with description "er of threads.ream.XXXXXXam.XXXXXXream.XXXXXXse(args->close_fd)(args->close_fd)e object <_fd_ == -1the number of threads.lose(args->close_fd)xception with description "er of threads.-1 <ad_fd_ == -1-1cve( of ads.iled: yte object <xecve(number of threads.string of s: ailed: cve(= -1-1led: e(/captured_stream.XXXXXXam.XXXXXXeption with description "number of threads. == -1mber of threads. detect the number of threads.ads.hdir("/tmp/captured_stream.XXXXXXL"mp/captured_stream.XXXXXX: the number of threads.etect the number of threads.ed: t s.threads.t the number of threads.mp/captured_stream.XXXXXXlose(args->close_fd)ad_fd_ == -1d)er of threads.f threads.s: t the number of threads.f threads.threads.lose_fd)/tmp/captured_stream.XXXXXXcve(etect the number of threads.er of threads.ct <mp/captured_stream.XXXXXXled: ch is: lose(args->close_fd)/tmp/captured_stream.XXXXXXX substring of lose_fd)ect the number of threads.e number of threads.s.threads.t Xetected yte object <ream.XXXXXXthreads.) failed: not mp/captured_stream.XXXXXX failed: _fd).XXXXXXd_stream.XXXXXX.XXXXXXiled:   of f threads..XXXXXXxecve( substring of  == -1s.etect the number of threads.eption with description "the number of threads.cve(se(args->close_fd)++ exception with description "XXX.XXXXXXe(++ exception with description "aptured_stream.XXXXXX/tmp/captured_stream.XXXXXX: yte object <-1>close_fd)ads.d ted .XXXXXX.XXXXXXreads.ng of d -byte object <t ) in mber of threads.-byte object <number of threads...) in ailed: ubstring of d)string of aptured_stream.XXXXXXXe number of threads.d_stream.XXXXXX L"ect the number of threads. <... cve(e number of threads. ir("am.XXXXXXthreads.hdir("_fd)d: f threads.ailed: mp/captured_stream.XXXXXXXXXXXmp/captured_stream.XXXXXXmber of threads.hich is: f threads.d: ads.-byte object <mp/captured_stream.XXXXXX..) in lose(args->close_fd)reads.) failed: ) failed: -byte object <reads.stream.XXXXXXread_fd_ == -1e number of threads. failed: etect the number of threads.the number of threads.am.XXXXXX++ exception with description " <e object < detect the number of threads.xecve(lose_fd)mp/captured_stream.XXXXXX02Xstream.XXXXXXct < == -1iled: am.XXXXXXhich is:  ...) in (args->close_fd)d: red_stream.XXXXXXaptured_stream.XXXXXXd_ == -1e object <... _fd_ == -1d_ == -1lose_fd) failed: ads./tmp/captured_stream.XXXXXXthe number of threads. . d)string of Xe object <s.reads. ...) in  failed: ted tured_stream.XXXXXXhdir("
led: s.tured_stream.XXXXXX of ) failed:  exception with description "(args->close_fd) hdir("ted iled:  == -1reads.t the number of threads.aptured_stream.XXXXXX 02Xring of ailed: ted number of threads.. ng of ads.ir(" detect the number of threads.se_fd)/captured_stream.XXXXXXs.ect the number of threads.mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXhdir("lose(args->close_fd)ream.XXXXXXin f _fd)Xd_ == -1 is: 02Xcve(Xs.++ exception with description "ads. is:  d: hdir("se(args->close_fd)XXXd_ == -1reads.etected f threads.xception with description "er of threads.number of threads...) in  == -1s.r/tmp/captured_stream.XXXXXXled: hich is: ected ..) in f threads.ch is: ) failed: -byte object < 02X-1d_stream.XXXXXX is: ir("ubstring of ) failed: etected in led: ad_fd_ == -1lose(args->close_fd)("f threads. failed: . xception with description "reads.threads.:  ...) in reads.t ailed: aptured_stream.XXXXXX++ exception with description "stream.XXXXXXt the number of threads. of lose_fd)s->close_fd)XXX failed: e(t e object <d)
the number of threads.iled: ng of string of ng of ad_fd_ == -1..) in s.ad_fd_ == -1etect the number of threads.d_ == -1mp/captured_stream.XXXXXXt ++ exception with description "lose(args->close_fd)rgs->close_fd)d: /tmp/captured_stream.XXXXXXs->close_fd)= -1. : d_ == -1xception with description "lose(args->close_fd)s.ailed: not etected ad_fd_ == -1ected ) failed: d /tmp/captured_stream.XXXXXXe(t the number of threads.ng of d_ == -1ad_fd_ == -1failed: 02X: in led:  d: ad_fd_ == -1_fd)se(args->close_fd)s.failed: ubstring of XXXXXailed: read_fd_ == -1cve(L" of e number of threads.. /captured_stream.XXXXXXir("ted ) failed: = -1_fd_ == -1Xads.e object <: led: e number of threads.-byte object <ject <02X ...) in er of threads.failed: not ad_fd_ == -1ted /captured_stream.XXXXXXXread_fd_ == -1) failed: ("XXXam.XXXXXX++ exception with description "hdir("se(args->close_fd)/captured_stream.XXXXXXhdir(" exception with description "ads.etect the number of threads.ailed: am.XXXXXXetect the number of threads.>close_fd)Xd)etected e number of threads.ch is: ir("e(lose_fd)yte object <d)02Xxception with description "number of threads.(args->close_fd)ads...) in s. <rir("s. detect the number of threads.tured_stream.XXXXXXted  object <) failed: in /tmp/captured_stream.XXXXXX
XXXyte object <02Xobject <mber of threads.f threads.d: rgs->close_fd)ed: lose(args->close_fd)failed: cve(ad_fd_ == -1lose(args->close_fd) ...) in  ...) in se_fd)led: ject <= -1mber of threads.Xads.) in se_fd)) failed: d  <string of >close_fd)tured_stream.XXXXXXobject <ted  is: rgs->close_fd)rgs->close_fd)object <rads.ring of xecve(d)tured_stream.XXXXXX cve(threads.t the number of threads.xecve(tured_stream.XXXXXXs: s->close_fd)ed:  is: red_stream.XXXXXXread_fd_ == -1read_fd_ == -1etected tured_stream.XXXXXXads.xecve(number of threads.s.object <) failed: threads.s: ring of ++ exception with description "s: in ject <er of threads.d: etected _fd_ == -1e number of threads.d_ == -1threads.se_fd)d_stream.XXXXXXect the number of threads.ch is: Xread_fd_ == -1.XXXXXX) failed: not ject <mber of threads.d: eption with description "tured_stream.XXXXXXam.XXXXXXiled: ir("ct <-byte object <not d: d_stream.XXXXXX stream.XXXXXX.XXXXXXretected xecve(lose(args->close_fd)read_fd_ == -1ads.mp/captured_stream.XXXXXX>close_fd)s.X_fd_ == -1ubstring of failed: se_fd).XXXXXXthreads.ring of eption with description "cve( se_fd)xecve(aptured_stream.XXXXXXthreads.ads.object <s->close_fd)ed: the number of threads.am.XXXXXX++ exception with description "threads.mp/captured_stream.XXXXXXe number of threads.rgs->close_fd)_fd_ == -1xecve(the number of threads.ct <s: ..) in 02Xhich is: ected read_fd_ == -1am.XXXXXX: ed: (args->close_fd)reads.02Xse(args->close_fd)d_stream.XXXXXX failed: s.L"ted read_fd_ == -1t the number of threads.hich is: not se(args->close_fd)ad_fd_ == -1rL"lose(args->close_fd)etect the number of threads.ng of hdir("XXXs.t the number of threads.  substring of d_stream.XXXXXX exception with description "ng of aptured_stream.XXXXXXailed: d: XXX("-byte object <se_fd)f threads. se(args->close_fd)02X(args->close_fd)02XX>close_fd)d: .XXXXXX substring of d_stream.XXXXXXd)number of threads.-byte object <ch is: _fd)e object <aptured_stream.XXXXXXe(d s.XXXXX: tured_stream.XXXXXX..) in ads.XXXeption with description "e number of threads...) in hich is: e object <etect the number of threads.XXXrads.se_fd)iled:  is: hich is: f iled: ) in f threads.stream.XXXXXX/tmp/captured_stream.XXXXXX.XXXXXX/tmp/captured_stream.XXXXXXyte object <d_ == -1s. of threads.ect the number of threads.ad_fd_ == -1f ream.XXXXXXct <the number of threads.>close_fd)= -1:  ...) in t  is: ch is:  == -1eption with description " == -1d_ == -1ads.hich is: red_stream.XXXXXXled: _fd)led: ream.XXXXXX/captured_stream.XXXXXXreads.rgs->close_fd)ed:  substring of s. 

 == -1/captured_stream.XXXXXXs->close_fd)Xam.XXXXXXnot stream.XXXXXX_fd)led: ject <red_stream.XXXXXXin ads. not am.XXXXXXobject <se(args->close_fd)XXXt ailed: threads. L"ct <hich is: (args->close_fd)d  == -1d_ == -1 of  threads. xecve(am.XXXXXX exception with description "in tured_stream.XXXXXX of threads.lose_fd)rgs->close_fd)the number of threads.ream.XXXXXXred_stream.XXXXXX
s.ailed: d: -byte object <f threads.XXX++ exception with description "ng of f threads.s: etected  of   of threads.Xlose_fd)/tmp/captured_stream.XXXXXXmber of threads.XXXXXyte object <am.XXXXXX(args->close_fd) substring of threads.d d_ == -1eption with description "xception with description "= -1XXX(args->close_fd)ad_fd_ == -1mber of threads.stream.XXXXXXct <ads.t the number of threads.) failed: ("ads.s.("/tmp/captured_stream.XXXXXXads. == -1ir("f d:  exception with description "d)r == -1/tmp/captured_stream.XXXXXXxecve(led:  is: XXXXXads.eption with description "++ exception with description "ted ryte object <
lose(args->close_fd)s.tured_stream.XXXXXXse(args->close_fd)++ exception with description " substring of s->close_fd)d L" exception with description "se(args->close_fd)f ads.ubstring of ads.ream.XXXXXX..) in hich is: ect the number of threads.e object <e number of threads.ads.led:  ...) in ted ailed: ct <s->close_fd)threads.ed:  /tmp/captured_stream.XXXXXX_fd_ == -1ring of ct <ted yte object <se_fd)s. detect the number of threads.etected _fd_ == -1ailed: ed:  <s.d: t XXXer of threads.>close_fd)threads.xception with description " failed: in f threads.(args->close_fd)xception with description " d_ == -1t the number of threads.t the number of threads.ch is: in e(lose_fd)read_fd_ == -1
number of threads.threads.  < ...) in 
ring of in rgs->close_fd)d:  of aptured_stream.XXXXXXd) detect the number of threads.) failed:  is: se(args->close_fd)Xlose(args->close_fd)etect the number of threads.reads.d_ == -1tured_stream.XXXXXXam.XXXXXX == -1xception with description "("XL"tured_stream.XXXXXXlose_fd)stream.XXXXXXnumber of threads. substring of  of L"XXXs.tured_stream.XXXXXXreads.yte object <string of ct <etect the number of threads.lose(args->close_fd)f threads.mp/captured_stream.XXXXXXd_stream.XXXXXXd_stream.XXXXXX/captured_stream.XXXXXX/captured_stream.XXXXXXad_fd_ == -1  se_fd)reads.aptured_stream.XXXXXXxception with description "-1/captured_stream.XXXXXXailed:  ...) in  02Xch is: s. d_stream.XXXXXXd_stream.XXXXXXam.XXXXXX = -1tured_stream.XXXXXXcve(t the number of threads.L"d_stream.XXXXXX= -1reads.eption with description "("t  exception with description "red_stream.XXXXXX: led: ...  of threads.s.yte object <e number of threads.XXXaptured_stream.XXXXXX detect the number of threads. < ream.XXXXXXed: XXXXX.XXXXXX substring of ed: stream.XXXXXXubstring of ("t the number of threads._fd)/tmp/captured_stream.XXXXXXads. detect the number of threads.ct <t the number of threads.ailed: ailed:  ...) in number of threads.reads.. (args->close_fd)(args->close_fd)ad_fd_ == -1++ exception with description "t the number of threads.etected d in ) failed: d)ted ("ad_fd_ == -1 substring of s. hdir(" failed: se_fd)object <se_fd)er of threads.ject <: eption with description "ring of threads.t ads.hich is: lose(args->close_fd)-1am.XXXXXX/captured_stream.XXXXXXreads.s: rnot ream.XXXXXXXxecve(/captured_stream.XXXXXX ...) in r L"ryte object <
 substring of ng of e object <se_fd)ad_fd_ == -1failed: etected ring of = -1.  ...) in ected d: not se(args->close_fd)d_ == -1 is: rubstring of d)etected rreads.t the number of threads.ailed: failed: aptured_stream.XXXXXX.XXXXXX of  substring of read_fd_ == -1 ad_fd_ == -1XXXir("ailed: object < Xxception with description ": ) failed: ailed:  == -1s.the number of threads.("eption with description "s: e(ch is: xecve(stream.XXXXXXled: lose_fd)s. exception with description "/captured_stream.XXXXXXnot aptured_stream.XXXXXXrgs->close_fd)ads.number of threads.ads. exception with description "t the number of threads. ct <ted  detect the number of threads.d_ == -1ect the number of threads.aptured_stream.XXXXXXs. . /captured_stream.XXXXXXads.rX= -1etected ..) in lose_fd)am.XXXXXXt ect the number of threads.e(d)ch is:  ++ exception with description ". reads.... ream.XXXXXXring of s->close_fd): etect the number of threads.f threads.) failed: : string of e object <in  of Xted lose(args->close_fd)... ..) in s.yte object <d: >close_fd)in : -byte object <the number of threads.f ir("reads.mp/captured_stream.XXXXXXailed: rgs->close_fd)threads.s->close_fd)("ring of iled:  xecve(xception with description "++ exception with description "not Xred_stream.XXXXXXads.red_stream.XXXXXXads.aptured_stream.XXXXXXd_ == -1led: Xetected hich is: L" failed: iled: hdir("ected raptured_stream.XXXXXXstream.XXXXXXted Xailed:  of er of threads.rnumber of threads..  exception with description "led: f threads.Xiled: hich is:  is: ... ect the number of threads.cve(ed: tured_stream.XXXXXX02Xcve(ream.XXXXXXfailed: am.XXXXXX_fd_ == -1object <s: ed: s.threads.led: ) failed: ads.ct < read_fd_ == -1xception with description ". ("d_stream.XXXXXX>close_fd)ted /tmp/captured_stream.XXXXXX... ("ject <number of threads. ...) in ) in read_fd_ == -1 <not ected ... >close_fd)number of threads.lose(args->close_fd) ...) in  failed: ailed: >close_fd)ject <d_ == -1eption with description "in ) in = -1ubstring of  ...) in d_stream.XXXXXX= -1 failed: ect the number of threads.iled: se(args->close_fd)etect the number of threads.= -1ream.XXXXXXmber of threads. exception with description "= -1reads.ad_fd_ == -1er of threads.not L" is: the number of threads.ed:   == -1e( failed: red_stream.XXXXXXnumber of threads.ject <t the number of threads.xecve( s: read_fd_ == -1yte object <t ..) in  exception with description ") in ubstring of red_stream.XXXXXXct <xception with description "er of threads./captured_stream.XXXXXXubstring of  of  of threads.the number of threads.reads.("lose_fd)_fd_ == -1am.XXXXXX= -1d_ == -1in /captured_stream.XXXXXXhdir("am.XXXXXXd_ == -1threads.ect the number of threads.ailed: string of ct <f threads. == -1ailed: failed:  tured_stream.XXXXXX led:   ads.e object <se(args->close_fd): s.ads.yte object <threads. exception with description "(args->close_fd)t the number of threads.ected e number of threads.cve(d rxecve(ream.XXXXXXthe number of threads.not iled: ct <("XXXXXXXXled: in  ...) in ailed:  se_fd)d)ring of (" ...) in ir("d_stream.XXXXXX/tmp/captured_stream.XXXXXXject <ring of iled: ailed: e number of threads.e number of threads.object <ream.XXXXXX: Xhich is: lose(args->close_fd)reads.aptured_stream.XXXXXX ...) in s.... riled: lose(args->close_fd)ted se(args->close_fd) is: ed:  detect the number of threads.rgs->close_fd)failed:  detect the number of threads. failed: s: ect the number of threads.tured_stream.XXXXXXled: xecve(threads.ads.number of threads.= -1t the number of threads.s: : ubstring of tured_stream.XXXXXX ch is: ir("in -byte object <= -1) in yte object </tmp/captured_stream.XXXXXXxception with description "s: lose_fd)/tmp/captured_stream.XXXXXX exception with description "mber of threads. substring of the number of threads.not XXXXXthreads.reads.  of threads.number of threads.ect the number of threads.r detect the number of threads.ct <stream.XXXXXX exception with description " substring of ) in ed: .XXXXXXf tured_stream.XXXXXXnumber of threads.se(args->close_fd)ads. substring of ream.XXXXXXubstring of d: led: led: reads.... in ++ exception with description "cve(ject <ct <failed: er of threads.XXXthreads.ir("/captured_stream.XXXXXXeption with description "ch is: d) failed: e number of threads.XXXXXer of threads.e( of  iled: in ir("e number of threads.iled: -byte object <d ect the number of threads.s.s: 
cve(ads..XXXXXXf ject <se_fd)er of threads.the number of threads.read_fd_ == -1d:  detect the number of threads.reads.ad_fd_ == -1ad_fd_ == -1er of threads. ) in _fd)ct < ...) in ) failed:  in number of threads.mber of threads.se_fd)  is: cve(ream.XXXXXX <mp/captured_stream.XXXXXX_fd_ == -1t ring of ject <d s: led: threads.d: se(args->close_fd): number of threads.(args->close_fd)number of threads.s.f  == -1.XXXXXXubstring of 
stream.XXXXXXread_fd_ == -1e object <
 is:  xception with description "xception with description "d)ir("..) in ream.XXXXXX exception with description "L"f threads. of threads./tmp/captured_stream.XXXXXXthreads. detect the number of threads. d_stream.XXXXXX-byte object <_fd): ect the number of threads.02Xaptured_stream.XXXXXXhdir("... eption with description "eption with description "etected eption with description "tured_stream.XXXXXXd_ == -1d: red_stream.XXXXXXch is: -byte object <the number of threads.mber of threads.mber of threads.s: threads.hdir("ads.) failed: xception with description " <red_stream.XXXXXXe(xecve(d) failed: eption with description " number of threads.: rd)ads.number of threads. detect the number of threads.ch is: stream.XXXXXXlose(args->close_fd)>close_fd).XXXXXXetect the number of threads. of ubstring of ubstring of threads.etect the number of threads.s: eption with description "ubstring of  is: e number of threads.t ng of not  is: reads.d_stream.XXXXXXlose_fd)/captured_stream.XXXXXXxception with description ") in not etected  failed: am.XXXXXX. _fd)number of threads...) in ject <stream.XXXXXX is: hdir("ads.er of threads.ject <= -1_fd_ == -1t the number of threads.ng of xecve(ch is: ubstring of d_stream.XXXXXX detect the number of threads.ject <aptured_stream.XXXXXX) failed: ream.XXXXXXe number of threads._fd)eption with description " of threads.... . = -1cve(mber of threads....  of threads.in ected  failed: s->close_fd)hdir(" failed: ... lose_fd) of threads.Xject < == -1ected  ...) in Xam.XXXXXXthe number of threads.ect the number of threads.the number of threads.>close_fd)er of threads.etect the number of threads.-1stream.XXXXXXmber of threads. etect the number of threads.s->close_fd)ct <etect the number of threads.rir("d_ == -1) failed: X == -1rer of threads.er of threads. Xject <reads.rreads..XXXXXX: rd)...  substring of XXXad_fd_ == -1s->close_fd) is: number of threads.s: threads.>close_fd)aptured_stream.XXXXXXobject <in iled: ed: ++ exception with description "XXXt the number of threads.  ads.d ir("ubstring of xception with description "f threads.  failed: r .XXXXXXhdir("threads.ad_fd_ == -1tured_stream.XXXXXX= -1reads.= -1ad_fd_ == -1xecve(ng of  rgs->close_fd): e(xecve(reads.er of threads.s->close_fd)failed: ad_fd_ == -1se_fd)) failed:  exception with description " string of led: s.iled: f  am.XXXXXXrgs->close_fd)stream.XXXXXXXf -byte object <f threads..XXXXXXe number of threads._fd)ject <ring of L"e object <e object <XXXXX < ir("ct < substring of number of threads. reads.led:  detect the number of threads.in ted  detect the number of threads.t the number of threads. <number of threads.ads.e(object <hdir("L"red_stream.XXXXXXse(args->close_fd)02X("d_stream.XXXXXX..) in ... /captured_stream.XXXXXXhich is: the number of threads.d_ == -1= -1mp/captured_stream.XXXXXXhdir("++ exception with description "ect the number of threads.reads.d: ct <mber of threads. lose(args->close_fd)stream.XXXXXXthe number of threads. substring of  < == -1-1ring of eption with description "-1ected  of -byte object <lose(args->close_fd) failed: stream.XXXXXXetect the number of threads.e( s->close_fd). ) failed: read_fd_ == -1ject < detect the number of threads.d_stream.XXXXXXin reads.02Xream.XXXXXXring of ject < of threads. e number of threads.ring of ... e number of threads.ch is: d_stream.XXXXXXlose_fd)ads.string of string of am.XXXXXXubstring of s: ir("ject <) in ) in hdir("Xstring of ailed: f read_fd_ == -1hdir(". ed:  detect the number of threads.-1reads.eption with description "rgs->close_fd) d s->close_fd)XXXject <the number of threads.-byte object <L"XXXXXted . (args->close_fd)cve(lose_fd)er of threads.rgs->close_fd)stream.XXXXXXs->close_fd)
e object <ect the number of threads.ir("ads.d)lose_fd)Xthreads.ect the number of threads.threads.reads.se_fd)se(args->close_fd)tured_stream.XXXXXX ) failed: (args->close_fd)t ng of  of threads. substring of  threads.: ct <e number of threads._fd)eption with description "ect the number of threads.XXX ("se(args->close_fd)-1lose(args->close_fd)ads.threads.ailed: s: ads.XXXXX..) in number of threads.rled: .XXXXXX detect the number of threads.ring of mp/captured_stream.XXXXXXir("reads.se(args->close_fd)X++ exception with description "er of threads.the number of threads.XXXXXled: ) failed: number of threads. <object <in t in .XXXXXXf threads. == -1stream.XXXXXX <red_stream.XXXXXXL"..) in /captured_stream.XXXXXX... s: ted ++ exception with description "/tmp/captured_stream.XXXXXXs->close_fd)number of threads./tmp/captured_stream.XXXXXXXtured_stream.XXXXXXnot >close_fd)se_fd)XXXXXailed: rlose(args->close_fd)ubstring of e(-byte object <e object <iled: ++ exception with description "read_fd_ == -1..) in >close_fd)ed: etect the number of threads.se(args->close_fd)xception with description "etect the number of threads.etect the number of threads.ected ..) in ir(".  . ject <object <-1yte object <s: lose_fd)ject <.XXXXXXhich is:  ...) in 02Xreads.not mber of threads.mber of threads.ads.er of threads.mber of threads.= -1reads.ads.L"e number of threads.ect the number of threads.XXXXXXmp/captured_stream.XXXXXXect the number of threads.f  of threads.02Xhdir("stream.XXXXXX  e number of threads.ream.XXXXXXct <xception with description "reads.d_stream.XXXXXX ected .XXXXXXs.(args->close_fd)object <string of e number of threads. of t the number of threads.L"d etect the number of threads.... -byte object <aptured_stream.XXXXXXt the number of threads.ject <threads.threads.ads. exception with description "ected  er of threads.s: s: ) in ect the number of threads.ads.e number of threads.d L"_fd)etected  of threads./tmp/captured_stream.XXXXXXnot  == -1/tmp/captured_stream.XXXXXXad_fd_ == -1ailed: s->close_fd)02Xnot ject <d threads.02Xubstring of d)ted rnumber of threads.red_stream.XXXXXXt the number of threads.mp/captured_stream.XXXXXXam.XXXXXXeption with description "/captured_stream.XXXXXXL"s: s: se_fd)ted tured_stream.XXXXXXream.XXXXXX02Xled: not ject <++ exception with description " is: ... 
_fd_ == -1-byte object <ream.XXXXXX.  Xxecve(d_ == -1t d d_stream.XXXXXXcve(mber of threads.ect the number of threads.iled: d: ream.XXXXXX is: >close_fd)d e(reads.ir(" substring of ected mp/captured_stream.XXXXXX_fd)se_fd)Xer of threads.eption with description "eption with description "threads.ng of ++ exception with description "/tmp/captured_stream.XXXXXXect the number of threads.read_fd_ == -1-byte object <ct <(args->close_fd)ed: t etected ad_fd_ == -1e object <ct <red_stream.XXXXXX= -1. _fd_ == -1ads. exception with description "er of threads.f threads.etect the number of threads.tured_stream.XXXXXXL"yte object <ected xecve(reads.X/tmp/captured_stream.XXXXXX= -1not number of threads.) failed: ("lose(args->close_fd)ad_fd_ == -1s->close_fd)string of hich is: 
ect the number of threads.red_stream.XXXXXXream.XXXXXXs->close_fd)_fd_ == -1L"iled: red_stream.XXXXXXthe number of threads.retect the number of threads. of threads.threads.threads.threads.ng of Xeption with description "er of threads.e object <threads.not ir("e( of threads.aptured_stream.XXXXXXted r_fd)f am.XXXXXXmber of threads. failed: reads.d_ == -1 ...) in :  exception with description "/captured_stream.XXXXXXad_fd_ == -1>close_fd) < detect the number of threads.ailed: etected threads.(args->close_fd)ubstring of   substring of  ...) in lose_fd)eption with description "-byte object <lose(args->close_fd)threads. ad_fd_ == -1eption with description "threads. of threads.iled: e number of threads.reads.t ) in failed:  <t the number of threads..XXXXXXream.XXXXXXr. not d)..) in lose_fd)>close_fd)ject <s->close_fd)am.XXXXXXreads.hdir("(args->close_fd).XXXXXXailed: ubstring of d_ == -1string of  of -1 xception with description "f ct <threads.cve(e object <ir("mber of threads.reption with description "d_ == -1ubstring of ream.XXXXXXject <failed: ted stream.XXXXXXe object <aptured_stream.XXXXXXetect the number of threads.) failed:  ...) in s->close_fd)not  <s.ad_fd_ == -1not failed: ... mber of threads. led:  failed: ailed:  of threads.ect the number of threads.-1eption with description "... ..) in string of _fd)ir("_fd)read_fd_ == -1..) in read_fd_ == -1ted s.s: -1 of threads.rgs->close_fd)
t the number of threads.ream.XXXXXX is: ... XXXnumber of threads.ailed: failed: ng of s: etect the number of threads.s->close_fd)/captured_stream.XXXXXXd)the number of threads.threads.failed: .XXXXXXXXXXXstream.XXXXXXtured_stream.XXXXXX("reads. detect the number of threads. substring of   == -1ads..XXXXXXailed: er of threads.: ted s: xception with description "reads...) in ads.cve(er of threads.s->close_fd) /captured_stream.XXXXXXthreads. == -1 of ++ exception with description "d xception with description "++ exception with description "d_stream.XXXXXXng of e number of threads.e(object <ct <d_stream.XXXXXXad_fd_ == -1.XXXXXXaptured_stream.XXXXXXreads. substring of ng of eption with description "not lose(args->close_fd)led: lose(args->close_fd)t xception with description "-1s->close_fd)ed:  is:   ct <reads.d ubstring of ++ exception with description "string of s: (args->close_fd)d)hich is: f threads.etected cve(red_stream.XXXXXXad_fd_ == -1... >close_fd)red_stream.XXXXXXe number of threads.lose(args->close_fd)lose_fd) failed: _fd_ == -1object <ad_fd_ == -1-byte object <led: etect the number of threads.ubstring of X(args->close_fd)mber of threads. == -1 of  == -1s->close_fd) exception with description "hich is: rs. == -1s.rs.XXXtured_stream.XXXXXXs.number of threads.02Xiled: 02Xd: s.am.XXXXXXct <ect the number of threads.) in ad_fd_ == -1f object <mber of threads.) in red_stream.XXXXXX) failed: e object <ed: s.d e number of threads.mp/captured_stream.XXXXXXnot xception with description " ...) in f threads.se_fd)ng of number of threads.(args->close_fd)hich is: ir(" == -1threads.s.object <. rgs->close_fd)e( of d_stream.XXXXXXtured_stream.XXXXXXf threads.r= -1. = -1stream.XXXXXXd ... ct <yte object <rreads.Xe number of threads.lose(args->close_fd)rgs->close_fd)rgs->close_fd) e( < ...) in er of threads.not se_fd)ject <ject <(" of the number of threads.>close_fd) failed: er of threads.led:  exception with description "d: .XXXXXXads.) failed: am.XXXXXXXf ect the number of threads.se_fd)hdir("e(xception with description "mp/captured_stream.XXXXXX>close_fd)threads.++ exception with description " of threads.ads.failed: hich is: ted the number of threads.ject <d: ected hdir("hich is: e(e number of threads. exception with description "ed:  number of threads.reads.L"ring of = -1the number of threads.d)ed: hdir("not -1++ exception with description "etected ed: number of threads.X detect the number of threads.e(ir("(" == -1("t Xreads.se(args->close_fd)t threads.ads.reads.("read_fd_ == -1reads.ubstring of ++ exception with description "ads.er of threads.rgs->close_fd)s: _fd_ == -1 of threads.L"..) in (args->close_fd)string of s->close_fd)object < == -1.XXXXXXt XXXXXL"s.xception with description "eption with description "("ed: r failed: mber of threads..XXXXXXcve(rgs->close_fd)/tmp/captured_stream.XXXXXXject <r..) in e object < exception with description " ...) in s->close_fd)/captured_stream.XXXXXX("ubstring of eption with description ".XXXXXXs->close_fd)/tmp/captured_stream.XXXXXXhdir("string of  ...) in string of etected in  s: string of se_fd) Xream.XXXXXXxecve(se_fd): ject <t the number of threads.s.e object <lose_fd) failed: XXXxecve(object <se_fd)rgs->close_fd)ng of ++ exception with description "reads.mber of threads. lose_fd)-byte object <the number of threads.ed: 02Xream.XXXXXX failed: led: _fd_ == -1ct <not read_fd_ == -1L"eption with description "e object <f ads.ed:  substring of _fd_ == -1se_fd) ed: d_stream.XXXXXXin se_fd)cve( == -1t the number of threads.lose(args->close_fd) lose(args->close_fd)s. substring of  <e object <ad_fd_ == -1etect the number of threads.L"etect the number of threads.-byte object <lose(args->close_fd) == -1 substring of reads./captured_stream.XXXXXXiled: etect the number of threads.d t -byte object <ted ed: etect the number of threads.d iled: etected s.
s: cve(-1_fd)ir("ected  exception with description ">close_fd)in etect the number of threads./tmp/captured_stream.XXXXXXhich is: eption with description "02X++ exception with description "reads.ted iled: threads. substring of failed: xception with description "ring of the number of threads.led: _fd)e object <
e(etect the number of threads.er of threads.: Xse(args->close_fd)mber of threads.led: ect the number of threads.in /tmp/captured_stream.XXXXXXted ected not L"ailed: etect the number of threads.t the number of threads.rgs->close_fd)ng of object <ct < exception with description "etect the number of threads.Xobject < <er of threads...) in /captured_stream.XXXXXXd mber of threads.iled: led: ... xception with description "mber of threads.d_ == -1threads.ct <iled: reads.number of threads.ad_fd_ == -1ads.reads.eption with description " lose(args->close_fd)threads.= -1stream.XXXXXX02X.XXXXXXthreads. failed:  t  ect the number of threads.tured_stream.XXXXXXrgs->close_fd) <etected ch is: .XXXXXX/tmp/captured_stream.XXXXXXd: ng of ted ... se_fd).XXXXXX02Xe object <>close_fd)aptured_stream.XXXXXX.XXXXXXaptured_stream.XXXXXXreads.s.ream.XXXXXXXnumber of threads.the number of threads.ch is: ir("ed:  ...) in ailed: ring of object <iled: XXXcve(in ads.se_fd)/tmp/captured_stream.XXXXXX ) failed: s.hich is: mber of threads.led: rect the number of threads. failed: etect the number of threads.am.XXXXXXyte object <object <rgs->close_fd)lose(args->close_fd)L"..) in threads.d_stream.XXXXXXthe number of threads._fd)rgs->close_fd)... ring of  substring of rgs->close_fd)iled: etect the number of threads. substring of  hich is: L"red_stream.XXXXXX lose_fd)lose(args->close_fd) mber of threads./tmp/captured_stream.XXXXXXd)= -1X ...) in s._fd_ == -1t etected se_fd).XXXXXXir("the number of threads.tured_stream.XXXXXXL"s: cve(ch is:  substring of  is: . L"d: ads.led: ads.t the number of threads.led: xception with description "reads.s: ad_fd_ == -1lose(args->close_fd) substring of stream.XXXXXXthreads.) failed: d_ == -1ch is: s: ("e object <  substring of  red_stream.XXXXXXct <(args->close_fd)ch is: rL"red_stream.XXXXXXthe number of threads.e number of threads.threads...) in read_fd_ == -1reads.e object <= -1s->close_fd)..) in X ...) in  ...) in ram.XXXXXX.  failed:  reads.stream.XXXXXXthe number of threads.d_stream.XXXXXX-1 is: e(threads.... /tmp/captured_stream.XXXXXX-1s.(args->close_fd)mber of threads.lose_fd)d)number of threads.ch is: X xception with description " ...) in not .XXXXXXin ++ exception with description " mber of threads..XXXXXX_fd)ject <xecve(aptured_stream.XXXXXXted not hdir("iled: ream.XXXXXXthreads.X_fd) of threads.lose(args->close_fd)mp/captured_stream.XXXXXX is: ream.XXXXXX failed: string of s->close_fd) ...) in object <ted xecve( of XXXXXxception with description "d)e object <ect the number of threads.am.XXXXXXthreads.++ exception with description " ...) in ) in  _fd)reads. f threads.ected ads.ads. ...) in not yte object <se_fd)s.reads.-byte object <f threads. d yte object <number of threads.lose(args->close_fd)ted ted lose(args->close_fd) of threads.xecve(Xe object <ng of  er of threads.ng of ) in stream.XXXXXXthreads.yte object <s->close_fd)ir("t ailed: ) in ir("d f threads. failed: se_fd)string of ir("ream.XXXXXX/captured_stream.XXXXXXin am.XXXXXXd_ == -1s: ject <("++ exception with description ") in Xtured_stream.XXXXXXject <-1 is: r) failed: e number of threads.threads.= -1lose(args->close_fd) detect the number of threads.object <rgs->close_fd)stream.XXXXXXailed: mber of threads.mber of threads.d_ == -1lose(args->close_fd) is: XXXXeption with description "mber of threads. ...) in am.XXXXXXreads.led: ) in XXXXXch is:  exception with description "(args->close_fd) <number of threads.d /captured_stream.XXXXXXetected ream.XXXXXXxception with description "
in ted number of threads.tured_stream.XXXXXXthreads. detect the number of threads.d 02X. se(args->close_fd)t hich is:  substring of ted aptured_stream.XXXXXXir("string of ed: XXXXXcve(stream.XXXXXXe(L"reads.xecve(X-byte object <hdir("lose_fd)(" of threads.am.XXXXXXer of threads.hich is: string of rstream.XXXXXXreads. == -1red_stream.XXXXXXlose(args->close_fd)red_stream.XXXXXXlose(args->close_fd)mber of threads.) in ng of >close_fd)d: er of threads.stream.XXXXXX= -1..) in se(args->close_fd)L"ubstring of ..) in aptured_stream.XXXXXXlose(args->close_fd)hdir("er of threads.Xnot XXXXX...  failed: ("threads.se(args->close_fd) == -1..) in XXXed: read_fd_ == -1ads. is: ubstring of  detect the number of threads...) in xecve(s.-byte object <ads.ch is:  is: ed: yte object <ch is: _fd) failed: eption with description "am.XXXXXXetect the number of threads.e object <mp/captured_stream.XXXXXXd_stream.XXXXXX: s.ct <lose_fd)stream.XXXXXXream.XXXXXXf . ("threads. <ected /tmp/captured_stream.XXXXXXted (") failed: ring of se(args->close_fd)er of threads.reads.e object <led: object <hdir("failed: failed: >close_fd)aptured_stream.XXXXXXch is:  == -1... ring of  is: s: hdir("e(ed: se_fd)eption with description "++ exception with description "ubstring of L"mp/captured_stream.XXXXXXetected ct <mp/captured_stream.XXXXXXcve(Xted  of threads.++ exception with description "iled: ected not d_ == -1lose_fd)d_stream.XXXXXX
-byte object <am.XXXXXXstring of XXXthreads.reads. ... am.XXXXXXreads.eption with description " <reads.ject <rgs->close_fd)ads.e object < substring of  exception with description "ject <>close_fd): t the number of threads.s.xecve(r... hich is: se(args->close_fd)failed: red_stream.XXXXXXetected  ch is: ) failed: f threads.lose_fd)ect the number of threads._fd_ == -1threads.stream.XXXXXXf e object <f ++ exception with description "object <hdir("(" exception with description "lose(args->close_fd)er of threads.ject <mp/captured_stream.XXXXXXs.XXXXX_fd_ == -1hich is: ads.mp/captured_stream.XXXXXXf am.XXXXXX(args->close_fd)ir("am.XXXXXXreads.hich is: ubstring of ..) in ring of /tmp/captured_stream.XXXXXXir("rreads.mber of threads./tmp/captured_stream.XXXXXXaptured_stream.XXXXXXXailed: L"mber of threads.er of threads.number of threads.failed: rread_fd_ == -1e( failed: hdir("yte object <e number of threads.etected ) in mber of threads.ream.XXXXXXd: ad_fd_ == -1XXXhich is: : _fd)-byte object <yte object <: d_ == -1("failed: red_stream.XXXXXX detect the number of threads.("object < = -1ubstring of ) failed: the number of threads.threads. ...) in d: etect the number of threads.not >close_fd) of threads.>close_fd)ch is: ailed: . ailed: object <d: xecve(aptured_stream.XXXXXX02Xf threads.am.XXXXXX ads..XXXXXX failed: -1) in mber of threads.ream.XXXXXXd: er of threads.ch is: mber of threads.xception with description "rgs->close_fd)ad_fd_ == -1s->close_fd) exception with description " exception with description "XXXstream.XXXXXX <xception with description ". eption with description "ch is: in ads.ed: e number of threads.failed: s: L"-byte object <02Xf threads.f se(args->close_fd)d_ == -1 <hdir(") in threads.in lose(args->close_fd)se_fd)t the number of threads. substring of ct <++ exception with description "/captured_stream.XXXXXXstring of t = -1threads.ected d_ == -1..) in d: aptured_stream.XXXXXXubstring of _fd_ == -1s->close_fd)XXX_fd_ == -1d: _fd)d er of threads.rgs->close_fd) is: se_fd)red_stream.XXXXXX_fd)ect the number of threads.threads. detect the number of threads.mp/captured_stream.XXXXXXhdir("d_stream.XXXXXXailed: aptured_stream.XXXXXXtured_stream.XXXXXXstream.XXXXXXnot  is: ted e object < == -1= -1ad_fd_ == -1) failed: ected s->close_fd)ubstring of ng of d  string of d)threads. exception with description "lose_fd) of  <lose_fd)= -1er of threads.  of threads.-1++ exception with description ". reads. detect the number of threads.s.r++ exception with description "d t >close_fd)s: s: 
tured_stream.XXXXXXected ject < detect the number of threads.e number of threads.Xstring of ected  == -1read_fd_ == -1led: etected etect the number of threads.mber of threads.ject <>close_fd)lose_fd)02X in red_stream.XXXXXX... .XXXXXXad_fd_ == -1r... /tmp/captured_stream.XXXXXXcve(s->close_fd)lose_fd)er of threads.cve(failed: f threads.-byte object <Xyte object <(" detect the number of threads.etect the number of threads.ted reads.("tured_stream.XXXXXXetected XXXXXred_stream.XXXXXXads.led:  of -1er of threads..XXXXXXled: s->close_fd) exception with description "d ir("yte object <lose_fd)led: red_stream.XXXXXXject <ads.threads.threads.se(args->close_fd)iled: yte object <ubstring of lose(args->close_fd)aptured_stream.XXXXXXhdir("f threads.(args->close_fd)threads.etect the number of threads.ads.number of threads.xecve(ject < -byte object <ads.s: iled: xecve(f ected _fd)e number of threads.ject <ad_fd_ == -1>close_fd)stream.XXXXXXhdir("-byte object <er of threads.threads.e object <lose_fd)... e number of threads.reads.led: rer of threads..XXXXXX <etect the number of threads.(args->close_fd)= -1iled: (" of mber of threads. is: led:  <s.am.XXXXXX failed: ads.object <iled: ..) in ads.s.cve() failed: (args->close_fd) == -1e number of threads.yte object < ) failed:  of ct <XXXXXetected string of e(ct <ads.t cve(lose(args->close_fd) <threads.ch is: mber of threads.Xetected read_fd_ == -1xception with description "tured_stream.XXXXXX-1-byte object <("the number of threads.cve(rX failed: tured_stream.XXXXXXreads./tmp/captured_stream.XXXXXXs->close_fd)/captured_stream.XXXXXXd  < <hdir(") failed:  ...) in xception with description "f threads.(args->close_fd)red_stream.XXXXXXstring of : not L"cve(: number of threads. <ct < exception with description "iled: threads.hich is: d_ == -1-byte object < exception with description "lose(args->close_fd) is: reads.etected xception with description "..) in f threads.(args->close_fd)reads.
failed: object <e object <s->close_fd)ream.XXXXXXse_fd)s.yte object <
ject <>close_fd)d_stream.XXXXXXd: ... iled: >close_fd)ch is: .XXXXXX of in e object <ch is: 
ream.XXXXXXxecve(ubstring of not 
etect the number of threads.XXX_fd_ == -1d: ubstring of lose(args->close_fd)ed:  is: d_stream.XXXXXXL"ch is: mp/captured_stream.XXXXXX= -1f threads./tmp/captured_stream.XXXXXX-1f Xmber of threads./captured_stream.XXXXXXread_fd_ == -1 of ring of reads. failed: t the number of threads.) in xception with description "er of threads.string of -1etect the number of threads./captured_stream.XXXXXX. /tmp/captured_stream.XXXXXXads./captured_stream.XXXXXX..) in ) in xception with description " ...) in 02Xrgs->close_fd)) failed: number of threads.X of threads. == -1e(red_stream.XXXXXXs->close_fd)s->close_fd)lose(args->close_fd)tured_stream.XXXXXXcve(am.XXXXXXmp/captured_stream.XXXXXXam.XXXXXXted f 02Xrgs->close_fd)the number of threads.f threads.f e(ring of ..) in s.mp/captured_stream.XXXXXX/captured_stream.XXXXXX(args->close_fd)cve( tured_stream.XXXXXXe(XXXXXlose_fd)reads..XXXXXX substring of ("not  failed: am.XXXXXX of 
Xobject <lose(args->close_fd).  <red_stream.XXXXXXfailed: = -1-byte object <ted se_fd)xecve(hdir(" < is: the number of threads.L"ject <etected hich is: etect the number of threads.read_fd_ == -1t the number of threads. in  led: Xyte object <rgs->close_fd)reads.rgs->close_fd)) failed: = -1-byte object <
++ exception with description "eption with description "lose(args->close_fd).XXXXXXXetected _fd)tured_stream.XXXXXX of red_stream.XXXXXXd: f not s->close_fd)hich is: ..) in d ect the number of threads.Xs.reads.string of the number of threads.threads.= -1ads.d  ...) in d: in (args->close_fd) is: threads.(" exception with description "(args->close_fd)) failed: in t t the number of threads.ted lose(args->close_fd)("Xd: rgs->close_fd)/tmp/captured_stream.XXXXXXnumber of threads.("object <hich is: ad_fd_ == -1 of threads.ream.XXXXXXread_fd_ == -1s.se(args->close_fd)read_fd_ == -1ring of lose_fd)rir(". ct < ...) in  e number of threads.>close_fd)xecve(ring of ect the number of threads.r. lose_fd)d_stream.XXXXXXir("mber of threads.-1.XXXXXX
ring of ream.XXXXXXXXX
e(reads. ...) in f cve(.XXXXXXstring of _fd_ == -1string of etected d_ == -1s.ect the number of threads.) failed: ted in mp/captured_stream.XXXXXX.  failed:  is: ng of rgs->close_fd)threads.the number of threads. ject < substring of mp/captured_stream.XXXXXXse_fd)
 failed: ct <cve((args->close_fd)f s:  xception with description " <X == -1XXXected f threads.. t 02X/tmp/captured_stream.XXXXXXring of ring of ) in  is: ("threads. substring of ch is: led: rxception with description "d: ed: led: object <ch is: . reads. is: se_fd)s.threads.ads. <..) in ++ exception with description "ect the number of threads.ads.(args->close_fd)-byte object <... ted led: s->close_fd)mber of threads.se_fd)ch is:  ubstring of reads.L"hich is: /tmp/captured_stream.XXXXXXaptured_stream.XXXXXXthe number of threads.t the number of threads. d: ailed: ect the number of threads.d_ == -1s.threads.-byte object <d: e number of threads..XXXXXXmber of threads.  <ct </captured_stream.XXXXXXmber of threads.mber of threads.mber of threads. substring of read_fd_ == -1the number of threads.t the number of threads.t rXXXXXX e( </captured_stream.XXXXXX02Xe( ...) in  of threads.>close_fd)s->close_fd) == -1/tmp/captured_stream.XXXXXXrgs->close_fd)ubstring of eption with description "ring of s.L"mber of threads.L"d)xception with description "X>close_fd) ...) in rL"iled: _fd)-byte object <mber of threads.ailed: mber of threads.) in e(string of ads.ring of number of threads.ted reads.aptured_stream.XXXXXXected threads.f threads._fd_ == -1led: ++ exception with description "d)("... /tmp/captured_stream.XXXXXX) failed: xecve(e(reads.lose(args->close_fd)d) ...) in not lose_fd)lose_fd)) failed: /captured_stream.XXXXXXL"rgs->close_fd)ir("d: ubstring of rgs->close_fd)X-byte object <(args->close_fd)tured_stream.XXXXXXe number of threads.hich is: ) failed: ch is: ir("in d:  of ad_fd_ == -1 failed: etect the number of threads.ad_fd_ == -1t the number of threads.L"ream.XXXXXXlose_fd)mber of threads.xception with description "ads.etect the number of threads.ad_fd_ == -1threads.ring of = -1lose_fd) detect the number of threads.(args->close_fd)stream.XXXXXXxecve(lose_fd)(args->close_fd)mp/captured_stream.XXXXXX substring of reads.aptured_stream.XXXXXX ...) in mber of threads.mber of threads.ected threads.led: d_ == -1xecve(read_fd_ == -1failed: lose(args->close_fd)d ads.ect the number of threads.e(e(t aptured_stream.XXXXXXected mber of threads.f threads.= -1ed:  of threads.t ubstring of ) in  ...) in ++ exception with description "d) of threads.xecve(eption with description " reads.hich is: e object <led: number of threads.ject <xception with description "XXXXX... read_fd_ == -1aptured_stream.XXXXXXe(/captured_stream.XXXXXXs: d_ == -1aptured_stream.XXXXXXiled: xception with description "ed: se_fd)-1 is: string of  == -1se_fd)se(args->close_fd)red_stream.XXXXXXmber of threads. of >close_fd) of threads...) in ...  == -1Xads.X.XXXXXXch is: s.ected  exception with description ". ++ exception with description "hich is: threads.ads.XXXXXobject </captured_stream.XXXXXXcve(f not stream.XXXXXXs->close_fd)xecve(("XXX. cve(mp/captured_stream.XXXXXXe object <aptured_stream.XXXXXX("red_stream.XXXXXXse_fd)ted ring of er of threads. == -1= -1ject <rgs->close_fd)object <stream.XXXXXXnot xception with description "object <yte object < of threads.ch is:  of lose(args->close_fd)..) in -byte object <ect the number of threads.lose(args->close_fd)("ng of led: s: s. == -1etected   d_stream.XXXXXXed: am.XXXXXXng of  of ("d_stream.XXXXXXxecve(ng of yte object <ected cve(s: object <in se_fd)("(args->close_fd)s->close_fd)XXXXXXject <led:  exception with description "reads.eption with description "hdir(" failed:  ...) in L".  stream.XXXXXXs: failed: s.s.++ exception with description "number of threads.t the number of threads.read_fd_ == -1lose(args->close_fd) == -1(" of threads.Xxception with description " failed: ... 02Xstring of not er of threads.ted ted t rgs->close_fd)ct <ailed:  object < ring of etected .XXXXXX exception with description "_fd_ == -1ct <er of threads./captured_stream.XXXXXXaptured_stream.XXXXXXXXXubstring of .XXXXXXlose_fd)ubstring of read_fd_ == -1Xailed: -byte object <yte object <... = -1s: am.XXXXXXeption with description "ads.s: _fd_ == -1t the number of threads.hich is: d)ads. number of threads.etect the number of threads.... e number of threads.ads.: ng of xecve(
eption with description "..) in XXXXXd_ == -1t d_ == -1/captured_stream.XXXXXXse(args->close_fd)ected  of xception with description "object <er of threads.-1yte object <hdir("read_fd_ == -1s: e object <xecve( /captured_stream.XXXXXXrs.reads. of iled: rgs->close_fd)XL"/tmp/captured_stream.XXXXXXXXXXXreads.hich is: not object <se_fd)... ted ected XXXXX_fd)rlose(args->close_fd)d_stream.XXXXXX exception with description " <hdir(") failed:  detect the number of threads.object <mber of threads.  exception with description "ream.XXXXXXe object <L"= -1 ...) in 02X-byte object <d_stream.XXXXXXthreads.Xt the number of threads.s->close_fd)in ct <am.XXXXXX...  is: ) in etected aptured_stream.XXXXXXd_ == -1e object <-1L"XXXected eption with description "ads.X.XXXXXX exception with description "not  <am.XXXXXXyte object <hich is: xception with description " == -1e number of threads.ream.XXXXXXrgs->close_fd)ubstring of f object <hich is: failed: ring of 02Xs.d: red_stream.XXXXXX of tured_stream.XXXXXX) in ted d_stream.XXXXXXf threads._fd_ == -1ring of Xf string of ads.  ream.XXXXXX is: d >close_fd)/captured_stream.XXXXXXled: _fd_ == -1string of ream.XXXXXX <hdir("ected s.ailed: ubstring of  exception with description "X... X_fd_ == -1ailed: the number of threads.XXXad_fd_ == -1number of threads...) in ..) in /captured_stream.XXXXXXyte object <ad_fd_ == -1 of aptured_stream.XXXXXXer of threads./captured_stream.XXXXXX_fd_ == -1/captured_stream.XXXXXXstring of  ...) in se_fd). not  in am.XXXXXX-1s.(" substring of aptured_stream.XXXXXXct <the number of threads.. eption with description "threads.string of e object < == -1... -1ream.XXXXXXnot eption with description ") failed: tured_stream.XXXXXXd)_fd_ == -1 exception with description "failed: in ++ exception with description "ed: failed:  detect the number of threads.-byte object <d red_stream.XXXXXXred_stream.XXXXXX-1f threads.failed: ected red_stream.XXXXXXads.er of threads.d d: e(number of threads.reads.in not d)>close_fd)number of threads.
s.: ir("ad_fd_ == -1 substring of eption with description "_fd) failed: red_stream.XXXXXX ...) in  <= -1ir("ng of se_fd)..) in ed: s: hdir(" of ected s.ir("cve(rgs->close_fd)failed: ring of xception with description "ted ubstring of  ject < of threads.... s: tured_stream.XXXXXX) failed: iled: ("reads.ect the number of threads.d s.Xaptured_stream.XXXXXXject <X/tmp/captured_stream.XXXXXX>close_fd)ads.hich is: failed: 02Xstream.XXXXXX... ected ..) in L"= -1threads.aptured_stream.XXXXXX(args->close_fd)... XXXXXyte object <red_stream.XXXXXXfailed: t the number of threads. of xception with description "lose(args->close_fd)d_ == -1reads.f threads.not ring of ...  is:  .XXXXXXreads.mber of threads.ads.mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXf threads.xecve(xecve(e(++ exception with description "eption with description "led: 02X substring of reads.("ted = -1ng of 02Xstream.XXXXXX>close_fd)/tmp/captured_stream.XXXXXX.XXXXXXrgs->close_fd)ads./captured_stream.XXXXXXXnot mp/captured_stream.XXXXXXt the number of threads.object <
ed: = -1 ...) in 02Xetect the number of threads.cve(02Xyte object <xception with description "++ exception with description " substring of mber of threads. red_stream.XXXXXXailed: number of threads. of  exception with description "ect the number of threads.se(args->close_fd)se(args->close_fd)se_fd)s.led: etected . : failed:  ...) in = -1threads.reads.hdir("not f threads.hich is: red_stream.XXXXXXd_ == -1-byte object <Xthe number of threads.s.: ++ exception with description ">close_fd)in the number of threads.reads.er of threads.t ads.s. exception with description "string of se(args->close_fd)>close_fd) substring of ads.d: in ected ir("/tmp/captured_stream.XXXXXXnumber of threads.f e(rct <threads.stream.XXXXXX ...) in  == -1not etected object <XXXlose_fd)cve( <cve(t >close_fd) of ct <ir("iled: XXXXXled:  of stream.XXXXXXstream.XXXXXXXXXfailed: in iled: am.XXXXXX= -1am.XXXXXX.XXXXXXhich is: t the number of threads.threads.>close_fd)failed: .XXXXXXt (args->close_fd)mber of threads.s:  ) in the number of threads.object <iled: the number of threads.er of threads.ir("hich is: -byte object <threads.ch is: ir(" of threads.ject <ring of  hich is: -byte object <t the number of threads.= -1 detect the number of threads.object <threads.ected ring of ed: ect the number of threads.t s.e number of threads.02Xxception with description "... .  : L"number of threads._fd_ == -1ted 02Xubstring of -1ch is: ected s->close_fd) .XXXXXXled:  detect the number of threads.Xstring of eption with description " detect the number of threads.rgs->close_fd)-1 ...) in ad_fd_ == -1 of threads._fd_ == -1iled: 02Xted s: Xch is: red_stream.XXXXXX == -1mber of threads.ected t the number of threads.: red_stream.XXXXXX("er of threads. is: ads. is: s.the number of threads._fd)e(X02X detect the number of threads. of threads.ad_fd_ == -1ads.>close_fd)the number of threads.ir("ream.XXXXXX <ng of d)failed: ailed: failed: f  == -1e(_fd_ == -1tured_stream.XXXXXX.XXXXXXlose(args->close_fd) ng of threads.lose_fd)led: rXject <ir("ect the number of threads.object < detect the number of threads.e(: rgs->close_fd)... .XXXXXXlose(args->close_fd)d_stream.XXXXXXected not rgs->close_fd). tured_stream.XXXXXX detect the number of threads.ect the number of threads.ed: -1d ream.XXXXXXred_stream.XXXXXX-byte object <number of threads.e(ted ed:  ...) in mber of threads.... = -1hdir(" ...) in led: ect the number of threads.ed: ream.XXXXXX is: led: X. f L"f ect the number of threads. substring of d_ == -1d L"/captured_stream.XXXXXX02Xeption with description "object <("se(args->close_fd)d mber of threads.stream.XXXXXXs.reads.rgs->close_fd)ads. failed: etected hdir(" L"ed: ream.XXXXXXailed: ads.xecve(XXXXXnumber of threads.ct <number of threads.lose(args->close_fd)ed:  exception with description "hdir("d)(args->close_fd) is: etect the number of threads.xecve( ...) in d -1read_fd_ == -1reads.++ exception with description "string of ++ exception with description "red_stream.XXXXXXeption with description "e number of threads.mp/captured_stream.XXXXXX
reads.t the number of threads.ect the number of threads.etect the number of threads.XXXthreads.XXXXXthreads.eption with description "object <s.rgs->close_fd) failed: lose_fd)tured_stream.XXXXXXnumber of threads. == -1 XXXXXXnumber of threads.lose(args->close_fd)ring of tured_stream.XXXXXX detect the number of threads.s->close_fd)Xrgs->close_fd)hich is: ng of ) failed: = -1 of threads. ...) in d_ == -1object </tmp/captured_stream.XXXXXXf threads.ect the number of threads.lose(args->close_fd)d_ == -1 of = -1r++ exception with description ") failed: in .XXXXXXreads.d_stream.XXXXXXe(failed: cve(er of threads.xception with description ">close_fd)er of threads.lose_fd)02Xe object <failed: e object <tured_stream.XXXXXX... not  ...) in string of stream.XXXXXX= -1(args->close_fd)/tmp/captured_stream.XXXXXX..) in se_fd)XXX(args->close_fd)am.XXXXXX
tured_stream.XXXXXXect the number of threads.ted iled:  of ng of s.-1s.ream.XXXXXXream.XXXXXX detect the number of threads.er of threads. L".XXXXXX..) in rgs->close_fd)stream.XXXXXXt the number of threads.yte object <s.++ exception with description "the number of threads.(args->close_fd).  detect the number of threads.aptured_stream.XXXXXX02Xt s->close_fd)am.XXXXXXmber of threads.XXXXXer of threads.aptured_stream.XXXXXX02Xxception with description "_fd)string of etect the number of threads.) failed: s:  of am.XXXXXX etect the number of threads.ubstring of se(args->close_fd)ng of ... rgs->close_fd)d: s->close_fd)threads.) in e number of threads.er of threads.se(args->close_fd)("ct <ected threads.ng of t the number of threads.Xed: ring of -1ads.s->close_fd)-1se_fd) exception with description " is: Xcve(tured_stream.XXXXXXring of s._fd_ == -1_fd_ == -1robject <ct <lose_fd)
etected 
red_stream.XXXXXX-byte object <led: /captured_stream.XXXXXXred_stream.XXXXXXr: d: xecve(object <the number of threads.d)tured_stream.XXXXXXeption with description "f string of tured_stream.XXXXXX..) in ream.XXXXXX= -1e object <threads.e number of threads.d:  lose(args->close_fd)xecve(/captured_stream.XXXXXXected yte object <ected _fd_ == -1not string of 02Xnumber of threads.d: s: ailed: /tmp/captured_stream.XXXXXXch is: ubstring of ring of e object < exception with description " failed:  substring of object <f threads.ream.XXXXXXt d: ..) in t d)>close_fd)stream.XXXXXX.XXXXXXeption with description "iled: ch is: ++ exception with description ": d ir("e( detect the number of threads.ted  of threads.f Xd_ == -1s->close_fd) <s.read_fd_ == -1 rgs->close_fd)s.("ream.XXXXXXd_stream.XXXXXXnumber of threads.lose(args->close_fd)lose_fd)hich is: in s. ...) in in rthreads.ect the number of threads.s: mber of threads./captured_stream.XXXXXXreads.("xecve( reads...) in rgs->close_fd)f  exception with description "/tmp/captured_stream.XXXXXXt s.f threads.s.02Xject < detect the number of threads...) in rgs->close_fd)etected mp/captured_stream.XXXXXXXXXir("d: object <ubstring of 02Xd hdir(" is: ) in Xread_fd_ == -1 substring of  failed: the number of threads.e number of threads..XXXXXXxception with description ") in /tmp/captured_stream.XXXXXX/captured_stream.XXXXXXs->close_fd)read_fd_ == -1ted L"ads. failed: ted xecve(Xmp/captured_stream.XXXXXXailed: xecve( <Xs.rgs->close_fd)("red_stream.XXXXXXXthreads.reads.ected ed: d)ubstring of ch is: xecve(... f threads.d  detect the number of threads. exception with description "f lose_fd)t ed: /captured_stream.XXXXXX>close_fd)>close_fd)etect the number of threads.(args->close_fd)hdir("reads. substring of  ... d_stream.XXXXXX: lose(args->close_fd) exception with description "/captured_stream.XXXXXXL"d d_stream.XXXXXXrX) failed: stream.XXXXXXe object <ch is: cve(= -1 substring of . d_stream.XXXXXX is: /captured_stream.XXXXXXstring of ads.ng of  ...) in ream.XXXXXXd_stream.XXXXXX == -1: >close_fd)... ted Xer of threads. exception with description "++ exception with description "etected aptured_stream.XXXXXX(args->close_fd)...  exception with description "d: threads.in reads. exception with description "ng of red_stream.XXXXXXream.XXXXXX("lose_fd)ring of ..) in  se_fd)>close_fd)rgs->close_fd)t the number of threads.eption with description "not reads.stream.XXXXXX detect the number of threads.yte object < exception with description "ads. <xception with description "xecve(d_stream.XXXXXX) in : d_ == -1d: cve(d_stream.XXXXXXer of threads. of threads.threads.eption with description " detect the number of threads.etect the number of threads.reads.etect the number of threads.(" is: failed: rgs->close_fd)the number of threads.not e(>close_fd)mber of threads.the number of threads.ect the number of threads._fd_ == -1mber of threads.++ exception with description "f threads. : ng of f threads.t the number of threads.s.xception with description "am.XXXXXXe object <
red_stream.XXXXXXng of xception with description ">close_fd) d:  < substring of hdir("etected ) failed: /tmp/captured_stream.XXXXXXcve(the number of threads. is: : t the number of threads.iled: ted Xreads.XXXXXetect the number of threads.d)se(args->close_fd)t ch is:  substring of ng of red_stream.XXXXXXthe number of threads.lose(args->close_fd)ads.ted ) in number of threads. ...) in = -1ct <etected aptured_stream.XXXXXXubstring of led:  is: : reads.read_fd_ == -1(args->close_fd)ads.in ir("ed: . am.XXXXXX... ads.ir("string of XXetected ad_fd_ == -1X_fd_ == -1mber of threads.ads.read_fd_ == -1xecve(ng of yte object <se_fd) is:  detect the number of threads.d: stream.XXXXXXtured_stream.XXXXXXmber of threads.ring of  failed: reads.d: ads.Xring of ir("ng of d_ == -1am.XXXXXX:  ...) in ailed: ) failed:  of ..) in xecve(d: er of threads.ch is: object <threads..XXXXXXs: not the number of threads.ted ch is: not object <reads.t the number of threads.ject <ted = -1ad_fd_ == -1lose(args->close_fd)d hdir("the number of threads.>close_fd)s.er of threads.
e(X d)mp/captured_stream.XXXXXX...  is: ected  exception with description "(args->close_fd)d_ == -1in rthreads.d _fd)stream.XXXXXXch is: -byte object <("ch is: mp/captured_stream.XXXXXXL"cve(ream.XXXXXX_fd_ == -1/tmp/captured_stream.XXXXXX. f threads.eption with description "ject <the number of threads.s: am.XXXXXXXs.xecve(s->close_fd)++ exception with description " failed:  of (args->close_fd)the number of threads.ad_fd_ == -1d >close_fd)the number of threads.ring of tured_stream.XXXXXX... s: ailed: not 02Xads.reads.iled: cve(number of threads.in tured_stream.XXXXXXected d ch is: : X) failed: lose_fd)_fd) mp/captured_stream.XXXXXX/captured_stream.XXXXXXer of threads.led: e object <ted ring of lose(args->close_fd)s.ads.02X: etected ted etect the number of threads.ected e number of threads.yte object <the number of threads.s.se_fd)ng of .XXXXXXXd: L"_fd_ == -1not read_fd_ == -1reads.s. failed:  substring of XXXXXetect the number of threads.: ng of L"led: e number of threads._fd)++ exception with description "d  exception with description " ...) in ) in ject <Xthe number of threads.++ exception with description "not ..) in xception with description "("stream.XXXXXXtured_stream.XXXXXXmp/captured_stream.XXXXXXect the number of threads.the number of threads.-1L"-1er of threads.mber of threads. substring of = -1s: etect the number of threads.e object <s.threads.e object < ring of 02X.XXXXXXf am.XXXXXXXted aptured_stream.XXXXXX of d_stream.XXXXXX == -1am.XXXXXXected xception with description "e(d)02X <stream.XXXXXXlose(args->close_fd)er of threads.ng of the number of threads.02Xject <xecve(... failed: f XXXs. detect the number of threads.tured_stream.XXXXXXled: Xeption with description "string of ++ exception with description "s->close_fd)s.the number of threads.d: d_ == -1ailed: red_stream.XXXXXXthe number of threads. == -1hdir("ct <XXXXX...  <etect the number of threads.ed:  is: (args->close_fd)-byte object <XXX of threads.mber of threads.Xiled: e number of threads.ad_fd_ == -1lose(args->close_fd)reads.lose_fd)etect the number of threads. < is: cve(iled:  e(ir(" e( failed: not ch is: object <-byte object <iled: iled: xecve(object <ads.string of threads.ads.e object <xecve(02Xreads.L"lose_fd)(args->close_fd)er of threads.Xs.ed: ject <Xrgs->close_fd)f ct <ailed: read_fd_ == -1e number of threads.XXXXX
 failed: /captured_stream.XXXXXXthreads. is: ng of ch is: am.XXXXXX("("ring of ted cve( is: ) failed: object <++ exception with description "etect the number of threads.reads. ... (args->close_fd)-byte object <Xthreads.threads.s->close_fd)(args->close_fd)ct <t the number of threads. substring of ream.XXXXXXse_fd)red_stream.XXXXXXed: mber of threads.string of f Xnot XXXXXXXXXXXse(args->close_fd)ct <se(args->close_fd)ct <Xir("(args->close_fd)the number of threads.: f xecve(mp/captured_stream.XXXXXXxecve(red_stream.XXXXXXthe number of threads.ct <s:  mp/captured_stream.XXXXXX-byte object <number of threads.ream.XXXXXXubstring of s->close_fd)xecve(s. exception with description "not  ) in  -1failed:  hdir("am.XXXXXX ...) in d ted >close_fd) failed: ted ected ailed: xception with description "yte object <object <in X..) in etect the number of threads.s: rXXX_fd_ == -1t  of XXXXX. _fd_ == -1stream.XXXXXXstream.XXXXXX == -1/captured_stream.XXXXXXXXX-byte object <led: am.XXXXXXe object <) failed: etect the number of threads.d_ == -1s.xecve(string of in f . red_stream.XXXXXX xecve(in object <etected se(args->close_fd)Xeption with description "s->close_fd)e(ir("ng of am.XXXXXXs->close_fd)... se(args->close_fd) eption with description "xception with description "ring of ream.XXXXXXthreads.XXXad_fd_ == -102Xt XXXXX) in  detect the number of threads.ir("(args->close_fd)XXXXXs./tmp/captured_stream.XXXXXX. ct <threads.t  detect the number of threads.Xeption with description "e(se_fd)-byte object <ected s->close_fd)tured_stream.XXXXXXs->close_fd)ted >close_fd)cve(threads.iled: ) failed: se(args->close_fd)("xecve(ad_fd_ == -1 ...) in ream.XXXXXXXXXXX t the number of threads.s./captured_stream.XXXXXXaptured_stream.XXXXXXlose_fd)e object < ...) in the number of threads.Xaptured_stream.XXXXXX  etected ... string of hdir("failed: ected _fd)mp/captured_stream.XXXXXX  == -1s: ring of ring of hich is: ... . : rgs->close_fd)yte object <) in mber of threads.e object <am.XXXXXX) failed: e object < < < ads.s.rgs->close_fd)mber of threads.lose(args->close_fd)s: eption with description " is: reads.ring of threads.-1
in in ected se(args->close_fd)-1ed: stream.XXXXXXmp/captured_stream.XXXXXXrtured_stream.XXXXXXL"-byte object <xception with description "f threads.ct <led: f . number of threads.iled: _fd).XXXXXXled:  of Xng of threads.ads.ads._fd_ == -1L"e object <number of threads.++ exception with description "_fd)rgs->close_fd)f threads.ubstring of ++ exception with description "ir("number of threads.mber of threads.e object <ubstring of d)e object <..) in am.XXXXXXubstring of : L" of -byte object <se_fd)number of threads.hich is: etect the number of threads.ng of xecve(xception with description "not   substring of am.XXXXXXread_fd_ == -1se(args->close_fd)rgs->close_fd)t >close_fd)string of am.XXXXXX... s.not .XXXXXXect the number of threads.ject <led: red_stream.XXXXXX of led: ct <aptured_stream.XXXXXXd: f threads._fd)/tmp/captured_stream.XXXXXXthe number of threads.... d_ == -1Xlose_fd) exception with description "d X <stream.XXXXXXeption with description "ubstring of d: etected e object <reads. ...) in /tmp/captured_stream.XXXXXX <ng of er of threads.ed: ++ exception with description "ted xecve(s.threads.mber of threads.ect the number of threads. exception with description "02Xxecve(ected xecve( <..) in _fd_ == -1lose_fd)ream.XXXXXXhich is:  <t the number of threads.threads.d: /tmp/captured_stream.XXXXXXXXXXX("reads.f threads.ng of d e(>close_fd)s: ) failed: Xyte object < == -1threads.f Xled: er of threads.) in ... aptured_stream.XXXXXXected t xception with description " failed: rd_stream.XXXXXX
 exception with description "in e number of threads.ailed: etect the number of threads. . d reads.aptured_stream.XXXXXX/tmp/captured_stream.XXXXXXrobject <) failed: ++ exception with description "se_fd)yte object <mp/captured_stream.XXXXXX("(args->close_fd) detect the number of threads. of ct <ring of ream.XXXXXXL"++ exception with description "d_stream.XXXXXXs.se(args->close_fd)d) t ject <the number of threads.failed: led: ... : -byte object < detect the number of threads.s: t rgs->close_fd)string of >close_fd)d: XXXe(.XXXXXX_fd)d_ == -1. reads.e number of threads.= -1(args->close_fd)L"se(args->close_fd)(args->close_fd)_fd_ == -1object <s. exception with description "L"yte object < of aptured_stream.XXXXXX(args->close_fd)ject <Xject <ch is: X_fd) ...) in string of in threads.ject <.XXXXXXer of threads.rstream.XXXXXXf f threads.red_stream.XXXXXXxception with description "the number of threads.f etect the number of threads.iled: threads.in  ++ exception with description "tured_stream.XXXXXX of d_ == -1 ...) in  failed:  failed: ring of in  exception with description "xception with description "("ad_fd_ == -1ailed: t ailed: object <ring of ++ exception with description "ads.ng of d)in ect the number of threads.) failed: yte object <the number of threads./tmp/captured_stream.XXXXXXetect the number of threads.s.threads. ...) in  : ected ected  failed: ++ exception with description "reads.ct <threads.e(ed: ad_fd_ == -1 e object <lose(args->close_fd)... 
ect the number of threads.reads.s->close_fd)reads._fd)ads. <: s. detect the number of threads.= -1s->close_fd)ring of xecve(Xin d)in etected aptured_stream.XXXXXX <er of threads.e object <t the number of threads.d_ == -1tured_stream.XXXXXX) in  of threads.threads.ted red_stream.XXXXXX) failed: ected rgs->close_fd)_fd)am.XXXXXX: s->close_fd)..) in Xread_fd_ == -1ream.XXXXXXfailed: lose_fd)-1hich is: ected aptured_stream.XXXXXXled: threads.ads.reads.threads.s.ted red_stream.XXXXXX_fd_ == -1threads.se_fd)threads. ...) in  detect the number of threads.s.d_ == -1:  <_fd)reads. of ads. (args->close_fd)am.XXXXXXreads.eption with description "etected  is: ring of ad_fd_ == -1d: 
read_fd_ == -1d_ == -1red_stream.XXXXXX. f threads. is: f threads.etect the number of threads./tmp/captured_stream.XXXXXXthreads. Xrd ..) in ed: e object <XXXXXad_fd_ == -1in d_ == -1stream.XXXXXXread_fd_ == -1reads.Xeption with description "e object <.XXXXXXse(args->close_fd)se_fd)d_ == -1not  ...) in  (args->close_fd)not ch is: lose(args->close_fd)tured_stream.XXXXXXaptured_stream.XXXXXX detect the number of threads.er of threads. exception with description "mp/captured_stream.XXXXXXt the number of threads.>close_fd)..) in ) failed: mber of threads.ring of failed: er of threads. substring of /tmp/captured_stream.XXXXXXtured_stream.XXXXXX of (args->close_fd)d_stream.XXXXXX/captured_stream.XXXXXX) in ir("s.: d tured_stream.XXXXXX("not d_stream.XXXXXXetect the number of threads. failed: object <= -1d) of f threads.etect the number of threads.hich is: xception with description "d_stream.XXXXXXeption with description "hich is: ct <>close_fd)_fd_ == -1/tmp/captured_stream.XXXXXX substring of number of threads.ct <r exception with description ">close_fd) . d_ == -1ream.XXXXXXs.-byte object <e( ...) in stream.XXXXXXlose_fd)(". se(args->close_fd)_fd_ == -1XXXstring of ("..) in se(args->close_fd)d_stream.XXXXXXhich is: d ject <in reads.se_fd)hdir("aptured_stream.XXXXXXXXXXXring of  exception with description "tured_stream.XXXXXX_fd)... ) failed: /captured_stream.XXXXXX.XXXXXX of threads.f threads.se(args->close_fd).XXXXXXreads. e object < exception with description " substring of .XXXXXX) failed: ..) in er of threads.XXXXX) in  substring of   failed: s.ubstring of >close_fd) 
object <rgs->close_fd)L"the number of threads.xecve(ad_fd_ == -1ring of hich is: 02X detect the number of threads.cve(f ("iled:  ...) in _fd_ == -1ed: ted mber of threads.d:  failed: t the number of threads.d 02Xd)mp/captured_stream.XXXXXXhdir("ect the number of threads.>close_fd)(args->close_fd)XXXaptured_stream.XXXXXX) in eption with description "ailed: e(string of iled: etect the number of threads. detect the number of threads.ir("rgs->close_fd)rgs->close_fd) ...) in ed: ch is: aptured_stream.XXXXXX_fd_ == -1ect the number of threads.lose(args->close_fd)se(args->close_fd).XXXXXXubstring of .XXXXXXct <s->close_fd)reads.-byte object <ubstring of in _fd)xecve(XXXXX of threads.ir("d)02Xd)/tmp/captured_stream.XXXXXXted ct <stream.XXXXXXstream.XXXXXXL"cve(XXXf threads.reads.number of threads.. d): red_stream.XXXXXXe(ads.se(args->close_fd)= -1ect the number of threads. ...) in : threads.f threads.not ring of  . mber of threads.er of threads.-1 == -1etected hdir(" not not _fd_ == -1aptured_stream.XXXXXXng of d_stream.XXXXXX/captured_stream.XXXXXXeption with description " == -1aptured_stream.XXXXXXailed: lose_fd)aptured_stream.XXXXXXject </tmp/captured_stream.XXXXXXr is: in rgs->close_fd)threads.xecve(ng of ads.yte object <etect the number of threads.XXXXXch is: lose_fd)xecve(ted ... s.am.XXXXXX_fd)iled: lose(args->close_fd)cve(aptured_stream.XXXXXXailed: d)failed: t the number of threads. is: ect the number of threads.ream.XXXXXX == -1XXXlose_fd)XXXXXyte object <xception with description "s->close_fd): = -1led: s: ad_fd_ == -1 failed: _fd_ == -1(args->close_fd)d_ == -1se_fd)t  ++ exception with description "reads.eption with description "number of threads.ng of am.XXXXXXstring of failed: f threads.object <ubstring of am.XXXXXXXXXe(read_fd_ == -1threads.ads.f xception with description "aptured_stream.XXXXXXs.iled: am.XXXXXX-1ed: iled: ailed: er of threads.t the number of threads.ect the number of threads. of threads. substring of L"ailed: _fd)/tmp/captured_stream.XXXXXXads.ir("r of threads. ...) in  failed: string of 02Xstream.XXXXXX(args->close_fd)/captured_stream.XXXXXX
ir("aptured_stream.XXXXXXin xception with description "L"ed: tured_stream.XXXXXXring of ... hich is:  ...) in lose_fd)-byte object <ct </captured_stream.XXXXXXe number of threads.>close_fd)s.ring of e(f threads.) failed: d)e() failed: 
threads.red_stream.XXXXXXch is: 
. se(args->close_fd)e number of threads.ct <
) failed: tured_stream.XXXXXXd_stream.XXXXXX) failed: . .XXXXXXse_fd)not tured_stream.XXXXXXe(yte object <ubstring of _fd)tured_stream.XXXXXX. etect the number of threads.) in /tmp/captured_stream.XXXXXXd mber of threads.t the number of threads.led:  XXXeption with description " detect the number of threads.d_ == -1 of threads. ...) in string of ed: ect the number of threads.ct < is: stream.XXXXXXream.XXXXXXlose(args->close_fd) e object <t the number of threads._fd)rgs->close_fd)d_ == -1se(args->close_fd) exception with description "ed: eption with description "yte object < of xecve(rlose_fd)ream.XXXXXXs.hich is: ring of d: d . f threads.) failed: s.ch is: ads.ailed: >close_fd)yte object <xecve(s->close_fd)eption with description "/captured_stream.XXXXXXhdir("mber of threads.the number of threads.etect the number of threads.ring of  detect the number of threads.++ exception with description "not  exception with description ".XXXXXX/captured_stream.XXXXXXiled: se_fd)am.XXXXXXe(not s.ir(") in ed: lose_fd)etected  ++ exception with description ") failed: ... XXX X: stream.XXXXXXted /tmp/captured_stream.XXXXXXd_stream.XXXXXXfailed: d:  <d ring of f threads.ring of ng of in f ected ect the number of threads.d_stream.XXXXXXubstring of e object <s: 
ads.hdir("object <>close_fd)s->close_fd)ng of t the number of threads.-1 xecve(ream.XXXXXXyte object <red_stream.XXXXXXiled: ir("-1yte object < ream.XXXXXX02Xeption with description "e(hich is: ted  of threads.mp/captured_stream.XXXXXX failed: ream.XXXXXXse_fd)not /captured_stream.XXXXXXthreads.d_ == -1eption with description "s.iled: hich is: ject <d)ads.xecve(ads.e( <hich is: ed: -byte object <threads. == -1 <-1d: >close_fd)d)t threads.etect the number of threads.ected eption with description "t the number of threads./captured_stream.XXXXXX("s..XXXXXXetect the number of threads./captured_stream.XXXXXX++ exception with description "not = -1ads.ring of  is: ..) in ++ exception with description "red_stream.XXXXXX ...) in xception with description "e( failed: f read_fd_ == -1hich is: aptured_stream.XXXXXXfailed: ted red_stream.XXXXXX-1failed: ad_fd_ == -1failed: r) in Xmp/captured_stream.XXXXXXd_ == -1reads.d d ) failed: se(args->close_fd)object <hich is:  == -1iled: f e(tured_stream.XXXXXX02Xf threads.XXX++ exception with description "xecve(lose_fd)= -1Xobject <ch is: lose_fd)("_fd) of threads.tured_stream.XXXXXX= -1s:  rgs->close_fd)) failed: led: ect the number of threads.d rgs->close_fd)++ exception with description "se_fd)mp/captured_stream.XXXXXX is: e(se_fd) reads.e(ng of se_fd) of L" < exception with description ".XXXXXX <ted ..) in xecve(ad_fd_ == -1ected s. <_fd_ == -1ir("("etected ubstring of hich is: xception with description "_fd_ == -1 failed:  < detect the number of threads.ream.XXXXXXring of ubstring of s:  failed: ) in stream.XXXXXX . Xch is:  of in ected ch is:  ...) in -byte object <e object <ch is: d)ring of failed: ect the number of threads.d not mp/captured_stream.XXXXXXng of (args->close_fd)rgs->close_fd)ir("stream.XXXXXX) failed: -1 of threads.iled: ted s: d s.iled: >close_fd)cve(lose(args->close_fd)s.XXXred_stream.XXXXXXiled: = -1 iled: stream.XXXXXX_fd_ == -1t the number of threads.yte object < = -1++ exception with description "etect the number of threads.etected er of threads.etect the number of threads.mber of threads.reads.) in ++ exception with description "string of e number of threads.e(d)ect the number of threads.L"er of threads.string of 
se_fd): ..) in xception with description "stream.XXXXXXL"-1d_ == -1etect the number of threads.s->close_fd)read_fd_ == -1ed: 
string of read_fd_ == -1ailed: in ailed: e number of threads.  < ...) in s->close_fd) ...) in  == -1.XXXXXX= -1in XXXected _fd)L"red_stream.XXXXXX of threads.. -1 is: ted t the number of threads.aptured_stream.XXXXXX == -1 <xecve(: ) in d_ == -1stream.XXXXXXect the number of threads.led: ring of  failed: reads.threads.s. of threads...) in am.XXXXXX is: 
ir("xception with description "
Xs: f number of threads.ads.XXXXXXXXt the number of threads.aptured_stream.XXXXXXthreads.failed: failed: rthreads. ng of ct <ted ted  is: ad_fd_ == -1d)e number of threads.-byte object <ir("stream.XXXXXX == -1red_stream.XXXXXXobject <) in e(e(led: ect the number of threads.ch is: ir("s:  of threads.etected not -1am.XXXXXX < == -1d: ... -byte object <s.ads.= -1s.f  == -1ads.rgs->close_fd)("threads.number of threads.d_ == -1 _fd_ == -1  <s.XXXred_stream.XXXXXX..) in XXXXX of threads. t mber of threads.e(threads.e object <f number of threads. ...) in  ...) in ("led:  of threads. d_stream.XXXXXXt threads.se_fd)-102Xfailed: ch is: .XXXXXXin hich is: L"
ad_fd_ == -1tured_stream.XXXXXX <XXX(": xception with description "failed: e object <s: d_ == -1etect the number of threads.hich is: ++ exception with description "er of threads. ...) in ) failed: the number of threads.rhdir("d: ted failed: XXXs->close_fd)se_fd) == -1/tmp/captured_stream.XXXXXX++ exception with description "er of threads.lose(args->close_fd)(args->close_fd)s. detect the number of threads. Xread_fd_ == -1e object <) failed: f in in L" of threads.-byte object < ...) in >close_fd)ject <d:  is: yte object <er of threads.ubstring of  of ubstring of : ("threads.... f . failed: am.XXXXXXhdir("etected not ject <ct <xception with description "-1++ exception with description "red_stream.XXXXXXject <xception with description "ring of eption with description "Xs->close_fd)ch is: Xads.mber of threads.) failed: ads.s: XXXng of d) exception with description "d_ == -1ream.XXXXXXhdir("lose_fd)_fd_ == -1-1... X <the number of threads.tured_stream.XXXXXXam.XXXXXXs->close_fd) detect the number of threads._fd_ == -1xception with description "in d_stream.XXXXXX detect the number of threads.Xs->close_fd)XXXam.XXXXXX-1t Xrgs->close_fd)lose_fd)>close_fd)s.etect the number of threads.ected se_fd)s: ..) in hdir(" == -1 == -1xception with description "f threads.aptured_stream.XXXXXXreads.etected reads.ailed: X of reads.= -1read_fd_ == -1) in = -1reads.iled: string of  is: d_stream.XXXXXX ...) in ject <mber of threads.failed: lose(args->close_fd)ed: etect the number of threads.rect the number of threads.mp/captured_stream.XXXXXXs.ad_fd_ == -1am.XXXXXXng of xception with description " detect the number of threads.failed: e object </captured_stream.XXXXXXf threads. ring of  ("object <
/tmp/captured_stream.XXXXXX.XXXXXX of ject <threads.mp/captured_stream.XXXXXXir("am.XXXXXXailed: se_fd)ected -1.XXXXXXubstring of se(args->close_fd)eption with description "ream.XXXXXXthe number of threads.t the number of threads.iled: yte object <object <ad_fd_ == -1tured_stream.XXXXXX_fd_ == -1= -1ads.s.ect the number of threads._fd_ == -1ir("s.d)stream.XXXXXX>close_fd)..) in ad_fd_ == -1 is: -byte object <) failed: 
s.ected iled:  == -1 d)) failed: f hich is:  ir("object <ct <XXring of s: number of threads.yte object <t the number of threads.object <ted ch is: ir("er of threads.f threads.threads.xecve(reads.(args->close_fd)number of threads.... threads.) in _fd_ == -1hich is: tured_stream.XXXXXXthreads._fd)ch is: ring of XXXXXream.XXXXXXted red_stream.XXXXXX is:  number of threads. of threads.eption with description "t e(not xception with description "yte object <d: iled: object <= -1 exception with description "led: ir("threads.XXXXXads.= -1  of threads.red_stream.XXXXXXetected  substring of  exception with description "lose_fd)_fd)f  exception with description "... ads.d_stream.XXXXXXstring of failed: ("d) detect the number of threads.d: hich is:  hich is: d)d: iled:  ject < XXXhich is: etected string of ads.etect the number of threads.ect the number of threads..XXXXXXe number of threads.ream.XXXXXX is: tured_stream.XXXXXX_fd). r.XXXXXX of ring of d_stream.XXXXXXe object <rgs->close_fd) XXXXXobject <iled: ed: ) in ad_fd_ == -1the number of threads.read_fd_ == -1_fd_ == -1reads.e object </captured_stream.XXXXXXread_fd_ == -1ring of hdir(">close_fd)d  is:   substring of . read_fd_ == -1-byte object <(" == -1... ct <ir("e(-1(args->close_fd)= -1s: ads.

e( <d ng of ch is: ) in lose(args->close_fd)mp/captured_stream.XXXXXXe() failed: 
cve(tured_stream.XXXXXXs->close_fd)er of threads.e object <++ exception with description "ads.lose_fd)string of am.XXXXXX read_fd_ == -1XXXXX <(args->close_fd) ubstring of d)hdir("ed: am.XXXXXXailed: in t = -1 substring of f threads.se_fd)ct <threads.ed:  == -1) in d_stream.XXXXXXred_stream.XXXXXXads.d reads.read_fd_ == -1not s: cve(e number of threads.f  is: led: /tmp/captured_stream.XXXXXXng of am.XXXXXX>close_fd)/captured_stream.XXXXXXream.XXXXXXse_fd)t the number of threads.ch is: ads.XXXXXng of etect the number of threads.ch is: d)XXXXXread_fd_ == -1ring of e number of threads.ng of  failed: d_stream.XXXXXX substring of hich is: /captured_stream.XXXXXX++ exception with description " exception with description "_fd_ == -1 f not hdir("ed: >close_fd)cve(Xlose_fd) ...) in mp/captured_stream.XXXXXXject <string of  == -1led: ed: (args->close_fd)..) in cve(etected   cve(t d_stream.XXXXXXs: f reads.mp/captured_stream.XXXXXXd)string of ct <in  ubstring of  mp/captured_stream.XXXXXXt the number of threads.-1led: threads.02Xxception with description "threads.d_stream.XXXXXXng of hich is: s->close_fd)XXXXXthreads.02X is: yte object <L"ect the number of threads..XXXXXXcve(reads.ir("L"cve(ed:  not ad_fd_ == -1 of mp/captured_stream.XXXXXX.XXXXXXads.ch is: se(args->close_fd)lose(args->close_fd)hdir("ed: 02Xer of threads.ream.XXXXXXhdir("xception with description "threads.threads.d:  tured_stream.XXXXXX == -1se_fd) /captured_stream.XXXXXXlose_fd)ect the number of threads. detect the number of threads./captured_stream.XXXXXX++ exception with description "the number of threads.ted /captured_stream.XXXXXXthe number of threads.e object <er of threads.failed: ring of in er of threads.etected _fd)etect the number of threads.d se_fd) XL"etect the number of threads._fd_ == -1.XXXXXX failed: er of threads.d: ted s. of threads.) failed: L"Xled: mp/captured_stream.XXXXXXnot d_stream.XXXXXXs.ect the number of threads.yte object <++ exception with description ") failed: lose_fd)hich is: se(args->close_fd)t the number of threads.in not >close_fd)hdir("/captured_stream.XXXXXXin hdir("s->close_fd)mp/captured_stream.XXXXXXetect the number of threads...) in ad_fd_ == -1 <t d_ == -1ed: failed: threads.s.iled: e number of threads.d)red_stream.XXXXXXse_fd)d)-1X/tmp/captured_stream.XXXXXXf threads.iled:  t ring of  ring of ng of . ream.XXXXXXt hich is: -1XXX_fd)ch is: .XXXXXX XXXXX++ exception with description "e(02Xject <the number of threads.read_fd_ == -1se(args->close_fd)lose(args->close_fd)d_stream.XXXXXXread_fd_ == -1 failed: -1t the number of threads.ads.d:  substring of mp/captured_stream.XXXXXXXXXeption with description "number of threads.) in ailed: xception with description "_fd_ == -1string of d_ == -1in etected 02Xyte object <mber of threads.++ exception with description "s: ads.ted L"L"lose(args->close_fd) failed:  ...) in red_stream.XXXXXXring of cve(..) in ect the number of threads.ring of  = -1the number of threads.02Xring of >close_fd)) in tured_stream.XXXXXXrgs->close_fd). lose(args->close_fd)d: stream.XXXXXXread_fd_ == -1d:  of (args->close_fd)_fd)led: e(s: Xreads. object <f threads.am.XXXXXX... ... reads.-1lose(args->close_fd)ch is: e number of threads./captured_stream.XXXXXXream.XXXXXX_fd_ == -1 exception with description "read_fd_ == -1 <...  substring of not -byte object <: yte object <etect the number of threads. failed: .XXXXXXthreads.d L" of threads.ads.lose(args->close_fd) exception with description "reads.++ exception with description "reads.s. of threads.lose(args->close_fd)am.XXXXXXd_stream.XXXXXX("ect the number of threads.++ exception with description "ct < == -1("02Xd_ == -1 detect the number of threads.ad_fd_ == -1ubstring of ..) in threads.ected the number of threads.se(args->close_fd)number of threads.ads. of threads.d_stream.XXXXXXled: etected mber of threads.rgs->close_fd)hdir("stream.XXXXXXXXXXXreads.d_ == -1 exception with description "er of threads. exception with description "ads.cve(failed:  == -1..) in d)mber of threads. == -1 <d L" of threads.d se(args->close_fd)-1/tmp/captured_stream.XXXXXX_fd_ == -1hich is: ("02Xnot the number of threads.etect the number of threads.d object <led: ) in t . ad_fd_ == -1e number of threads.ect the number of threads.(" <lose(args->close_fd)ads.the number of threads.d: XXXXXd d e(read_fd_ == -1("ed: in  failed: led: ubstring of ect the number of threads. hich is: ) failed: se_fd)ream.XXXXXXt the number of threads.XXXXXmber of threads.eption with description "d: . s.) failed: aptured_stream.XXXXXX.XXXXXXnumber of threads.se_fd)d)ring of ... xecve( of d_ == -1f  of threads.reads.in d_stream.XXXXXXyte object < of threads.
X etected :  < is:  == -1ream.XXXXXXs->close_fd)led: rf ads.xception with description " failed: rd: Xer of threads.xecve(02Xobject <se(args->close_fd)lose(args->close_fd)d  ...) in X..) in ject <number of threads.f ailed: reads..XXXXXXad_fd_ == -1e number of threads.mp/captured_stream.XXXXXXd)hdir("er of threads.d: ect the number of threads.cve(e number of threads.++ exception with description "xception with description "object < is: ected reads.ch is: d: . threads..XXXXXXng of /tmp/captured_stream.XXXXXXd)Xthreads.d_stream.XXXXXXse_fd) substring of /captured_stream.XXXXXXyte object <: threads.ject <d:  == -1.XXXXXXnumber of threads.: /captured_stream.XXXXXXnumber of threads.: etected failed: threads.hich is: : ubstring of s->close_fd)yte object <. not object < == -1s->close_fd)xecve(ng of s.e number of threads.mp/captured_stream.XXXXXXred_stream.XXXXXXreads.mp/captured_stream.XXXXXXrstream.XXXXXX= -1 threads.lose_fd)xception with description "xception with description ".XXXXXXd_stream.XXXXXXobject < e number of threads.string of -1(args->close_fd)iled:  ...) in ad_fd_ == -1... f threads. detect the number of threads.lose_fd)d_stream.XXXXXXt the number of threads.02Xled: . ir(".XXXXXX of threads.aptured_stream.XXXXXXcve(ject <(args->close_fd)object < of threads.(args->close_fd)ed: ir(">close_fd)in eption with description "read_fd_ == -1ng of (args->close_fd)stream.XXXXXXam.XXXXXXred_stream.XXXXXX-1lose(args->close_fd) detect the number of threads.ng of  == -102Xred_stream.XXXXXXected s: red_stream.XXXXXX == -1ng of . ch is: object <etected tured_stream.XXXXXXe(. xception with description "-1s.eption with description "e(e object <XXXstream.XXXXXXd_ == -1= -1d_ == -1 ...) in ..) in Xlose(args->close_fd)/tmp/captured_stream.XXXXXXlose(args->close_fd) <ads.Xd)s. == -1xception with description "er of threads.ng of Xted 02X) failed:  >close_fd) <mber of threads. of threads.etected object <ed: threads.Xse(args->close_fd)ailed: L"ads...) in f  is: (">close_fd)ct <etect the number of threads.rgs->close_fd) < exception with description "02XXt the number of threads.mber of threads.number of threads.++ exception with description "ring of mber of threads.ected s->close_fd)object <hdir("ject <f string of ... ailed: . ected Xir("ad_fd_ == -1(args->close_fd)er of threads.red_stream.XXXXXXread_fd_ == -1ed: etected mp/captured_stream.XXXXXXd etected 02Xd: f tured_stream.XXXXXXin tured_stream.XXXXXXected ads.s.xecve(e object <02X is: : se_fd)mp/captured_stream.XXXXXXam.XXXXXXread_fd_ == -1-byte object <se_fd)ng of hdir("ailed:  lose(args->close_fd)/captured_stream.XXXXXXread_fd_ == -1d_stream.XXXXXXe object <ads._fd_ == -1object <(args->close_fd): e object <>close_fd) f threads. failed:  <e(threads.ream.XXXXXXyte object <t eption with description "ct <se_fd)ted e(threads. substring of -byte object <threads.ect the number of threads.d_stream.XXXXXXng of = -1e number of threads.cve(e number of threads.reads./tmp/captured_stream.XXXXXXetected ect the number of threads. of xception with description "se(args->close_fd) exception with description "stream.XXXXXXream.XXXXXX.XXXXXXmp/captured_stream.XXXXXXed: ailed: 
rgs->close_fd) substring of lose(args->close_fd)stream.XXXXXXt the number of threads.mber of threads.ected d_ == -1reads.ads.ch is: etect the number of threads.in ... cve(ad_fd_ == -102X of threads.rgs->close_fd)  substring of e object <... ect the number of threads.read_fd_ == -1  of  d se(args->close_fd)ream.XXXXXXads.e object <) failed: not eption with description "ng of ads.s.read_fd_ == -1t ubstring of _fd_ == -1ject <>close_fd)failed: -1 ...) in ected rgs->close_fd)stream.XXXXXXer of threads.etect the number of threads.reads.XXXXXad_fd_ == -1e number of threads./tmp/captured_stream.XXXXXXream.XXXXXX= -1s->close_fd)lose_fd)threads.rgs->close_fd)ir(" ++ exception with description "++ exception with description "ubstring of xecve(t 
_fd)... red_stream.XXXXXXthe number of threads.eption with description "lose(args->close_fd). ch is: e number of threads. failed: mber of threads.e number of threads.yte object <aptured_stream.XXXXXXXXX++ exception with description "f lose(args->close_fd)threads./captured_stream.XXXXXXd_ == -1etect the number of threads.mp/captured_stream.XXXXXX number of threads.threads.ring of se(args->close_fd)s->close_fd)e(rlose(args->close_fd) ailed: Xe number of threads.f led: read_fd_ == -1reads.etect the number of threads.d_ == -1se_fd)xception with description "not xception with description " >close_fd)(". not string of eption with description "s:  failed: 
++ exception with description "XXX ...) in  == -1 ...) in t 
in /tmp/captured_stream.XXXXXXt the number of threads.etected object <xception with description "
ect the number of threads.(args->close_fd)lose(args->close_fd)s.er of threads.se(args->close_fd) hdir("("lose(args->close_fd)number of threads.ads. of threads.: threads.ream.XXXXXXfailed: am.XXXXXXs->close_fd)object <tured_stream.XXXXXXse_fd) ...) in rgs->close_fd)d: lose_fd)am.XXXXXX/captured_stream.XXXXXX substring of ng of (args->close_fd)f threads.ir("e object </captured_stream.XXXXXX/tmp/captured_stream.XXXXXXreads.ct <ected number of threads.d: threads.aptured_stream.XXXXXX) failed: mber of threads. detect the number of threads.t string of ) in f threads.XXXXXhich is:  read_fd_ == -1se_fd)not ected : ads.ect the number of threads.ir("("hich is: f threads./tmp/captured_stream.XXXXXXct <ream.XXXXXXmber of threads. ... L"lose(args->close_fd)ct <cve(s->close_fd)etected f threads.threads.s.XXXd_ == -1tured_stream.XXXXXXthreads.ring of mber of threads.aptured_stream.XXXXXXin yte object < ads.se(args->close_fd)d:  of ... e object <ng of s: >close_fd)hdir("failed: _fd_ == -1e object <ream.XXXXXXetected reads.etect the number of threads.the number of threads.string of : ads.ted .  of threads.the number of threads. = -1 substring of ct <_fd) is: /captured_stream.XXXXXXd)Xir("("
 == -1reads.... reads.ject <number of threads.e number of threads.XXXXXe(ads. ...) in etected 02Xer of threads.X("number of threads.am.XXXXXXch is: 02Xring of  of d 
ected threads.ct <d: ) failed: string of lose_fd)etected er of threads.ubstring of :  detect the number of threads.cve( Xthreads.led: ng of ct < ...) in XXX... cve() failed: 02Xse(args->close_fd)tured_stream.XXXXXXnot ed: d_ == -1d: xecve(led:  f f s: : t  substring of hich is:  of aptured_stream.XXXXXX number of threads.: = -1ected Xfailed: ch is: reads.ct < e(stream.XXXXXXetect the number of threads.string of ct <ream.XXXXXXject <number of threads.yte object <failed: : -byte object <tured_stream.XXXXXXstream.XXXXXXobject <threads.threads.stream.XXXXXX of threads..XXXXXXng of threads.cve(se(args->close_fd)) failed:  failed: ected t ailed: Xlose(args->close_fd)se(args->close_fd)s: s:  of threads..XXXXXXf iled: mber of threads.yte object <... XXXXX= -1/tmp/captured_stream.XXXXXXd_stream.XXXXXX/captured_stream.XXXXXXd) exception with description "XXX failed: ("t the number of threads. red_stream.XXXXXXect the number of threads.ct <-byte object <etected  substring of se(args->close_fd)... _fd)cve( of threads.ad_fd_ == -1ream.XXXXXXled:  of threads.se_fd)= -1XXX(args->close_fd)ads.d_stream.XXXXXXe(threads.(args->close_fd)hich is: read_fd_ == -1f yte object <ir("hdir("led:  not 
ct <not ream.XXXXXX < of  failed: d ir("ads.reads.ed: ) in ir("reads.ng of d)_fd)Xs.s.lose(args->close_fd)reads.
failed: read_fd_ == -1reads.e number of threads.t Xcve(: ailed: the number of threads.string of se(args->close_fd)cve(ct <_fd_ == -1ubstring of (args->close_fd)/captured_stream.XXXXXXthreads. == -1= -1ected red_stream.XXXXXXch is: ch is: e number of threads./captured_stream.XXXXXXr.  ++ exception with description "yte object <led: f threads.s./captured_stream.XXXXXXread_fd_ == -1er of threads.s->close_fd)lose(args->close_fd)L"tured_stream.XXXXXXnumber of threads.>close_fd)rgs->close_fd) is: ed: ream.XXXXXXL"ad_fd_ == -1read_fd_ == -1/captured_stream.XXXXXXse(args->close_fd) exception with description " == -1... ads.= -1s.am.XXXXXXf lose_fd)
xception with description "se(args->close_fd)ng of  detect the number of threads.ted reads.aptured_stream.XXXXXX_fd).XXXXXXf cve(object < etect the number of threads._fd_ == -1 detect the number of threads.f threads.xecve(f threads.d lose_fd)ad_fd_ == -1the number of threads.etect the number of threads. exception with description "s:  of xecve(reads. ed: ++ exception with description "d_ == -1am.XXXXXX-1= -1se_fd) s. = -1cve(cve(d)ads.f  substring of ring of read_fd_ == -1-1ng of t the number of threads.etected stream.XXXXXX ir("not ) in  == -1lose_fd)ad_fd_ == -1not reads.ch is: not ed: t s.XXXXXetect the number of threads._fd) detect the number of threads.ect the number of threads.d not mp/captured_stream.XXXXXXads.xecve( == -1 failed: -byte object <cve(led: ) failed:  of threads.ads.aptured_stream.XXXXXXch is: yte object < of threads. ...) in er of threads.read_fd_ == -1reads.) failed:  detect the number of threads.s.led: ir("ed: ..) in hdir("ir("= -102Xect the number of threads.ed: etect the number of threads. ch is: object <ch is: ) failed: 02X == -1t ected ... se_fd)d)ream.XXXXXXe(am.XXXXXX is: number of threads.ect the number of threads.mber of threads.ed: threads.e object <d)f etected mber of threads.ted am.XXXXXXthreads. failed: L"reads.XXXer of threads.eption with description "red_stream.XXXXXXled: X exception with description "ted ected t string of  <= -1_fd_ == -1_fd_ == -1the number of threads.Xlose_fd)red_stream.XXXXXXed: failed: ++ exception with description "xception with description "hich is: r) in d xecve(d_stream.XXXXXXlose_fd) ...) in L"read_fd_ == -1 rgs->close_fd)tured_stream.XXXXXXaptured_stream.XXXXXX lose(args->close_fd). _fd_ == -1mber of threads.the number of threads.-1f  ect the number of threads...) in ch is: am.XXXXXXred_stream.XXXXXX_fd_ == -1) failed: d_ == -1 of threads.ng of 
hich is:  not : stream.XXXXXXring of s->close_fd)xecve( substring of  ...) in ected ch is: f ch is: cve(stream.XXXXXX++ exception with description "the number of threads.ailed: stream.XXXXXXted 
mber of threads.d: yte object <threads.XXXXXmber of threads.hdir("... stream.XXXXXXtured_stream.XXXXXX == -1("ream.XXXXXXnumber of threads.ch is: ir("etected ct <read_fd_ == -1L"aptured_stream.XXXXXX/captured_stream.XXXXXX: ct <d s.... 02X_fd)eption with description "ted er of threads.-byte object <Xect the number of threads./tmp/captured_stream.XXXXXXhdir("number of threads. is: xecve(number of threads.tured_stream.XXXXXXir("lose_fd)yte object <_fd)ject <ct <ad_fd_ == -1s: threads.s: X <led: d . etected X_fd_ == -1s.hdir("
) in s: ir("ected se_fd)) failed: d: ads.t the number of threads.f ++ exception with description "iled: : ubstring of Xf threads. ...) in mber of threads.s.rgs->close_fd)hich is:  is: Xreads.lose(args->close_fd)xception with description "ad_fd_ == -1 detect the number of threads. ) in string of yte object <) failed: d: eption with description "ads.cve(led: s:  ++ exception with description "number of threads.ted number of threads.t the number of threads.X of  == -1the number of threads./captured_stream.XXXXXXs.lose(args->close_fd)hdir("("-byte object < ...) in etect the number of threads.hdir("t ed:  _fd_ == -1tured_stream.XXXXXXs.d_stream.XXXXXX is: reads. <threads.failed: ch is: d_ == -1) in read_fd_ == -1XXXXXrgs->close_fd)t s->close_fd)hdir("= -1led:  is: ) failed: cve(/captured_stream.XXXXXX XXXe object <ads.ream.XXXXXXL"xecve(d)cve(se_fd)e object <xecve(
ad_fd_ == -1..) in ads.yte object <d  substring of f threads.am.XXXXXX>close_fd)e(X: : -byte object <t the number of threads. failed: ) failed:  .XXXXXX-byte object <) failed: mp/captured_stream.XXXXXXiled: d led: ed: /tmp/captured_stream.XXXXXX_fd_ == -1 detect the number of threads.ted aptured_stream.XXXXXXed: mber of threads.iled:  of threads.++ exception with description "-byte object <t  tured_stream.XXXXXXred_stream.XXXXXXads.etect the number of threads.aptured_stream.XXXXXXd_stream.XXXXXX>close_fd)rs.red_stream.XXXXXXthreads.rgs->close_fd)ected  ed: d ram.XXXXXXmber of threads.  of etect the number of threads.XXXs: e( exception with description "reads.f threads.ch is: reads.etected L"ream.XXXXXXthreads.ted /captured_stream.XXXXXX..) in  of threads.se(args->close_fd) of threads.rnot L" detect the number of threads.t etected Xring of aptured_stream.XXXXXXhich is: xception with description "s.se_fd)ubstring of ads.) failed: not (args->close_fd)ed: rs: s.("threads._fd)>close_fd)lose(args->close_fd)not ir("stream.XXXXXX-byte object <(args->close_fd)etected ad_fd_ == -1ads.L":  <ir("e() in 02X detect the number of threads.ted ream.XXXXXXf threads.ream.XXXXXX. s. == -1-1xception with description " ...) in ad_fd_ == -1/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXetected d_ == -1reads. of threads.ct <>close_fd)s->close_fd)in ng of d)/tmp/captured_stream.XXXXXXam.XXXXXX(args->close_fd)_fd_ == -1reads.ch is: = -1read_fd_ == -1..) in eption with description "etect the number of threads.ad_fd_ == -1ected XXXailed: . ads.am.XXXXXX("ch is: e object <threads.>close_fd)threads. detect the number of threads.ng of L"yte object <tured_stream.XXXXXXnot XXX substring of iled: aptured_stream.XXXXXXt . f 02X_fd_ == -1-1ected  ...) in ir("reads.red_stream.XXXXXXream.XXXXXX is:  ...) in threads.se(args->close_fd)not e object <s.(".XXXXXXrgs->close_fd)(args->close_fd)ted s: 02Xad_fd_ == -1s: /tmp/captured_stream.XXXXXXin in e object <read_fd_ == -1>close_fd)reads.) failed: mp/captured_stream.XXXXXX of  ailed: ted 02Xnumber of threads.etected  e object <f threads.ads. se_fd). mber of threads.ubstring of ir("cve( detect the number of threads.ect the number of threads.failed: ailed: eption with description "t cve( failed: XXXiled: /tmp/captured_stream.XXXXXXe number of threads./captured_stream.XXXXXX-1e(hich is: : mber of threads. detect the number of threads.X02Xream.XXXXXXnot d)ch is: 
 of reads.led: Xhdir(" 02Xream.XXXXXX_fd)ubstring of tured_stream.XXXXXX failed: threads.reads.t the number of threads. exception with description "-byte object <s.ads.ad_fd_ == -1_fd_ == -1 of ubstring of se_fd)Xe number of threads.mp/captured_stream.XXXXXXect the number of threads.ads.d_ == -1am.XXXXXX
yte object <
 of in 
d cve(ed:  <etected  is: se(args->close_fd)mber of threads.ch is: 
tured_stream.XXXXXX/captured_stream.XXXXXXject </captured_stream.XXXXXXfailed: s->close_fd)hdir("number of threads.e object <object <iled: se_fd) cve(ch is: ) in  exception with description ". f threads.e number of threads.rgs->close_fd)XXXXXads.object <s.ads. failed:  == -1s->close_fd)threads.lose(args->close_fd)the number of threads.etect the number of threads.ed:  <rtured_stream.XXXXXXam.XXXXXXled:  substring of  d)reads.ted f threads.s: 02Xng of f threads.d_stream.XXXXXX
mp/captured_stream.XXXXXX... d_ == -1failed: e object <ubstring of lose_fd)ring of ailed: tured_stream.XXXXXXse(args->close_fd)("XXXXXs.lose_fd)ads./captured_stream.XXXXXXubstring of  ...) in reads. s: t the number of threads.ad_fd_ == -1d_ == -1d t the number of threads.ch is: t the number of threads.etected ed: xecve(threads. == -1eption with description ".XXXXXXer of threads.e object <not s->close_fd): the number of threads./tmp/captured_stream.XXXXXX of object < ...) in reads.reads.s->close_fd)s.object <XXXed:  substring of /captured_stream.XXXXXX/captured_stream.XXXXXXubstring of ads.ect the number of threads.s.iled: tured_stream.XXXXXX exception with description ": 
mp/captured_stream.XXXXXXaptured_stream.XXXXXXs.xception with description "d . -byte object <ject <>close_fd)ads.f threads.ject <d: se_fd)d_ == -1se_fd) of xception with description "ads.lose(args->close_fd) <cve(cve(object <ed: d string of stream.XXXXXXnot = -1ed: 
lose(args->close_fd) detect the number of threads./captured_stream.XXXXXXtured_stream.XXXXXXubstring of aptured_stream.XXXXXXlose(args->close_fd)xception with description "ng of the number of threads.hich is: . (args->close_fd) exception with description " == -1d_ == -1ted f the number of threads.Xreads. is: the number of threads.(") failed: -byte object <rgs->close_fd)se_fd)>close_fd)..) in se_fd)xecve(ted failed: threads.led: s->close_fd)yte object <am.XXXXXX ...) in led: cve( is: -102Xailed: number of threads. ...) in reads.cve(r. 
 of d e object <hdir(". etected mber of threads.... ted r(args->close_fd)string of f ads.ted d ch is: e object < == -1d e object <xception with description "ted  ...) in lose_fd) <the number of threads.ted 
("the number of threads.rse(args->close_fd)lose(args->close_fd)etect the number of threads.reads.stream.XXXXXXxception with description "red_stream.XXXXXXng of  exception with description "se_fd)hdir("not X-byte object <threads.etect the number of threads.) failed: etected ... d: ir("ir("ir(". am.XXXXXXch is: _fd)>close_fd)++ exception with description "reads.f threads.in se_fd)02Xhdir("not t the number of threads.not se(args->close_fd)02X= -1t the number of threads.se(args->close_fd)led: er of threads.eption with description "X++ exception with description "ailed: /captured_stream.XXXXXXs: d_stream.XXXXXXir("ed: xception with description "er of threads.e object <_fd_ == -1 detect the number of threads.etected  of object <>close_fd)(args->close_fd) <..) in  etected L"stream.XXXXXXnumber of threads.cve(xecve(red_stream.XXXXXX == -1L"reads.read_fd_ == -1L"t the number of threads.xecve(led: cve(ng of ads.hdir("ct <e(red_stream.XXXXXXe(am.XXXXXXd rreads.ir("("ct <e object <ad_fd_ == -1(args->close_fd) detect the number of threads.d t the number of threads._fd_ == -1ailed: rthreads.failed: the number of threads.s: xception with description "read_fd_ == -1XXXXXXXX
mber of threads.... f threads.hich is: d: aptured_stream.XXXXXXse(args->close_fd)ir("Xred_stream.XXXXXXected reads. exception with description "failed: (args->close_fd)... XXXXX == -1 stream.XXXXXXse(args->close_fd) _fd_ == -1the number of threads.mber of threads.d: hdir("se(args->close_fd)string of se(args->close_fd) of e number of threads.02X == -1ted s.cve(not ir("string of s: d_stream.XXXXXXnumber of threads.ted t ) in  <.XXXXXXer of threads.ject <ng of /captured_stream.XXXXXXream.XXXXXXe number of threads.yte object <red_stream.XXXXXX-byte object <ted 02X>close_fd)aptured_stream.XXXXXX ...) in (args->close_fd)e object <read_fd_ == -1>close_fd)ted ) in  exception with description "etected iled:  detect the number of threads..XXXXXXse_fd)= -1s.threads. exception with description "lose(args->close_fd)) failed: -byte object <led: am.XXXXXXad_fd_ == -1number of threads.("(args->close_fd)/captured_stream.XXXXXX: ... f threads.etected = -1ect the number of threads.e(d xecve(threads.s: XXXX  of threads.t ect the number of threads. of threads. of read_fd_ == -1. failed: cve(d)object <se_fd)yte object <aptured_stream.XXXXXX failed: ted . s->close_fd)led: ... 
ubstring of e number of threads.f ) failed: ++ exception with description "ad_fd_ == -1_fd)mber of threads.lose_fd)number of threads.ng of hdir("ected eption with description "/tmp/captured_stream.XXXXXX-byte object <("cve(..) in xception with description "d: L"er of threads. ("_fd)s.reads.... ream.XXXXXX
 exception with description "f aptured_stream.XXXXXXeption with description ">close_fd)t the number of threads.ct <se_fd)threads.failed: f threads...) in led: ct <ubstring of the number of threads.rgs->close_fd)-byte object <xception with description "t the number of threads.tured_stream.XXXXXXt tured_stream.XXXXXXyte object <yte object <>close_fd)d: object <t the number of threads.d: ... f threads.ct <f xecve(X ad_fd_ == -1d: am.XXXXXXt the number of threads.read_fd_ == -1e object <) in er of threads.not    failed: XXXyte object < .  tured_stream.XXXXXXd XXXXXch is: eption with description "e number of threads.ted  exception with description "ring of number of threads.X detect the number of threads.stream.XXXXXXnumber of threads..XXXXXXe( detect the number of threads. is: ng of xecve(ring of L") in threads.XXXXXstream.XXXXXX <cve(X hdir("(args->close_fd)ailed: in d_stream.XXXXXXstream.XXXXXXer of threads.02Xs._fd_ == -1) in : e(er of threads.ct <xecve(_fd)threads.XXXXXads.led: XXXXXer of threads.XL"d: ("X(" xecve(hdir("-byte object <e object < ...) in _fd)ted ected ) in  <number of threads.d_ == -1reads.ad_fd_ == -1read_fd_ == -1lose_fd)etect the number of threads.am.XXXXXXject <ad_fd_ == -1reads.mber of threads.led: = -1ailed: _fd_ == -1read_fd_ == -1ad_fd_ == -1) failed: red_stream.XXXXXXrgs->close_fd)) failed: ads.t the number of threads.d)>close_fd) of lose_fd)threads.d ++ exception with description "ted e number of threads.s.mber of threads.= -1 detect the number of threads. hdir("= -1XXXe number of threads.etected ubstring of ng of d:  exception with description "mber of threads.L".XXXXXXthreads.threads.ream.XXXXXX of threads.se_fd)d d_stream.XXXXXX  >close_fd)d_stream.XXXXXXf threads.: = -1hdir(") in  substring of f threads.mber of threads...) in _fd) failed: ) failed: _fd_ == -1Xch is: rgs->close_fd) detect the number of threads.am.XXXXXXretected cve(d_stream.XXXXXXlose_fd)= -1 failed:  lose_fd)not xecve(-byte object <ng of _fd_ == -1) in in d ect the number of threads.f threads.... rgs->close_fd)not d_ == -1ads.threads.d_stream.XXXXXX/captured_stream.XXXXXX= -1reads.L"
cve(red_stream.XXXXXXnot rgs->close_fd)stream.XXXXXXXXXXXt the number of threads. exception with description "ected _fd_ == -1xception with description "se_fd)eption with description "XXX/tmp/captured_stream.XXXXXXread_fd_ == -1ir("ailed: lose(args->close_fd)ads. is: ailed: Xse(args->close_fd) of  ("etect the number of threads. .XXXXXXted the number of threads.er of threads.se(args->close_fd)... ir("se_fd)threads.er of threads.threads.d d: reads.ads. failed: e(se(args->close_fd).  <02Xiled:  failed:  failed: ) in d_stream.XXXXXXs. of threads.string of ubstring of tured_stream.XXXXXXread_fd_ == -1red_stream.XXXXXXlose_fd)-1/captured_stream.XXXXXXream.XXXXXXred_stream.XXXXXX++ exception with description "d_ == -1threads.s.threads.ad_fd_ == -1f threads. ) in ject <ected lose_fd) failed: ed: yte object <) in  failed: am.XXXXXXd_ == -1ream.XXXXXX detect the number of threads.etected  substring of ject <ect the number of threads.stream.XXXXXX..) in XXXXring of am.XXXXXXreads.threads.tured_stream.XXXXXX failed: not /tmp/captured_stream.XXXXXXXXXXXiled: xecve(the number of threads.Xmp/captured_stream.XXXXXXads.XXXXXream.XXXXXXam.XXXXXXrgs->close_fd)ads.:  <f  is: s: .XXXXXXreads.etect the number of threads.t the number of threads.) in ir("mp/captured_stream.XXXXXXthe number of threads. f  -byte object <in mp/captured_stream.XXXXXXnot number of threads. of ailed: XXXXXd  ...) in yte object <= -1eption with description "-1.XXXXXXected XXXXXfailed: ir("d_stream.XXXXXX of threads.etected s: iled: cve(mp/captured_stream.XXXXXXthreads.ject < exception with description "/tmp/captured_stream.XXXXXXailed: s.failed: = -1 detect the number of threads.ads.ailed: threads.led: s.d ... mp/captured_stream.XXXXXXlose(args->close_fd) detect the number of threads. ... 02Xted  of  exception with description "etect the number of threads. detect the number of threads.s. of threads.L"number of threads.xception with description "Xad_fd_ == -1 <ng of t the number of threads.lose(args->close_fd) failed: ted (args->close_fd)XX detect the number of threads. of threads.d_stream.XXXXXXXXXring of not : ng of _fd)xception with description "Xd_stream.XXXXXXe((args->close_fd).XXXXXX= -1d /tmp/captured_stream.XXXXXXubstring of f eption with description "failed: d: ected d_stream.XXXXXX ...) in  ted  ("se_fd)t /captured_stream.XXXXXXreads.etect the number of threads.mp/captured_stream.XXXXXXs: 02Xd)-1ted threads.ch is: d_stream.XXXXXXse_fd)ct <d_stream.XXXXXXted 02X... >close_fd) exception with description "ted _fd_ == -1rgs->close_fd)-byte object <ject <t se(args->close_fd)mp/captured_stream.XXXXXX == -1e( exception with description "XXX>close_fd)Xrr is: 02Xmp/captured_stream.XXXXXXf d: L"s.ted hich is: -1..) in t the number of threads.ect the number of threads.ubstring of ject < ...) in eption with description "-byte object <XXXetect the number of threads.eption with description "("aptured_stream.XXXXXXct <ct <ads.) failed: am.XXXXXXreads.
threads.rled: e object <ng of >close_fd)etect the number of threads. ect the number of threads. ...) in Xct <threads.am.XXXXXX= -1failed:  <threads.d)e(02X... ct <ailed: stream.XXXXXX failed: object <s.. d)lose(args->close_fd)red_stream.XXXXXX detect the number of threads.: = -1mp/captured_stream.XXXXXXlose(args->close_fd)lose(args->close_fd)reads.threads.er of threads.eption with description " substring of d_ == -1Xubstring of ng of ) in _fd)_fd)string of ring of etected rgs->close_fd)string of ubstring of Xhich is:  iled: ailed: ) in not mber of threads.e( <f threads.XXXread_fd_ == -1/captured_stream.XXXXXXlose_fd)ailed: not Xf threads.L"f ads.ng of ) in the number of threads.tured_stream.XXXXXXreads. 02Xse(args->close_fd)d_stream.XXXXXX/tmp/captured_stream.XXXXXX(args->close_fd)red_stream.XXXXXXse_fd)
XXXXX..) in threads.ected se(args->close_fd)Xubstring of in  ream.XXXXXXreads.) failed: >close_fd)XXXXXf threads.d ) failed: d)in f threads.ed: led: /tmp/captured_stream.XXXXXX("_fd_ == -1s.  == -1ubstring of lose_fd)tured_stream.XXXXXXd_stream.XXXXXX02Xng of object < of ed:  ...) in >close_fd) detect the number of threads.string of ream.XXXXXXXXX/captured_stream.XXXXXXd ... ad_fd_ == -1reads./captured_stream.XXXXXXtured_stream.XXXXXXir("se_fd)led: string of number of threads.ad_fd_ == -1 ...) in ads.(args->close_fd)ailed: /captured_stream.XXXXXXct <..) in  ...) in ... object <++ exception with description "ir("s: object <xecve(XXXhich is: yte object <red_stream.XXXXXXeption with description ": ream.XXXXXX) failed: the number of threads./tmp/captured_stream.XXXXXXed: d:   failed:  substring of   == -1("d_stream.XXXXXXct <tured_stream.XXXXXX == -1led: s->close_fd)cve(>close_fd)ubstring of ads.stream.XXXXXXetected the number of threads.f threads.se_fd)e object <led: _fd_ == -1ream.XXXXXX-byte object <xecve(d: d_stream.XXXXXXted ch is: etected = -1rgs->close_fd)eption with description "not ted ad_fd_ == -1threads.  exception with description " of ring of s->close_fd)ect the number of threads.s: /captured_stream.XXXXXX/tmp/captured_stream.XXXXXXed: . mp/captured_stream.XXXXXXted  f threads.ad_fd_ == -1er of threads.ct <hich is: (args->close_fd)e number of threads.se(args->close_fd) exception with description "ch is: ("d: >close_fd)ng of d: t the number of threads.read_fd_ == -1reads.) failed: not d: 02Xhdir("rgs->close_fd)eption with description "lose_fd)("d_stream.XXXXXX/tmp/captured_stream.XXXXXX: ... e object <e number of threads.t -1ng of . object <>close_fd)stream.XXXXXXs: reads. detect the number of threads.hich is:  xecve(lose_fd)hich is: rgs->close_fd)string of er of threads.d)s: X02X substring of lose_fd). eption with description "f ream.XXXXXXaptured_stream.XXXXXXect the number of threads.-byte object < <ads.... mp/captured_stream.XXXXXXXhdir("failed: ailed: yte object < _fd_ == -1s->close_fd)d_ == -1hdir("d_ == -1t etected etected  hdir("rgs->close_fd)) in rgs->close_fd)s. ...) in ect the number of threads.the number of threads.L"s: d)rgs->close_fd)..) in read_fd_ == -1hich is: ream.XXXXXXaptured_stream.XXXXXX yte object < is: cve(etected ream.XXXXXX substring of ++ exception with description ") failed: d_stream.XXXXXXXXXch is: ad_fd_ == -1led: XXXXobject </tmp/captured_stream.XXXXXX= -1etect the number of threads.s. <rgs->close_fd)threads.threads.-byte object <= -1ads.threads. s->close_fd)e object <e number of threads.threads.-1d led: xecve(ad_fd_ == -1 ...) in red_stream.XXXXXX02Xetect the number of threads.ected  of threads...) in s: _fd)s.e(ected s. failed: failed: ted >close_fd)iled: /captured_stream.XXXXXXected aptured_stream.XXXXXXd f ++ exception with description "t the number of threads.
f threads.
 ...) in xception with description "("L"lose_fd)not  of ch is: ted _fd)cve(lose_fd)read_fd_ == -1lose_fd)led: rgs->close_fd) substring of threads.. led: threads.not ct <_fd)f threads.yte object <>close_fd)etected yte object <rs.ch is: mber of threads.am.XXXXXXrthreads.ream.XXXXXXt the number of threads.(args->close_fd)-1s.ads.d)hdir("number of threads.rgs->close_fd)L"(args->close_fd) == -1object <xecve(d: etected ct <threads.etected e(ring of am.XXXXXXlose(args->close_fd)ect the number of threads.XXXXXt yte object <stream.XXXXXXt Xect the number of threads.: lose_fd)iled: iled:  failed:  failed:  exception with description ">close_fd)d rgs->close_fd) exception with description "e object <(args->close_fd)f threads.... d lose_fd)xecve(ads.s: ed: s.e number of threads.f ring of t the number of threads.lose(args->close_fd)xecve(_fd_ == -1number of threads.rgs->close_fd) in am.XXXXXX("s->close_fd)ad_fd_ == -1 <not se_fd)e(_fd_ == -1.  ...) in object <am.XXXXXX(args->close_fd)mp/captured_stream.XXXXXXreads._fd)aptured_stream.XXXXXXstream.XXXXXX_fd) d_stream.XXXXXXe(d: t the number of threads. detect the number of threads.yte object <X == -1read_fd_ == -1) failed: not  substring of  failed: etect the number of threads.number of threads./captured_stream.XXXXXXhdir("mp/captured_stream.XXXXXXads.led: ad_fd_ == -1ed: string of ect the number of threads.se_fd)se_fd)ch is: t the number of threads. ted >close_fd)s.etected s->close_fd)(args->close_fd)ject <d_ == -1ads.ng of yte object <reads.= -1e object <hich is: -1f  == -1ected .XXXXXXect the number of threads.d: ) in reads.failed: not t ring of ted am.XXXXXXXect the number of threads. failed: _fd)ads.cve( is: object <ted re object <threads.eption with description "..) in aptured_stream.XXXXXXr... -1mp/captured_stream.XXXXXXthreads.not 02Xd_ == -1aptured_stream.XXXXXXnumber of threads.failed: tured_stream.XXXXXXir(" ...) in d: (args->close_fd)etected s.) failed: red_stream.XXXXXXf in ir(" exception with description " of failed: Xt s.d: d: e number of threads.threads.threads.the number of threads.f 02Xt Xetected e object <number of threads.eption with description "ch is: /captured_stream.XXXXXXd: tured_stream.XXXXXXt (" 
aptured_stream.XXXXXX("ads.ch is:  detect the number of threads.hich is:  exception with description "..) in  of threads.e object <) failed:  of .  e number of threads.>close_fd)red_stream.XXXXXXeption with description "02X02X of ted e(s: yte object <eption with description ") in ected e(_fd_ == -1) in d s->close_fd)ubstring of mp/captured_stream.XXXXXXetect the number of threads.se(args->close_fd) of threads.etect the number of threads. s. <e number of threads.lose(args->close_fd)e number of threads.-byte object <_fd_ == -1 of threads.XXXXXe object <aptured_stream.XXXXXXhich is: hich is: reads.object <= -1_fd)ring of /captured_stream.XXXXXXed: yte object <s.rfailed: ir("the number of threads.lose_fd)in threads.reads.d_ == -1ct < cve(hich is: s->close_fd)not ) in rgs->close_fd)rgs->close_fd)threads.(args->close_fd)ect the number of threads.: the number of threads.in = -1ad_fd_ == -1 detect the number of threads.se(args->close_fd) failed: _fd)the number of threads.e object <am.XXXXXX(args->close_fd)Xam.XXXXXXaptured_stream.XXXXXX= -1f threads.-1ected XXXXstring of se(args->close_fd)ch is: number of threads.threads.... object <mp/captured_stream.XXXXXXect the number of threads.  is: threads. of Xf threads.e(ed: mber of threads.ream.XXXXXX object <d_stream.XXXXXX: d)ed: xception with description "etected . L"d_stream.XXXXXXmber of threads.xception with description "t 02Xtured_stream.XXXXXXeption with description ") failed: s.se(args->close_fd)etect the number of threads.ad_fd_ == -1 lose(args->close_fd)ject <_fd)t the number of threads. substring of ct <L">close_fd)eption with description "ad_fd_ == -1e(..) in aptured_stream.XXXXXX_fd)ad_fd_ == -1xecve(cve(eption with description "ring of  of L"(args->close_fd)in ng of  < of  <string of XXXetect the number of threads.lose_fd)/captured_stream.XXXXXXreads.s.ubstring of er of threads. ...) in ream.XXXXXX-1ected ads.02X-byte object <object <e(: /captured_stream.XXXXXXt ..) in threads./captured_stream.XXXXXXmber of threads.tured_stream.XXXXXXcve(reads.am.XXXXXXe object <read_fd_ == -1e(mber of threads.object <xecve(ad_fd_ == -1 led: XXXXXng of red_stream.XXXXXXrgs->close_fd)s: t read_fd_ == -1ailed: yte object <t the number of threads.e object <ream.XXXXXXted f threads.02X == -1ads. ...) in hich is:  == -1ch is: ected ailed: t object <
 substring of ads.hich is: >close_fd)yte object <-1. f threads.failed: the number of threads.ir("red_stream.XXXXXX of threads.iled: am.XXXXXX/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXs.ream.XXXXXXed: ir("02Xir("...  X02Xnot /captured_stream.XXXXXXubstring of ted >close_fd)ject <.XXXXXXed: t  of threads.xception with description "hdir("yte object < == -1rgs->close_fd) ad_fd_ == -1 of threads.led: ++ exception with description "hich is: ) in .XXXXXXs. is: .XXXXXX: -byte object <ads.lose_fd)d_ == -1
/captured_stream.XXXXXXiled: (args->close_fd) == -1er of threads.s->close_fd)ring of /captured_stream.XXXXXXXted _fd_ == -1 is:  == -1ream.XXXXXXt ..) in xception with description "ads.lose_fd) == -1) in xecve(XXX02Xse_fd)etected hich is:  of threads.hdir(": (" ...) in f number of threads.hdir("t the number of threads.mber of threads.aptured_stream.XXXXXXmp/captured_stream.XXXXXXyte object <tured_stream.XXXXXXstring of Xed: ... mp/captured_stream.XXXXXX
mber of threads.er of threads.eption with description " <etected ) failed: tured_stream.XXXXXXer of threads.led: aptured_stream.XXXXXX... cve(object <etected tured_stream.XXXXXX..) in ads.d: read_fd_ == -1mp/captured_stream.XXXXXX... stream.XXXXXXd)ads.etect the number of threads. detect the number of threads.ject <-byte object <cve(ream.XXXXXX of failed: d)Xnot = -1hich is: eption with description "am.XXXXXXe object < substring of e(= -1... d)hich is: ring of threads.d_ == -1ject <xecve( of XXX. yte object < ...) in  of threads.mp/captured_stream.XXXXXXf ream.XXXXXXse_fd)d)ed: iled: ream.XXXXXXnot reads.d: d)ring of mber of threads.e number of threads. X>close_fd)d: ch is: 02Xng of ring of failed:  ...) in ng of ) in read_fd_ == -1(args->close_fd)cve(s: in Xailed: t rthreads.ect the number of threads.e object <("ed: number of threads.red_stream.XXXXXXxecve(not xception with description "yte object <cve(etect the number of threads.yte object <mp/captured_stream.XXXXXXyte object < of threads.ject <read_fd_ == -1 is: iled: ch is: = -1= -1ring of not  L"ect the number of threads.>close_fd)lose_fd)e number of threads.(" is: ) failed:  threads.ed: lose_fd)) failed: f threads.("reads.ted  exception with description "failed: s:  <. the number of threads.threads.ir(" exception with description "s.ads./captured_stream.XXXXXX) failed: object <>close_fd)t red_stream.XXXXXXs.tured_stream.XXXXXXhich is: mber of threads.s. of threads.the number of threads.ads.led: ailed: ream.XXXXXXread_fd_ == -1ect the number of threads.... : ad_fd_ == -1d_ == -1s->close_fd)_fd)) in aptured_stream.XXXXXXe() in  rgs->close_fd)XXXd_ == -1-byte object <d: : ed: in >close_fd)
lose(args->close_fd)L"se(args->close_fd)s.iled: ("mber of threads.se_fd)e object <ream.XXXXXXthreads.string of  failed: ubstring of  detect the number of threads. is: XXX <am.XXXXXXreads.threads.d -byte object <>close_fd)eption with description "not 
 detect the number of threads.the number of threads.s: t the number of threads. f threads.t lose_fd) ...) in e number of threads.. ected rgs->close_fd)ted number of threads.se(args->close_fd)ad_fd_ == -1f number of threads.XXXXXred_stream.XXXXXXd_stream.XXXXXXled: s: read_fd_ == -1mber of threads.ir("s: ir("reads.d:  substring of ng of rhdir("e(ir("/tmp/captured_stream.XXXXXXstream.XXXXXXnumber of threads. detect the number of threads. is: in -1led: xception with description "in  substring of etect the number of threads. is: se(args->close_fd)d)02Xobject < d_stream.XXXXXX. ted -byte object <-byte object <. hdir("threads.>close_fd)the number of threads.X/captured_stream.XXXXXXads. of ..) in xception with description ">close_fd)failed: reads...) in ir("ected s.ed: hdir("d: lose_fd)++ exception with description "Xmber of threads. substring of /tmp/captured_stream.XXXXXX the number of threads.f ..) in f -1f  mp/captured_stream.XXXXXXrgs->close_fd)e(d). XXXXXd_stream.XXXXXXcve(ads.se_fd)ubstring of s.>close_fd)the number of threads.s.: er of threads.threads.... er of threads.aptured_stream.XXXXXXrobject <lose_fd)d reads.eption with description "se(args->close_fd)stream.XXXXXXstream.XXXXXXed: ) failed: e(number of threads.eption with description " detect the number of threads.ir("t eption with description "d: tured_stream.XXXXXXXd)lose(args->close_fd)ct < of  of ct <ect the number of threads.s->close_fd) lose_fd) < is: t hich is: _fd)er of threads.object <) in s.number of threads.ream.XXXXXX: ir("ch is: lose_fd)) in s->close_fd) of ("ed: ads.number of threads.eption with description "
s: s.s->close_fd)ng of in etected ect the number of threads.e number of threads.... ject </tmp/captured_stream.XXXXXXyte object <tured_stream.XXXXXXnumber of threads.d_stream.XXXXXX ...) in ream.XXXXXXreads.etect the number of threads. iled: eption with description "r("threads.hich is: s: s->close_fd)t s./tmp/captured_stream.XXXXXXse(args->close_fd)am.XXXXXXs.t the number of threads. substring of -byte object </tmp/captured_stream.XXXXXXreads.f threads.f  detect the number of threads.in  ...) in d_ == -1xception with description "ads.iled:  XXXXXd: mber of threads.hich is: e number of threads.-1yte object < exception with description "(args->close_fd)... am.XXXXXX.XXXXXXe object <yte object <not ..) in ailed: aptured_stream.XXXXXXxecve(d_ == -1xecve(stream.XXXXXX failed: /captured_stream.XXXXXXnumber of threads. <ject < ads.ring of xception with description "s.ected ject <cve(hich is: the number of threads. of threads._fd)reads.se(args->close_fd)am.XXXXXX>close_fd)reads.d)d_stream.XXXXXXcve(d_ == -1 ...) in -1-byte object <rreads.>close_fd)d: ...  detect the number of threads.led: ct <.XXXXXX..) in .XXXXXXmp/captured_stream.XXXXXX is: e number of threads.reads.ir(".XXXXXXfailed: e( failed: not  failed: /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXX>close_fd). s->close_fd) == -1ject <mber of threads..XXXXXXs.se(args->close_fd)number of threads.not   ad_fd_ == -1/tmp/captured_stream.XXXXXXstream.XXXXXXthreads.lose(args->close_fd)hich is: Xstream.XXXXXX substring of 
) failed: d)ads.er of threads.ject <stream.XXXXXX-1 number of threads.in lose(args->close_fd) == -1) in  ...) in ads.ailed: e object <(args->close_fd)cve(e number of threads.hich is: ad_fd_ == -1 mber of threads.ct <ng of ubstring of aptured_stream.XXXXXX("stream.XXXXXXtured_stream.XXXXXXam.XXXXXXream.XXXXXX= -1not xecve(e( <am.XXXXXXf f threads.am.XXXXXXd_ == -1object <xception with description "etected f threads./tmp/captured_stream.XXXXXXed: er of threads.ir("threads. <ir("failed:  s: etect the number of threads.failed: yte object <number of threads.ch is: ) in t X>close_fd)failed: ) in am.XXXXXXir("d_stream.XXXXXX++ exception with description ") in ng of ads.number of threads.X02Xam.XXXXXXyte object <hich is: tured_stream.XXXXXXxecve(led: ailed: Xthreads.ect the number of threads._fd) ) failed: s.e( detect the number of threads.se(args->close_fd)) failed: ct <ct <d: s->close_fd)se(args->close_fd) detect the number of threads.02Xthe number of threads.e(e number of threads.ected not ed: f ct <xecve(failed: s->close_fd)am.XXXXXX is:  = -1rd_stream.XXXXXXyte object < < <s: ... lose_fd)lose(args->close_fd)ads.d  _fd_ == -1xecve(: XXXXXread_fd_ == -1ream.XXXXXXhdir("threads./tmp/captured_stream.XXXXXX>close_fd) red_stream.XXXXXXt   hdir("in aptured_stream.XXXXXXads.L"ring of etected ads.ads.ject < f threads.d_stream.XXXXXX of threads.t the number of threads. ...) in ream.XXXXXXd)rgs->close_fd)-byte object <X..) in not _fd_ == -1aptured_stream.XXXXXXled: 02Xs. ...) in lose_fd)ct <in eption with description "Xhdir("xecve(ct <L"hdir("ring of ir("threads.ected d)/tmp/captured_stream.XXXXXXfailed: s.threads.t the number of threads. failed: etect the number of threads.reads.. ads.rse(args->close_fd)se(args->close_fd)led: ) in X(args->close_fd)mber of threads.ect the number of threads.-byte object <object <-byte object < ...) in mp/captured_stream.XXXXXXct <xecve(threads.ect the number of threads.(args->close_fd)ject <s->close_fd)object <: am.XXXXXXf xecve(object <the number of threads.= -1 failed: 02Xxecve(t the number of threads.object <reads.se_fd)..) in ed: ct <rXiled: : rmber of threads.xecve(d_ == -1ed: -byte object <t the number of threads.ct < of threads._fd_ == -1d_ == -1_fd_ == -1d_ == -1(args->close_fd)X/tmp/captured_stream.XXXXXXir(" hdir("d: t the number of threads.ject <not s: /captured_stream.XXXXXX_fd_ == -1ads.lose(args->close_fd) of threads.ir("Xstream.XXXXXXse_fd)se_fd) is: mp/captured_stream.XXXXXXhich is:  <stream.XXXXXX am.XXXXXXxception with description "e number of threads. ...) in hich is: etected hdir("ads.ailed:  of lose(args->close_fd)f threads. of threads.f -byte object <(args->close_fd) <failed: d ubstring of /captured_stream.XXXXXX exception with description "-byte object <XXXXX_fd_ == -1 <er of threads.Xled: ) in am.XXXXXX of _fd_ == -1  failed:  e object <X02Xthreads. of threads._fd)-1mber of threads.ad_fd_ == -1in stream.XXXXXXam.XXXXXXd)tured_stream.XXXXXXthe number of threads.ream.XXXXXX_fd)in ted reads. failed: red_stream.XXXXXXf threads._fd_ == -1d)ad_fd_ == -1lose_fd)-byte object <d: ect the number of threads. exception with description "e object <se_fd)ng of .XXXXXXmber of threads. ...) in d)ring of t hich is: reads.rcve(t the number of threads.ads.ected ailed: er of threads.ring of  failed: e(er of threads.cve(rXXXXXled: e number of threads. ("
read_fd_ == -1
am.XXXXXXin _fd)cve(read_fd_ == -1/captured_stream.XXXXXXobject <
..) in f threads.s: string of e object <hich is: f e(tured_stream.XXXXXX detect the number of threads.reads.ads.ads.ected hich is: xception with description "_fd_ == -1ject <threads.threads. exception with description "the number of threads.ch is: etected ... ads.L"-byte object </captured_stream.XXXXXXject <(args->close_fd)(args->close_fd)..) in se_fd)= -1number of threads.ed: not ct <led: /tmp/captured_stream.XXXXXXled: -1 of the number of threads.s: etected ed: e object <red_stream.XXXXXX /captured_stream.XXXXXXread_fd_ == -1ubstring of stream.XXXXXXect the number of threads.XXXstream.XXXXXX
-1number of threads.se_fd)d)se_fd)led: read_fd_ == -1mber of threads.f .XXXXXX_fd_ == -1ailed: L"not ) in aptured_stream.XXXXXXs.ubstring of cve(ad_fd_ == -1threads.s->close_fd) ted _fd_ == -1. -byte object <red_stream.XXXXXXcve(XXXd: :  ...) in ed: ect the number of threads.-byte object <se_fd)ject <reads.(args->close_fd)ring of ailed: L" <_fd) substring of hdir("etected led: ) failed:  <ed:  of threads.d_ == -1etected t yte object <L"ct <ubstring of rgs->close_fd) is: eption with description "_fd)d_stream.XXXXXXhich is: robject <lose_fd)e object < s: aptured_stream.XXXXXX is: ("02Xr-byte object <cve(e number of threads.... threads.rgs->close_fd) detect the number of threads.f threads.++ exception with description "the number of threads.ct <e number of threads.Xetected XXXd)rrse_fd)the number of threads.in ir("d)failed: ("ject < failed: _fd)lose_fd)/captured_stream.XXXXXXe number of threads.XXXXXmp/captured_stream.XXXXXX
object <in se_fd) == -1aptured_stream.XXXXXXcve(xception with description ">close_fd)ream.XXXXXXs->close_fd)s->close_fd)-1t the number of threads._fd)ng of iled: /captured_stream.XXXXXXXt the number of threads.-1in ) in failed: = -1am.XXXXXXetected d)string of . in ailed:  failed: ream.XXXXXXe object <t the number of threads._fd_ == -1hdir("string of  detect the number of threads.ct <s.: : xecve(in  detect the number of threads.xception with description " hich is: _fd_ == -1etected stream.XXXXXXin s: X) failed: am.XXXXXXf am.XXXXXXe(tured_stream.XXXXXXread_fd_ == -1mber of threads.threads.ject <iled: ch is: ("ect the number of threads.ject <number of threads.in ) in d_stream.XXXXXXring of iled: rrgs->close_fd)mp/captured_stream.XXXXXXd -byte object <ed: mp/captured_stream.XXXXXX  failed: (args->close_fd)string of  substring of f threads.>close_fd) ...) in eption with description "the number of threads. == -1d)02X++ exception with description " the number of threads.lose_fd)ect the number of threads.mp/captured_stream.XXXXXXtured_stream.XXXXXXt iled: = -1/captured_stream.XXXXXX/captured_stream.XXXXXXled: /captured_stream.XXXXXXL"ed: f yte object <am.XXXXXXed: reads.f threads.red_stream.XXXXXX= -1ng of ) failed:  == -1ads.d) ...) in er of threads.("-1ed: s.s: XXXXX ted  XXX. s.ected e number of threads.d 02Xread_fd_ == -1... _fd)-1 detect the number of threads.... mp/captured_stream.XXXXXX
ch is:  of threads.02Xted e object <mp/captured_stream.XXXXXXted ir("xecve(-byte object <ir("eption with description "threads.er of threads.am.XXXXXX == -1lose(args->close_fd)xception with description "xecve(d_ == -1ected  ring of threads.ad_fd_ == -1cve(the number of threads.) in  is: yte object <++ exception with description "... ect the number of threads.X++ exception with description "("d_stream.XXXXXX(".  /captured_stream.XXXXXXtured_stream.XXXXXXt the number of threads.mp/captured_stream.XXXXXXe(ect the number of threads.string of mp/captured_stream.XXXXXX stream.XXXXXXeption with description "-byte object </captured_stream.XXXXXX("ch is: L"ng of lose_fd)Xs.eption with description "s.lose(args->close_fd)..) in xception with description " failed: aptured_stream.XXXXXX <t the number of threads. exception with description "string of ad_fd_ == -1/tmp/captured_stream.XXXXXXring of the number of threads.rgs->close_fd)-1rch is: lose_fd)ng of /tmp/captured_stream.XXXXXXected >close_fd)f  <s.reads. is:  failed: aptured_stream.XXXXXX_fd_ == -1(args->close_fd)d_ == -1 <iled: t the number of threads.ch is: >close_fd)d stream.XXXXXX(" detect the number of threads.er of threads.: lose_fd)ream.XXXXXXad_fd_ == -1++ exception with description "the number of threads.lose(args->close_fd)++ exception with description "in XXX substring of yte object <ted lose_fd)rd_ == -1mber of threads.read_fd_ == -1-byte object <threads.= -1threads./captured_stream.XXXXXX detect the number of threads.iled: XXXXXobject <Xtured_stream.XXXXXXject <er of threads.mp/captured_stream.XXXXXXstream.XXXXXXd)s: red_stream.XXXXXX of threads.ct <red_stream.XXXXXXXXXXXiled: ream.XXXXXXnot e(se(args->close_fd) of lose_fd)d)am.XXXXXXthreads.= -1) failed: 02X/tmp/captured_stream.XXXXXXred_stream.XXXXXXe object <++ exception with description " substring of ... iled: read_fd_ == -1threads.) failed: object <lose_fd)d s.-byte object < == -1 .XXXXXXXXXe number of threads./tmp/captured_stream.XXXXXXads.led: e object <ailed: e number of threads.hich is: (args->close_fd)etect the number of threads.d: ads.the number of threads.ed: not er of threads.hdir("t >close_fd) exception with description " ...) in mp/captured_stream.XXXXXX of tured_stream.XXXXXX of eption with description "yte object <se(args->close_fd)object < etected : ream.XXXXXX exception with description "d reads.se_fd)not ads.threads.ected number of threads. is: .XXXXXXf threads....  of xception with description "f threads._fd)lose_fd)iled: stream.XXXXXX failed: ... f threads.s->close_fd)ads.ch is: ect the number of threads.ads.ject <d f threads.etect the number of threads.hdir("the number of threads.XXXXXred_stream.XXXXXXin not  is: aptured_stream.XXXXXX:  s./captured_stream.XXXXXXs.etected am.XXXXXXs. is: etect the number of threads.number of threads.s.hdir("
not ir("XXXXXXXXXXe number of threads.ted s->close_fd)eption with description "d: lose(args->close_fd)lose_fd)in ch is: ads. < e( substring of -byte object <  == -1 
eption with description "mp/captured_stream.XXXXXX: er of threads.ring of  < detect the number of threads.(args->close_fd)ream.XXXXXX-byte object <s.yte object <ring of .XXXXXXse(args->close_fd)ir("xception with description "f ect the number of threads.hdir("d X == -1ailed: object <
) in string of Xstream.XXXXXX <f threads.ng of ..) in eption with description "t the number of threads.threads.ad_fd_ == -1read_fd_ == -1ct <d_ == -1("... number of threads.hdir("cve(ads.d_stream.XXXXXXiled: ring of _fd_ == -1..) in object <ubstring of ) failed: led: ailed: ("ect the number of threads.aptured_stream.XXXXXXd e object <not ted hdir("f (args->close_fd)s->close_fd)(args->close_fd)t the number of threads.hdir("d: t the number of threads.iled: s->close_fd)XXXreads.ject <er of threads.(" of xecve(e number of threads. ...) in ailed: etected  mber of threads.... er of threads./captured_stream.XXXXXXe object <lose_fd)f ream.XXXXXX... = -1ads. == -1 <s.string of  failed: etected failed: e(t the number of threads.d_ == -1se(args->close_fd)ject <hich is: object <>close_fd)threads.e number of threads.yte object <s->close_fd) of ) in ) failed: X detect the number of threads.t the number of threads. threads.d Xe number of threads. == -1hich is: /captured_stream.XXXXXXxception with description "L"threads..XXXXXXyte object <XXXse(args->close_fd)_fd_ == -1 <number of threads.++ exception with description "f am.XXXXXXd not ject <rads.... e number of threads.d_ == -1_fd_ == -1s: _fd_ == -1 exception with description "etected ++ exception with description "e number of threads.lose(args->close_fd)e object <f  of threads.threads.ct <threads._fd_ == -1...  <-byte object <yte object <object <02Xthreads. detect the number of threads.yte object <hdir("ed: reads.>close_fd)s.ected t the number of threads.e number of threads.-byte object <reads.eption with description "tured_stream.XXXXXX _fd) d)led:  == -1ailed: ailed: -byte object <stream.XXXXXX) failed: ject <e number of threads._fd)in xecve(rgs->close_fd)se_fd)ect the number of threads.... ch is: t the number of threads.ect the number of threads.ads.d_ == -1ject <ir("ubstring of L"etected  failed: e object </tmp/captured_stream.XXXXXX= -1= -1threads.ted f ct <hdir("the number of threads.the number of threads. detect the number of threads. e(XXXch is: s.reads.mber of threads.se(args->close_fd)xecve(/tmp/captured_stream.XXXXXX exception with description " failed: cve(iled: not in se_fd)ailed: etect the number of threads.:  f threads.xecve(eption with description "er of threads.rgs->close_fd)f  red_stream.XXXXXX is: eption with description "lose_fd)etect the number of threads.ject <led: s. e object <s: ect the number of threads. ...) in ream.XXXXXXe number of threads.ailed:  detect the number of threads.ch is:  == -1
-1ad_fd_ == -1etect the number of threads._fd_ == -1s.ad_fd_ == -1number of threads.se(args->close_fd)failed: se(args->close_fd)tured_stream.XXXXXXnot . the number of threads...) in d_ == -1d cve(tured_stream.XXXXXXmber of threads.(args->close_fd)ed: s: se_fd)XXXXXad_fd_ == -1mp/captured_stream.XXXXXX of (args->close_fd)ads.lose(args->close_fd)not string of  ...) in ir(". e object <iled:  ...) in /tmp/captured_stream.XXXXXX... lose_fd)t number of threads.not etected ads.tured_stream.XXXXXXetected .XXXXXX) failed:  substring of  led: ject <ted mp/captured_stream.XXXXXXrgs->close_fd) e number of threads.red_stream.XXXXXXe object <02Xs.cve(ch is: etect the number of threads.lose(args->close_fd)xception with description "read_fd_ == -1rgs->close_fd)threads.d_stream.XXXXXX...  of ream.XXXXXXf threads./captured_stream.XXXXXX("
d s.s->close_fd)ng of etect the number of threads...) in  ...) in ("mp/captured_stream.XXXXXXad_fd_ == -1stream.XXXXXXir("d_ == -1 failed: ++ exception with description "XXXXX failed: d_stream.XXXXXX ...) in  detect the number of threads.>close_fd)Xd_stream.XXXXXXect the number of threads.d s.tured_stream.XXXXXX: iled: ir("X...  is: f d_stream.XXXXXXr-byte object <lose(args->close_fd)rd)d (args->close_fd)e object <ream.XXXXXXted in d  is: ads.etected  < failed: lose(args->close_fd)ject <X) failed: mp/captured_stream.XXXXXXyte object < <cve(e object <..) in ng of threads. ring of d in s->close_fd)f d ch is: . not s.mber of threads.yte object <ected s->close_fd)Xhich is: XXXlose_fd)failed:  <in ... ad_fd_ == -1(args->close_fd)er of threads.mp/captured_stream.XXXXXXaptured_stream.XXXXXX>close_fd)read_fd_ == -1XXXXXtured_stream.XXXXXXreads.... s.red_stream.XXXXXXiled: : etected mber of threads.number of threads. ...) in  is: string of threads.ailed: read_fd_ == -1XXXtured_stream.XXXXXXstream.XXXXXXXXXXXlose_fd)ads.ct <d_ == -1rect the number of threads.d hdir("eption with description "lose_fd)_fd_ == -1object </captured_stream.XXXXXXject <
yte object <rd_ == -1aptured_stream.XXXXXXse(args->close_fd)/tmp/captured_stream.XXXXXXads. == -1d threads.in r <) in s. == -1tured_stream.XXXXXX of se_fd)ads.ject <lose_fd)eption with description "e number of threads.ed: er of threads./captured_stream.XXXXXXaptured_stream.XXXXXXhich is: number of threads.read_fd_ == -1ct <(args->close_fd)rch is: d >close_fd) == -1etect the number of threads..XXXXXXf threads.read_fd_ == -1.XXXXXX:  is: XXXXXd_stream.XXXXXXng of -1e(led: -byte object <ring of = -1++ exception with description "/tmp/captured_stream.XXXXXXe number of threads.X. t (" of threads.s.d ads.led: reads.ads. the number of threads.not  ...) in tured_stream.XXXXXX= -1failed: ailed: = -1) failed: etect the number of threads. is: the number of threads.XXXreads.-byte object <se(args->close_fd)s->close_fd) ...) in t the number of threads.ubstring of reads.s.etect the number of threads.s. detect the number of threads. detect the number of threads.d)in  exception with description "threads.reads. failed: number of threads./tmp/captured_stream.XXXXXXread_fd_ == -1rgs->close_fd)yte object <XXXXXed:  tured_stream.XXXXXXtured_stream.XXXXXXXad_fd_ == -1ream.XXXXXXeption with description "rXXXXX/captured_stream.XXXXXXaptured_stream.XXXXXX cve(number of threads..XXXXXX of d)ads.ect the number of threads.in s._fd_ == -1++ exception with description " == -1("rect the number of threads.02Xiled:  substring of  detect the number of threads. == -1reads. detect the number of threads.-1ng of f XXXXXe(threads.d number of threads._fd)not ct <se(args->close_fd)-byte object <s: L"etected ) failed: e number of threads.se(args->close_fd)>close_fd)ect the number of threads.xecve(ubstring of f threads.se(args->close_fd)eption with description ".XXXXXXse(args->close_fd)e object <X detect the number of threads.XXXs: s.... d_ == -1ed: ected s.in  rgs->close_fd)s: number of threads..  of  aptured_stream.XXXXXXnumber of threads.e number of threads.reads.threads.ring of in mber of threads. /tmp/captured_stream.XXXXXXxecve(failed:  exception with description "e(= -1ected f threads.se_fd)... t the number of threads.hich is: cve( failed: ir("object <ected s: d_stream.XXXXXXads.d_stream.XXXXXX of threads.
= -1t the number of threads.ailed: _fd_ == -1etected ir("t lose(args->close_fd)d) substring of ailed: eption with description "read_fd_ == -1ir("etected 02X/tmp/captured_stream.XXXXXXreads.tured_stream.XXXXXXs: d: 02Xreads. <..) in etected lose_fd)xception with description "rgs->close_fd)ected d  of threads.tured_stream.XXXXXXubstring of ad_fd_ == -1in ...  failed: stream.XXXXXXf threads./captured_stream.XXXXXXfailed: d: object < substring of er of threads.se_fd)-byte object <aptured_stream.XXXXXXled: ubstring of ted read_fd_ == -1ch is: hdir(" substring of  ...) in ad_fd_ == -1hdir("number of threads.etected s.tured_stream.XXXXXXetect the number of threads._fd)reads.XXXd: ..) in etected s: failed: aptured_stream.XXXXXXthreads. == -1L". object <yte object <ted f xecve() in ++ exception with description " ream.XXXXXX("iled: XXXXX_fd)d)cve(ream.XXXXXX exception with description "d_ == -1yte object <.XXXXXXXer of threads.lose(args->close_fd) detect the number of threads.. ) failed: the number of threads.(args->close_fd) of threads.se(args->close_fd)lose(args->close_fd)r of  is: lose_fd)xecve( failed: ("d)etected ad_fd_ == -1ad_fd_ == -1ct <: aptured_stream.XXXXXXmber of threads. of threads.) in  <s: ring of  /tmp/captured_stream.XXXXXXads.etected ) in -byte object <hich is: s.ads.-1ad_fd_ == -1not string of (args->close_fd)hdir(" == -1ailed: hich is: ct <d)string of /captured_stream.XXXXXXeption with description "("d_stream.XXXXXXeption with description "cve(the number of threads.iled: in s->close_fd)reads.s.-byte object <("d_stream.XXXXXXe number of threads.ailed: lose(args->close_fd)++ exception with description "threads.string of e number of threads.f  substring of xecve(02XL" of threads./tmp/captured_stream.XXXXXX++ exception with description ".XXXXXX-byte object < failed: mber of threads.s->close_fd)s.lose(args->close_fd)hich is:  substring of ubstring of f led: threads.reads.("-1XXXXXXs.ailed: L"e object <= -1string of ads.lose(args->close_fd) of xception with description "lose_fd)rgs->close_fd)ch is: led: lose_fd)..) in /tmp/captured_stream.XXXXXXer of threads.ed:  se(args->close_fd) ubstring of /tmp/captured_stream.XXXXXXetect the number of threads.ch is: . threads.f d)the number of threads. detect the number of threads. se(args->close_fd)ubstring of 
02X XXXX02Xthe number of threads.e(in ads.... mber of threads./captured_stream.XXXXXX is:  of -byte object <d)ring of the number of threads.tured_stream.XXXXXXubstring of read_fd_ == -1ed: ailed: hich is: eption with description " == -1ect the number of threads...) in e number of threads.X) in s: s: ads.reads.stream.XXXXXXthreads.eption with description "ream.XXXXXXted hdir("lose_fd)iled: ) failed: d: ram.XXXXXXtured_stream.XXXXXXyte object <threads.reads.in s.d: ailed:  reads.rxecve(s.d: d_stream.XXXXXXe object <er of threads.ject <rgs->close_fd)ads.mber of threads.lose_fd)ubstring of s:  XXXXXnumber of threads.t the number of threads. failed: . yte object <ailed: am.XXXXXX of read_fd_ == -1ject < == -1reads.iled: e(ed: ("stream.XXXXXXaptured_stream.XXXXXXXXXXXhdir("... mp/captured_stream.XXXXXXetect the number of threads._fd_ == -1reads.s: e number of threads.am.XXXXXXcve(number of threads.r_fd)= -1) failed: ads.tured_stream.XXXXXXted ..) in ads.ads.-byte object < == -1iled: d_ == -1-1. ubstring of read_fd_ == -1cve(.  failed: iled: reads.hich is:  <read_fd_ == -1 ect the number of threads.the number of threads.f  detect the number of threads.s. == -1. Xch is: red_stream.XXXXXXX detect the number of threads.ct <tured_stream.XXXXXXailed: ct <L"ir("_fd)d iled:  == -1reads.ect the number of threads.e object <number of threads. is: -1cve(ted eption with description " == -1s./tmp/captured_stream.XXXXXXL"f threads.t the number of threads.ubstring of se(args->close_fd)lose(args->close_fd) exception with description "failed: e(:  >close_fd)(args->close_fd)se_fd)) in _fd_ == -1s->close_fd)f ring of ect the number of threads.) in L"in  <f : string of object <s.d_ == -1d_ == -1yte object <ailed:  ad_fd_ == -1ir(" am.XXXXXXected ++ exception with description "lose(args->close_fd)in ads.f object <..) in  substring of stream.XXXXXX ...) in (args->close_fd)) failed: threads. detect the number of threads.ted t L"iled: s:  se(args->close_fd)ads. exception with description "d ream.XXXXXXlose(args->close_fd)... s.s.f threads.rgs->close_fd)d_ == -1e object <etect the number of threads.>close_fd) ...) in  ...) in   of lose(args->close_fd)d number of threads.: ect the number of threads.) failed: L"e number of threads.ad_fd_ == -1s. == -1ch is: -byte object <etect the number of threads.ads.am.XXXXXXthreads.the number of threads. failed: t the number of threads.f lose(args->close_fd)read_fd_ == -1iled: ir(" am.XXXXXXrgs->close_fd)++ exception with description "ed:  ...) in _fd)rgs->close_fd)ted ad_fd_ == -1
ed: XXXhich is: ng of  ...) in  ..) in _fd_ == -1aptured_stream.XXXXXXs.-byte object <se_fd)_fd)ted failed:  reads.am.XXXXXX ...) in aptured_stream.XXXXXX(args->close_fd)) failed: ect the number of threads.
Xir(" ...) in ng of X(args->close_fd)d L"ect the number of threads.ed: t the number of threads.lose(args->close_fd)lose_fd)the number of threads.hdir("failed: red_stream.XXXXXXmber of threads.ailed: d_stream.XXXXXXXXX detect the number of threads.lose(args->close_fd)string of d: lose_fd)ected red_stream.XXXXXXXmp/captured_stream.XXXXXXect the number of threads. of threads.rxception with description "02Xstream.XXXXXXs. failed: object <not ) in ng of er of threads.t hich is: _fd)  <d)tured_stream.XXXXXX>close_fd)xecve() in string of  substring of stream.XXXXXX..) in not xception with description "t the number of threads.ected ect the number of threads. ...) in = -1ream.XXXXXXct <ed: ) failed: e( of ected  ect the number of threads./captured_stream.XXXXXX <s. exception with description " failed:  d er of threads.L"ject < exception with description "reads.xception with description "mp/captured_stream.XXXXXXreads.ads.mber of threads.d_stream.XXXXXXt  of threads.yte object <ream.XXXXXXetected d t the number of threads.number of threads.r(args->close_fd)hdir("failed: cve(threads.the number of threads. of s.tured_stream.XXXXXXstream.XXXXXXnumber of threads.hich is: threads.ted X>close_fd) substring of ubstring of ads._fd_ == -1s: ream.XXXXXXad_fd_ == -1  read_fd_ == -1ect the number of threads.object <re number of threads.
_fd_ == -1 detect the number of threads.(args->close_fd)e(.XXXXXXe number of threads.ct < exception with description "t the number of threads.object <er of threads.red_stream.XXXXXX(args->close_fd)ected  failed: mp/captured_stream.XXXXXXer of threads. ...) in hich is:  not -byte object <red_stream.XXXXXXread_fd_ == -1e number of threads.ch is:  substring of lose(args->close_fd)(args->close_fd)(" of ads.XXXL"threads.hich is: XXXX= -1_fd)etect the number of threads.d: s: object <d_ == -1in d_stream.XXXXXXf threads.hich is: lose_fd)ir("ream.XXXXXX
XXXXXt the number of threads.ring of d_stream.XXXXXXailed:  <s.in .XXXXXXect the number of threads.string of cve(-byte object <led: mber of threads.-1XXXXXXiled:  failed: Xse_fd)lose(args->close_fd)lose(args->close_fd)failed: read_fd_ == -1 of threads.ng of = -1X <hdir("Xtured_stream.XXXXXXs: ted ring of e number of threads.red_stream.XXXXXX) in se(args->close_fd)led: xception with description "ch is:  of threads. of threads.= -1f rXthe number of threads.reads. <se_fd)s.ad_fd_ == -1ir("tured_stream.XXXXXXrcve(..) in ads.ubstring of e number of threads.mber of threads.ailed: se_fd)t d_stream.XXXXXXads.the number of threads.s->close_fd) == -1..) in object <r..) in Xreads.ailed: mber of threads.s: . d_ == -1ch is: t the number of threads..XXXXXXf _fd)(" == -1d XXX-1ct <hich is: -byte object <  /tmp/captured_stream.XXXXXX f ailed:  detect the number of threads. is: reads. reads.= -1stream.XXXXXXject <lose_fd)ring of in string of ring of rXse_fd)s.yte object <e object < == -1ted t am.XXXXXX_fd)ject <red_stream.XXXXXXlose_fd)
-1_fd)f threads.ads.++ exception with description "ir("XXXXXring of rled: r ..) in rgs->close_fd)se_fd) is:  of ..) in red_stream.XXXXXX of ailed: f threads.object <t reads.-1ads. of _fd)ailed:  substring of f threads.d)failed: ubstring of ++ exception with description "s->close_fd)ted iled: read_fd_ == -1e number of threads.s.ubstring of d_stream.XXXXXX++ exception with description ") in the number of threads.ream.XXXXXXd_stream.XXXXXXads.object <) failed: ir(" exception with description "= -1f threads.hich is: ("se(args->close_fd) e(..) in  02Xng of threads.cve(XXXXXer of threads.d_ == -1(args->close_fd)the number of threads.failed:  <eption with description "-byte object <. failed: X substring of -102X of threads. detect the number of threads.am.XXXXXXer of threads.yte object <s->close_fd)s.threads. == -1yte object <object < == -1ir("mber of threads.s->close_fd)t the number of threads.rgs->close_fd)_fd)) in hdir("ubstring of s. of threads.d)etected .  am.XXXXXXred_stream.XXXXXXeption with description "ads.
L" e(etect the number of threads.d  is: s.ring of L"Xd_ == -1-byte object <ect the number of threads.ailed:  ...) in mp/captured_stream.XXXXXXected etected ads.XXXted in object <XXX>close_fd)ads.s->close_fd)s...) in 02Xam.XXXXXXch is: 
d_ == -1: s->close_fd)tured_stream.XXXXXXam.XXXXXX substring of led: Xf threads.reads. <cve(ch is: e(_fd)t the number of threads.threads.rrgs->close_fd)... mp/captured_stream.XXXXXXiled: string of ng of  xception with description "failed:   of threads./tmp/captured_stream.XXXXXXad_fd_ == -1se(args->close_fd)= -1ads.threads.("ads. eption with description "d_ == -1-byte object <etected ring of failed: not 02X-byte object <) in hdir("Xaptured_stream.XXXXXXer of threads.yte object <ir("L" failed: rgs->close_fd)/captured_stream.XXXXXXer of threads. of reads.e(read_fd_ == -1iled:  substring of  == -1er of threads.t the number of threads.am.XXXXXXad_fd_ == -1se_fd)ad_fd_ == -1.XXXXXXd_stream.XXXXXXaptured_stream.XXXXXXrgs->close_fd)rgs->close_fd)se_fd)ream.XXXXXXream.XXXXXXeption with description "d etect the number of threads._fd_ == -1 eption with description "(args->close_fd)er of threads./captured_stream.XXXXXXobject <. ubstring of ring of not etected ng of stream.XXXXXX detect the number of threads...) in ("rgs->close_fd)f threads.led: X failed: threads.xception with description "xception with description " failed: ads. detect the number of threads.d: t ubstring of ads.ect the number of threads. exception with description "_fd_ == -1(args->close_fd)d)Xstream.XXXXXX= -1xecve(threads.etect the number of threads.ring of 02Xthreads.. string of s.s->close_fd)_fd)ct < exception with description "(args->close_fd)read_fd_ == -1hdir("reads.mber of threads.xecve(-byte object <object <(args->close_fd)_fd_ == -1 exception with description "ir(" ...) in se(args->close_fd)se(args->close_fd)rgs->close_fd)("s: read_fd_ == -1t the number of threads.etect the number of threads.se(args->close_fd)s->close_fd)ubstring of in e object <L"02X of threads.reads.e number of threads.) in ed: .XXXXXXreads.(args->close_fd)ubstring of ("etected .XXXXXX detect the number of threads._fd_ == -1aptured_stream.XXXXXXe(. eption with description "f eption with description "hich is: red_stream.XXXXXXads. is: t threads.reads.ir(" substring of lose_fd)ubstring of threads.) in hich is: e(d_stream.XXXXXXeption with description "(args->close_fd)ubstring of  substring of  exception with description "threads.hich is: yte object <ads.ubstring of (args->close_fd)++ exception with description "ed: mber of threads.= -1e( is: L"rgs->close_fd)ch is: ir("stream.XXXXXXcve(. ads.er of threads.tured_stream.XXXXXXd)lose_fd)hdir("d d)-byte object <ch is:  <) in XXXs.mp/captured_stream.XXXXXXt the number of threads.failed: d_ == -1e number of threads.s: s->close_fd)red_stream.XXXXXX
ads.read_fd_ == -1e object <tured_stream.XXXXXXled: ted re object <not  /tmp/captured_stream.XXXXXXiled: tured_stream.XXXXXX etected ailed: er of threads.hdir("cve(>close_fd)_fd)s. substring of ject <ads. is: ir("/tmp/captured_stream.XXXXXXrgs->close_fd)) in _fd_ == -1.XXXXXXhdir("read_fd_ == -1am.XXXXXXect the number of threads.ch is: ream.XXXXXXject <(args->close_fd)Xs. ...) in d)-byte object <ad_fd_ == -1... hich is: _fd)object <reads.hdir("lose_fd)e object <ed: e object < substring of  == -1hich is: xecve(hich is: (">close_fd)aptured_stream.XXXXXXnumber of threads.s->close_fd)s: ected 02Xlose(args->close_fd)the number of threads.ected XXX led: ected L"f read_fd_ == -1cve(/captured_stream.XXXXXXnumber of threads.L") in ailed:  ...) in /captured_stream.XXXXXX-byte object < exception with description "mp/captured_stream.XXXXXXse_fd)cve(rgs->close_fd)ct <ed: lose_fd)string of . _fd)ed:  <("s.L"t etected etected f object < <ject <ad_fd_ == -1 failed: /captured_stream.XXXXXXd_ == -1d: string of object <..) in  == -1 <se_fd)rgs->close_fd)ream.XXXXXX ...) in Xted ... d)s.xecve(etected  detect the number of threads.X detect the number of threads.f threads.) in  substring of XXXXXailed: am.XXXXXX detect the number of threads.t ++ exception with description "in ng of lose(args->close_fd)threads.s.cve(ring of ect the number of threads.s: .XXXXXXXXXs. XXXer of threads.ch is: not d s:  <etect the number of threads..XXXXXX. number of threads.ect the number of threads.eption with description "hdir("mp/captured_stream.XXXXXXd_stream.XXXXXXs: ads.ed:  substring of eption with description "ream.XXXXXXected  failed: ) failed: (args->close_fd)d_ == -1string of tured_stream.XXXXXX) in L"..) in : s: . d)d: hich is: 
/tmp/captured_stream.XXXXXXthreads.string of the number of threads...) in mp/captured_stream.XXXXXXe(string of hich is: reads.string of threads.mber of threads. detect the number of threads.ir(" is: eption with description ") failed: ng of  ect the number of threads.ected se_fd)-1ad_fd_ == -1d) <XXXd_stream.XXXXXXnumber of threads.... ream.XXXXXXreads.in e(d_stream.XXXXXXct <am.XXXXXXd)ted eption with description ") failed: ads.ailed:  substring of e(XXXXXread_fd_ == -1iled: (".XXXXXXread_fd_ == -1) failed: d_ == -1ailed: ch is: string of  substring of aptured_stream.XXXXXXmber of threads.read_fd_ == -1threads. ...) in aptured_stream.XXXXXX) in yte object <d ads.d number of threads.s->close_fd)xception with description " L"eption with description "ring of 02Xch is: cve(t the number of threads.not  of d_ == -1ected Xobject <ng of  _fd_ == -1ed: ir("t the number of threads.er of threads. detect the number of threads. <xecve( failed: aptured_stream.XXXXXXads.e object <t the number of threads.led: threads.read_fd_ == -1/captured_stream.XXXXXXailed: reads. detect the number of threads.ads.mber of threads.d_ == -1ad_fd_ == -1ring of er of threads.: 
-1s..XXXXXXrgs->close_fd)_fd)e number of threads.d: am.XXXXXXt the number of threads.02X
etected  detect the number of threads.number of threads.ch is:  is: etected d)) failed: ..) in not s->close_fd)led: e(se_fd)cve(mber of threads.number of threads.
etect the number of threads.XXXf ring of .  of threads.ir("ailed: ailed: rd: e(rgs->close_fd)= -1d_ == -1..) in e(red_stream.XXXXXX) in hdir("ad_fd_ == -1ch is: _fd_ == -1ads.ads. object <ected aptured_stream.XXXXXX) failed: read_fd_ == -1/captured_stream.XXXXXXt the number of threads.ed:  of threads.ct <. red_stream.XXXXXX se_fd)ream.XXXXXXe(led: -1 XXXXXthreads.s.yte object <failed:  of e number of threads.... ring of lose(args->close_fd)in reads.. s.ch is:  failed:  <ed: reads.object <02XXXXse(args->close_fd)/tmp/captured_stream.XXXXXXse(args->close_fd) ...) in xception with description "++ exception with description "led: stream.XXXXXXmp/captured_stream.XXXXXXads.ads.eption with description "mber of threads.ng of e(etected threads.ad_fd_ == -1red_stream.XXXXXXstring of XXXXX_fd_ == -1lose(args->close_fd)XXXXXred_stream.XXXXXXcve(se_fd)er of threads.am.XXXXXXstring of  exception with description "reads. substring of d_stream.XXXXXX>close_fd)mp/captured_stream.XXXXXXd_ == -1 is: XXXXXe number of threads.... reads.(args->close_fd)/captured_stream.XXXXXX failed: stream.XXXXXXfailed: ads. ad_fd_ == -1s.string of Xect the number of threads.f threads.cve(ted er of threads.
 detect the number of threads. == -1ct < == -1in  substring of ads.eption with description "tured_stream.XXXXXXd: etect the number of threads. rhich is: /tmp/captured_stream.XXXXXX of threads. substring of /captured_stream.XXXXXXd_ == -1iled: xecve(t  ...) in .XXXXXX rgs->close_fd)ailed: iled: _fd)rgs->close_fd)d: number of threads.
mp/captured_stream.XXXXXXxception with description "ct </tmp/captured_stream.XXXXXXthreads.lose(args->close_fd)d_ == -1L"ream.XXXXXXled:  substring of ubstring of reads. <f eption with description "f number of threads.02Xthreads.ted cve(ed: se_fd) failed: ads. <number of threads.d  ubstring of (args->close_fd)mp/captured_stream.XXXXXXect the number of threads.etect the number of threads. failed: . threads.ng of  of ads.-1X of threads.ected .XXXXXXt the number of threads.ct <number of threads.stream.XXXXXXject <mber of threads.se_fd)d_stream.XXXXXXng of  exception with description "= -1d_stream.XXXXXXse_fd)xecve(am.XXXXXXs.ring of ected iled: d)xception with description "ir("mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXse(args->close_fd)cve((args->close_fd)_fd_ == -1XXX) failed: f d_stream.XXXXXX>close_fd)mber of threads.e number of threads.yte object <) failed:  .XXXXXXd .XXXXXXd (args->close_fd)reads.the number of threads.
ch is: ubstring of am.XXXXXX-byte object <the number of threads.xecve((args->close_fd)s:  of  of threads.ream.XXXXXXXect the number of threads.= -1 ...) in X-1e object < is:  substring of e object <ng of ream.XXXXXXxception with description "xecve() in d aptured_stream.XXXXXXs->close_fd)ct <ream.XXXXXXin  is: e number of threads.d_stream.XXXXXXer of threads.stream.XXXXXXyte object <-1failed: hich is: X) in stream.XXXXXX... Xtured_stream.XXXXXXred_stream.XXXXXXthe number of threads.number of threads.mp/captured_stream.XXXXXX.XXXXXXXXXXXect the number of threads.:  reads.f threads.rgs->close_fd)rgs->close_fd)mp/captured_stream.XXXXXXubstring of ect the number of threads._fd)rgs->close_fd)yte object <: ected  == -1XXXXXmber of threads.ads.se_fd)ted reads.d)xception with description "ubstring of Xd_stream.XXXXXXse_fd)d am.XXXXXXject <...  ...) in failed: e object <_fd)s.e number of threads.d_ == -1XXXXXXXXtured_stream.XXXXXXch is: ailed: yte object <  failed: Xd:  == -1ch is:  == -1reads.xecve(Xs.led: threads.iled: stream.XXXXXX of threads.lose(args->close_fd)XXXXXt the number of threads.se_fd)ch is:  is: etected -1s.eption with description "iled: s: -byte object < detect the number of threads. of ring of red_stream.XXXXXXads.ad_fd_ == -1d_stream.XXXXXX.XXXXXXf threads.not threads. == -1object <ct <("ted mber of threads.se_fd)e number of threads.failed: -1se(args->close_fd)xecve(... hdir("am.XXXXXXream.XXXXXXted ject < /captured_stream.XXXXXXcve(cve(ected tured_stream.XXXXXX.XXXXXX == -1
reads./tmp/captured_stream.XXXXXXe number of threads.>close_fd)-1s.ng of .XXXXXX exception with description "red_stream.XXXXXX detect the number of threads.: (args->close_fd)
d 02Xthreads. ...) in ... am.XXXXXXreads.r. >close_fd) detect the number of threads.) in e object <iled: failed: ++ exception with description "the number of threads.rgs->close_fd)not ads. ring of  ...) in ++ exception with description "etect the number of threads.se_fd)threads.s: /tmp/captured_stream.XXXXXX++ exception with description "cve(in (args->close_fd)02X hich is: /captured_stream.XXXXXXstring of XXXXXXXXXXng of  ...) in .XXXXXX= -1 <lose_fd)ng of threads.e object <eption with description "XXXthe number of threads.("object <) in d = -1etected red_stream.XXXXXXs.not xception with description "stream.XXXXXX>close_fd) is: f threads.iled: mp/captured_stream.XXXXXXring of (args->close_fd)t the number of threads.e number of threads.aptured_stream.XXXXXXX_fd_ == -1ect the number of threads.ted threads.etected e number of threads.rng of ted  detect the number of threads.ads.t the number of threads.ch is: in ng of t s.etect the number of threads.cve(ailed: reads.hich is: d_stream.XXXXXX-byte object < ...) in = -1r("/captured_stream.XXXXXXse_fd)(" failed:  of ailed: e object <t the number of threads. of threads.d_stream.XXXXXXyte object <L"mber of threads.XXXXXyte object <ring of object < of ted hdir("stream.XXXXXXd_ == -1f  (args->close_fd)ected ..) in hich is: am.XXXXXXd_ == -1s.d: ream.XXXXXX the number of threads. se_fd)xception with description "object <mp/captured_stream.XXXXXX
d rnumber of threads.not failed: ailed: ng of  reads.++ exception with description "... s->close_fd)er of threads.mp/captured_stream.XXXXXXe object <number of threads.tured_stream.XXXXXXads. == -1ir(" == -1e number of threads.am.XXXXXXmber of threads.s.number of threads. detect the number of threads.object <) failed: in  == -1) in d_ == -1_fd)ring of ected ailed:  of  failed: read_fd_ == -1ailed: ads.am.XXXXXXd: XXXXX.  is: etected ads.ream.XXXXXXs. detect the number of threads..  substring of ected ad_fd_ == -1-1xception with description ":  xception with description ">close_fd)_fd)s->close_fd)XXXXXxception with description "
L" <tured_stream.XXXXXX of er of threads.se_fd)
reads.lose_fd)cve(aptured_stream.XXXXXXd_ == -1++ exception with description "e(XXXXX is: threads.led: ir("ailed: iled: ted rgs->close_fd)cve(e number of threads.xception with description ") in ted ads.iled: ++ exception with description ". XXXXXs.the number of threads.number of threads.ir("t the number of threads.s->close_fd)reads.hich is: lose_fd)) in ream.XXXXXX detect the number of threads./tmp/captured_stream.XXXXXXubstring of L"yte object <ng of e object <ected Xlose_fd) of threads. <ream.XXXXXXobject <d) se(args->close_fd)ads.e object <ir("in object <in the number of threads.d threads.) in t ject <ads.red_stream.XXXXXXd)iled: ..) in 02X..) in 
  exception with description " stream.XXXXXXring of ed: e number of threads.f threads. exception with description " ...) in ads.s.am.XXXXXX-byte object <_fd) ...) in e(_fd)XXXng of ed: d_ == -1threads.lose(args->close_fd)/captured_stream.XXXXXXL"cve(ream.XXXXXXlose_fd)er of threads.the number of threads.s.Xhich is: rgs->close_fd)se(args->close_fd)_fd)ch is: led: threads.(args->close_fd) of lose(args->close_fd)ad_fd_ == -1d_ == -102Xled: string of d:  ...) in ..) in s.t the number of threads.led:  detect the number of threads.stream.XXXXXXeption with description "e number of threads._fd_ == -1XXXe number of threads.tured_stream.XXXXXXir("lose(args->close_fd)se_fd) exception with description " exception with description "the number of threads.-1XXX of  ...) in in red_stream.XXXXXXe number of threads./tmp/captured_stream.XXXXXXs: ads.ads.... aptured_stream.XXXXXX...  ... XL"rected ed: s.ed: reads.ubstring of mber of threads.r detect the number of threads.rgs->close_fd): xecve( detect the number of threads.= -1lose(args->close_fd)_fd_ == -1XXXmber of threads.ads.read_fd_ == -1rgs->close_fd)/captured_stream.XXXXXXd: xception with description "s.threads.hdir(" detect the number of threads.se_fd)..) in read_fd_ == -1ailed: failed: am.XXXXXX..) in  ...) in red_stream.XXXXXX of threads./tmp/captured_stream.XXXXXX ...) in s.X -102Xeption with description "
 threads.s->close_fd)se_fd)ailed: not aptured_stream.XXXXXXaptured_stream.XXXXXXthreads.reads.d_ == -1 detect the number of threads.ed:  exception with description "("eption with description "tured_stream.XXXXXXstream.XXXXXXd)ected ected f e object <etected object <yte object <_fd)
 exception with description "se_fd)ed: object <ad_fd_ == -1etect the number of threads. failed: ads.ect the number of threads.("se(args->close_fd)_fd)s.lose_fd)the number of threads. d: 02Xcve(/tmp/captured_stream.XXXXXX substring of hich is: ..) in  exception with description "mber of threads.hdir("  object <etected ad_fd_ == -1-byte object <ected e(in ads. of threads.cve( failed: ailed: ailed: /tmp/captured_stream.XXXXXXject <ad_fd_ == -1..) in d_ == -1) in s.e number of threads.threads.aptured_stream.XXXXXXt hich is: _fd_ == -1L"lose_fd)/tmp/captured_stream.XXXXXXtured_stream.XXXXXXer of threads.e(>close_fd)f threads.s.rgs->close_fd) ...) in = -1/captured_stream.XXXXXXhich is: ream.XXXXXXse_fd) substring of mp/captured_stream.XXXXXXhich is: eption with description "s.threads._fd) == -1 is: mber of threads.: s: stream.XXXXXXxception with description "ailed: XXXXXad_fd_ == -1ad_fd_ == -1s->close_fd) Xred_stream.XXXXXXject < failed:  /tmp/captured_stream.XXXXXXad_fd_ == -1yte object <s->close_fd) of yte object <:  of etect the number of threads.
/tmp/captured_stream.XXXXXX is: f threads.xecve(s. detect the number of threads.lose_fd)in ++ exception with description "XXXXXthe number of threads. detect the number of threads.lose_fd)) in hdir("Xthe number of threads.ads. e(d_ == -1not -byte object <ject <failed: etect the number of threads.d_stream.XXXXXXed: ++ exception with description ">close_fd)ted red_stream.XXXXXXd_ == -1ect the number of threads.stream.XXXXXXs.ch is: ..) in number of threads.xecve((" == -1number of threads.ed: er of threads.ed: (args->close_fd) == -1 exception with description "ed: ad_fd_ == -1rgs->close_fd)..) in  substring of ... stream.XXXXXX("se_fd)reads.stream.XXXXXXreads. substring of ubstring of reads.
 e object <lose_fd)ailed: /captured_stream.XXXXXX) failed: d_stream.XXXXXXct < is: -byte object <reads.cve(etect the number of threads.L" ...) in the number of threads. substring of e number of threads.ailed: xecve(XXXXXf threads.etect the number of threads.threads.ubstring of ed: etected ads.-1yte object <the number of threads.-1iled: ch is: ted ... e number of threads.cve(in : -1yte object < is: etected ad_fd_ == -1++ exception with description "threads.mp/captured_stream.XXXXXXxception with description "xecve(Xetect the number of threads.led: in  of threads.Xetect the number of threads.-1s.etect the number of threads._fd_ == -1) in  <ads.threads.se(args->close_fd)yte object <xecve((args->close_fd)aptured_stream.XXXXXX02X f threads.d:  of stream.XXXXXXstring of d)yte object <.XXXXXXeption with description " yte object < == -1 failed: er of threads.t the number of threads.lose(args->close_fd): hich is: etect the number of threads.threads.rgs->close_fd)reads.d)hdir("yte object <string of XXXd: ed: ct <se(args->close_fd)ct <t tured_stream.XXXXXX ...) in (args->close_fd)reads.>close_fd)ect the number of threads. exception with description "_fd)/captured_stream.XXXXXX mp/captured_stream.XXXXXXe object <Xd)cve(.XXXXXXch is: Xcve(se_fd)-1Xhdir("ct < of ir("etect the number of threads.02X... mp/captured_stream.XXXXXXmber of threads.led: stream.XXXXXXer of threads.reads.failed: e number of threads.) in rgs->close_fd)e object <ct <ailed: ) failed: not string of aptured_stream.XXXXXX..) in t iled: XXXXX. reads.se_fd)the number of threads.ject <failed: object <f threads.-byte object <02Xd)L"se_fd)se_fd)string of s: s.rgs->close_fd)etect the number of threads.string of ad_fd_ == -1lose(args->close_fd) of threads.the number of threads.-byte object <d object <(" is: read_fd_ == -1e(threads.ect the number of threads. of threads.XXXXXstream.XXXXXXf threads.ad_fd_ == -1the number of threads.aptured_stream.XXXXXXs.yte object <lose_fd)e object <. L"XXXXX detect the number of threads.) in xception with description " <++ exception with description "mber of threads.reads.the number of threads.s.d_ == -1threads.) failed: ject <aptured_stream.XXXXXXject <aptured_stream.XXXXXXaptured_stream.XXXXXXd f threads.e object < substring of d ads.tured_stream.XXXXXXads.se_fd)ads.(args->close_fd): ads.XXX exception with description ". ected  exception with description "ct <eption with description "ir("cve(ir("ad_fd_ == -1.XXXXXXXXX02Xject <cve(ch is: d_ == -1led: stream.XXXXXXetect the number of threads.ubstring of /captured_stream.XXXXXXe object <.XXXXXXch is: s.etect the number of threads.lose_fd) ads. ...) in led: _fd_ == -1er of threads.etected  <e object <hich is: e(ch is: se(args->close_fd)xception with description "in  detect the number of threads.am.XXXXXX of 02X is: t se_fd) ...) in  mber of threads.-1: er of threads._fd_ == -1) in ject < is: ) in   is: er of threads.) failed: _fd)(args->close_fd)... ream.XXXXXXt the number of threads.se(args->close_fd)rct < ailed: tured_stream.XXXXXXxecve(t 02XXs.object <reads.reads.e object <stream.XXXXXX detect the number of threads.ring of xecve(d)iled: e(L"string of se_fd)ed: etected -1 detect the number of threads. substring of ads.ch is:  <yte object <the number of threads. of threads.ring of ect the number of threads. re number of threads. exception with description "number of threads.d_ == -1e number of threads. detect the number of threads.d) ...) in f threads.etected ch is:  == -1hdir("ads.t the number of threads.s: d)hdir("ailed: .XXXXXX) in -byte object <hich is: red_stream.XXXXXX <ect the number of threads./tmp/captured_stream.XXXXXX= -1led: s.red_stream.XXXXXXads.e(("led: t the number of threads. ject <s->close_fd)++ exception with description "ring of Xe number of threads.lose_fd)e number of threads.d: _fd_ == -1er of threads.
.XXXXXXads.ir(" tured_stream.XXXXXXch is: etect the number of threads._fd)stream.XXXXXXted eption with description "lose_fd)ream.XXXXXXmp/captured_stream.XXXXXXream.XXXXXXmber of threads.t : ads.ed: s: se_fd)02Xailed: ..) in d_stream.XXXXXX: ads.ed: threads.t ) in f threads. ...) in  of threads.lose(args->close_fd)ailed: t etected t the number of threads.led: e(object <yte object <e object <= -1++ exception with description "t the number of threads.mber of threads.s: d_stream.XXXXXX.XXXXXXd_stream.XXXXXXX= -1ring of rmp/captured_stream.XXXXXXng of f d)rxecve( detect the number of threads.r... XXXer of threads./tmp/captured_stream.XXXXXX e object <L"/tmp/captured_stream.XXXXXXred_stream.XXXXXXream.XXXXXX.XXXXXX exception with description ".XXXXXXring of .XXXXXX= -1 ...) in s:  == -1the number of threads.number of threads.ads.the number of threads.s->close_fd)mp/captured_stream.XXXXXXnumber of threads.02X exception with description "ted threads.XXXXXream.XXXXXX: f ct <X++ exception with description "d 
ad_fd_ == -1read_fd_ == -1ted ream.XXXXXX(args->close_fd)..) in  substring of rthe number of threads. Xect the number of threads. of _fd_ == -1ch is:  == -1lose_fd)ch is: ected hdir("-byte object < substring of 02Xread_fd_ == -1iled: ed: ch is: hdir("reads.led:  number of threads.am.XXXXXXfailed: t d: ected ubstring of reads.ected reads.xecve(in threads.ir("cve(ads.d_ == -1ected xception with description "ring of ad_fd_ == -102Xlose_fd)
lose_fd)cve( of in ed: ream.XXXXXXr (args->close_fd) ++ exception with description "ailed: Xads./tmp/captured_stream.XXXXXXstring of rgs->close_fd)("s: _fd_ == -1ject <ads.... Xam.XXXXXXring of /captured_stream.XXXXXXir("
ed:  == -1object <f threads.ject < d_ == -1 _fd_ == -1d_ == -1 failed: tured_stream.XXXXXXstring of string of am.XXXXXXL"ch is: f threads.X s.etect the number of threads.t er of threads.ads.s.e object <ring of ch is: ream.XXXXXXd_ == -1(args->close_fd) of threads.) in  substring of am.XXXXXXng of d_ == -1 is: ng of /captured_stream.XXXXXXeption with description "lose(args->close_fd)... led: e number of threads.d_ == -1f threads.(args->close_fd)er of threads.("read_fd_ == -1 is: hdir("in ailed: lose(args->close_fd)aptured_stream.XXXXXXL"L"mber of threads.reads.++ exception with description "ch is: L"ng of -byte object <yte object <iled: XXXnot yte object <ream.XXXXXXd)t the number of threads.string of read_fd_ == -1ct < substring of s: _fd_ == -1 ted stream.XXXXXX
d_ == -1ected ring of mber of threads.xception with description "se_fd)mp/captured_stream.XXXXXXailed: ring of lose_fd)d)) in -byte object < is: ..) in Xed: e(ad_fd_ == -1(" of threads. detect the number of threads.L"d_ == -1: d)..) in _fd)cve(stream.XXXXXXt mber of threads.L"led: the number of threads.d reads.d: ir("ads.XXXXXlose_fd)= -1d)reads.etected ect the number of threads.e object <mber of threads.Xcve(Xhich is: hdir("Xrgs->close_fd)se(args->close_fd)ads.ch is: se(args->close_fd)X s: s.ad_fd_ == -1object <hdir("-1red_stream.XXXXXXaptured_stream.XXXXXXled: read_fd_ == -1d:  ch is: reads.ect the number of threads.ected object <mber of threads.mber of threads.ng of er of threads.se_fd)ad_fd_ == -1ring of : ject <L" red_stream.XXXXXX. /captured_stream.XXXXXXads.ng of _fd_ == -1t the number of threads.threads. yte object </tmp/captured_stream.XXXXXXailed: hdir("led: ..) in ++ exception with description "lose_fd)threads.er of threads. is: d)>close_fd)in reads. detect the number of threads.threads.s->close_fd)s._fd)ng of  substring of eption with description "xecve(= -1ted  threads.ng of e object < failed: read_fd_ == -1led: >close_fd)) in ubstring of ..) in ream.XXXXXX <-1L"se_fd)d_ == -1ch is: /tmp/captured_stream.XXXXXXyte object <ubstring of cve(hich is: mber of threads.e object <hdir("-byte object < tured_stream.XXXXXX == -1ted ailed: object <.XXXXXX: L"X: ... /captured_stream.XXXXXXhdir("iled:  ir("reads.hdir("d = -1t the number of threads.XXXstream.XXXXXXaptured_stream.XXXXXXstream.XXXXXXthreads.reads.lose_fd)= -1ubstring of reads.-1se(args->close_fd)xception with description " == -1_fd_ == -1..) in .XXXXXXse_fd)s:  substring of = -1se(args->close_fd)s: s->close_fd) is: cve(threads.lose_fd)hdir("t .XXXXXX..) in etected mber of threads.etected ..) in e number of threads.r("("not (args->close_fd)-1threads.ed: ng of rXobject <s: eption with description " <s:  is: t f  of threads.ject < == -1s->close_fd) of threads.ailed:  is: am.XXXXXXtured_stream.XXXXXXX is: lose_fd)... the number of threads.++ exception with description "Xeption with description ") failed: ("..) in s->close_fd) xception with description "etected ed: _fd_ == -1etect the number of threads.eption with description " of .XXXXXXads.>close_fd)("= -1not e number of threads.read_fd_ == -1d)ailed: led:  t the number of threads.read_fd_ == -1ad_fd_ == -1 detect the number of threads.("led: (args->close_fd) exception with description "("lose(args->close_fd): -byte object <ad_fd_ == -1lose_fd)s.ch is: ring of stream.XXXXXX. .XXXXXXse_fd)/captured_stream.XXXXXX substring of  failed: 
ct <ubstring of  ++ exception with description "("read_fd_ == -1... ) in d d)s.cve(..) in ected -byte object <se_fd)ect the number of threads.led: ng of ject <se(args->close_fd)stream.XXXXXXaptured_stream.XXXXXXlose(args->close_fd)hdir("d (args->close_fd)threads.lose_fd)object <-byte object <("ng of threads.ng of  == -1ch is: failed: f threads.XX of threads.XXXXX) failed: f mber of threads.read_fd_ == -1ject <ailed:  is: lose(args->close_fd)s->close_fd)-byte object <xception with description "tured_stream.XXXXXXetected ected ject <red_stream.XXXXXXreads.ream.XXXXXX...  er of threads.ads. exception with description "threads.ads.X_fd_ == -1hich is: >close_fd): ad_fd_ == -1ed: ..) in ected ir("reads.e object <.XXXXXXfailed: xecve( failed: lose_fd)stream.XXXXXXailed: Xaptured_stream.XXXXXXse(args->close_fd)etected ed: : eption with description "number of threads.lose_fd)++ exception with description ">close_fd)ubstring of ring of se(args->close_fd)er of threads.xecve() failed: led: ("d_ == -1r of ... failed: yte object <hich is: red_stream.XXXXXXthreads.stream.XXXXXX ...) in stream.XXXXXX= -1object <ads.aptured_stream.XXXXXX mp/captured_stream.XXXXXXthreads.se_fd)rgs->close_fd).XXXXXXlose_fd)d: ject <Xt xception with description "Xd: stream.XXXXXXe( <d: ream.XXXXXXted mber of threads.ted  of threads.aptured_stream.XXXXXX++ exception with description "xecve(hich is: r ...) in Xailed:  failed: X of /tmp/captured_stream.XXXXXX  exception with description ">close_fd)read_fd_ == -1ailed: s: _fd)ubstring of : ..) in mber of threads._fd_ == -1not s: read_fd_ == -1(args->close_fd)e number of threads.ads.e number of threads.-byte object <lose_fd)xecve(xception with description "xception with description "hich is: mp/captured_stream.XXXXXX-byte object <in ct <d: rgs->close_fd)object <-1Xthe number of threads. exception with description "hdir("ream.XXXXXXetect the number of threads. == -1= -1 reads.d ect the number of threads.= -1t ream.XXXXXXeption with description ".XXXXXXread_fd_ == -1-byte object < of threads.hich is: e number of threads. ...) in reads.iled:   of mp/captured_stream.XXXXXXfailed: d_ == -1mp/captured_stream.XXXXXXthreads.XXX) failed: the number of threads.hich is: s: ads.) in e object <etect the number of threads.-1ads.number of threads.am.XXXXXXject <f L"mp/captured_stream.XXXXXX) failed:  of threads.e object <t ..) in  of threads. d etected lose(args->close_fd)_fd)/tmp/captured_stream.XXXXXXam.XXXXXXthreads.s.ch is: ads.xception with description "lose_fd): reads./tmp/captured_stream.XXXXXXd)f aptured_stream.XXXXXXmp/captured_stream.XXXXXXthreads.in (args->close_fd)d_stream.XXXXXXin : yte object <ring of am.XXXXXX is: f hich is: >close_fd)s: f se_fd)) failed: threads. == -1 lose(args->close_fd)f threads.rgs->close_fd)ch is: red_stream.XXXXXXX == -1iled: ect the number of threads. of  of mber of threads.
d: xecve(_fd)ected threads.etected rgs->close_fd)hich is: iled: not  <ect the number of threads.: read_fd_ == -1_fd)xecve(. Xs:  substring of Xlose_fd)++ exception with description "f aptured_stream.XXXXXXd: ++ exception with description "stream.XXXXXXmp/captured_stream.XXXXXXred_stream.XXXXXXted ect the number of threads.number of threads.stream.XXXXXXeption with description "t  failed: ng of ect the number of threads.lose_fd)ad_fd_ == -1am.XXXXXXobject <XXXXX == -1Xled: t failed:  < <t ... = -1ad_fd_ == -1. lose(args->close_fd)yte object <ected ads.d_stream.XXXXXXcve(the number of threads.mp/captured_stream.XXXXXX_fd_ == -1-byte object <ir("in = -1t the number of threads.ir("d -1red_stream.XXXXXXX == -1ted ted ..) in d rgs->close_fd)not  exception with description "ads.eption with description " is: string of ir("XXX>close_fd)er of threads.f threads..XXXXXXring of f threads.L"ad_fd_ == -1_fd_ == -1 == -1ject <ect the number of threads. <se_fd)er of threads.ected ads.ubstring of failed: r exception with description "threads._fd_ == -1 == -1ubstring of /captured_stream.XXXXXX == -1rgs->close_fd) ...) in lose(args->close_fd)= -1reads.>close_fd)e(not led:  of threads.. ++ exception with description "f threads.ed: failed: r) in d ... .XXXXXX..) in  of threads.(args->close_fd).XXXXXXyte object < == -1ch is: f L"... d_stream.XXXXXX is: hdir("ads.e( of threads. == -1r_fd_ == -1ads.ng of Xmp/captured_stream.XXXXXX-1ect the number of threads.mp/captured_stream.XXXXXXnumber of threads. failed:  detect the number of threads...) in  _fd_ == -1("the number of threads._fd) the number of threads.etect the number of threads. ...) in hdir("XXXlose(args->close_fd)s.se_fd)) failed: read_fd_ == -1t the number of threads.d: . f threads._fd_ == -1mp/captured_stream.XXXXXXnumber of threads.) in .XXXXXXread_fd_ == -1) failed: in string of ed: reads.XXXred_stream.XXXXXX is: etected lose_fd)not object <.XXXXXXhich is: se_fd)object <ad_fd_ == -1hich is:  failed:  XXXXXad_fd_ == -1cve(lose_fd)reads.ted string of 
ected ject <led: object <ected lose_fd)hich is: = -1lose_fd)t e number of threads.er of threads.d_stream.XXXXXXthreads.ring of >close_fd)f threads.reads.red_stream.XXXXXX == -1e number of threads.ailed: red_stream.XXXXXXin  detect the number of threads.failed: >close_fd)string of t the number of threads.se_fd)L"d ailed:  failed: ed: ad_fd_ == -1-1yte object <number of threads. in d: ir("aptured_stream.XXXXXX of the number of threads.not  of stream.XXXXXXmber of threads.led: rgs->close_fd) detect the number of threads.ubstring of d_stream.XXXXXX of threads.f threads.cve(red_stream.XXXXXXject <(args->close_fd)mber of threads.number of threads.ted s.) failed: ted ad_fd_ == -1(args->close_fd) of ng of  of threads. exception with description "  <etected _fd_ == -1xecve(lose(args->close_fd)L"number of threads. of led:  >close_fd)stream.XXXXXXmp/captured_stream.XXXXXXled: tured_stream.XXXXXXiled: se_fd)ir("read_fd_ == -1ed: read_fd_ == -1am.XXXXXXnumber of threads.lose_fd)d) == -1 substring of  of  of Xetect the number of threads.object <: se(args->close_fd)Xir("..) in >close_fd)failed: ads. of  e number of threads.-byte object <eption with description "threads.etect the number of threads.ads.  is: ring of d_stream.XXXXXXe(am.XXXXXX.XXXXXX_fd)e( ject <s->close_fd)Xnumber of threads.ads.>close_fd)eption with description "ubstring of in L"= -1led: /tmp/captured_stream.XXXXXXX substring of  is: ad_fd_ == -1 d_stream.XXXXXX) failed: cve( of in ads.mber of threads.-byte object <iled: hdir("e(threads.er of threads.aptured_stream.XXXXXXXXX/captured_stream.XXXXXXch is: the number of threads.ad_fd_ == -1d: yte object <_fd_ == -1d_stream.XXXXXXaptured_stream.XXXXXXected hdir("am.XXXXXX++ exception with description "ed: s.d_stream.XXXXXXads.failed: d failed: L"hdir("xception with description " failed:  of threads.s: lose(args->close_fd)t the number of threads.d_ == -1: ected s->close_fd)e number of threads.ailed: .XXXXXX is: t s: iled:  of threads.er of threads. == -1-byte object <) failed:  exception with description "Xnumber of threads.d_stream.XXXXXXobject <.XXXXXXrstream.XXXXXX...  of threads.threads.d_stream.XXXXXXXXXXX == -1hdir("-1L"d)s: ubstring of ) in  <t the number of threads.e object </captured_stream.XXXXXXng of ted f Xthreads.ir(" substring of mp/captured_stream.XXXXXXobject <Xetected red_stream.XXXXXXf threads.aptured_stream.XXXXXX) in  threads. == -1(args->close_fd)ng of yte object <ng of read_fd_ == -1(args->close_fd)aptured_stream.XXXXXXs->close_fd)tured_stream.XXXXXXxecve(XXXXXcve(string of  == -1
e(ed: xception with description "led: ) failed: ... threads._fd_ == -1XXX++ exception with description " exception with description "stream.XXXXXX++ exception with description "ailed: -1_fd_ == -1e(ct < of threads.X(args->close_fd) of threads.etected tured_stream.XXXXXX < exception with description "++ exception with description "er of threads.
ng of  exception with description "read_fd_ == -1lose(args->close_fd)d_ == -1XXXXXs.stream.XXXXXXad_fd_ == -1XXX of threads. ...) in s.ted  of threads._fd_ == -1xception with description "d_stream.XXXXXXt xecve( ct </captured_stream.XXXXXXthreads.cve(lose(args->close_fd) substring of eption with description " stream.XXXXXX failed: ch is: ir("e(lose_fd)ected ..) in   substring of f ch is: ..) in rgs->close_fd) exception with description " yte object <..) in hich is:  ...) in threads.iled: d: xecve(ted ted the number of threads.etect the number of threads. ...) in  <ted e number of threads.t the number of threads.++ exception with description "_fd_ == -1e(se_fd) ailed: iled: threads. of threads.ng of  -1ct <reads./tmp/captured_stream.XXXXXX detect the number of threads. .XXXXXX stream.XXXXXXd: t f threads. _fd) exception with description "etect the number of threads./captured_stream.XXXXXXailed: f . . ) failed: e object <etected 02Xs.XXX-1xecve(-1se_fd). eption with description "e object <in s->close_fd) substring of s->close_fd)d_ == -1aptured_stream.XXXXXXs.ailed: er of threads.the number of threads.ads.f threads.ads._fd_ == -1hich is: -byte object <s.lose(args->close_fd)threads. failed: ) failed: am.XXXXXXd_stream.XXXXXX("/captured_stream.XXXXXXs->close_fd)red_stream.XXXXXX.XXXXXXs.led: _fd)ct <s: XXXread_fd_ == -1. f threads.t s.f threads.s.ailed: threads..  failed:  failed: s.f am.XXXXXX/captured_stream.XXXXXXf ads.failed: reads.aptured_stream.XXXXXX(args->close_fd)ads.d)d: etected cve(>close_fd)XXXXXubstring of _fd) failed: ("= -1 is: string of etected L"se_fd)s: xception with description " substring of XXXs->close_fd)f (args->close_fd)xception with description "d:  == -1led: /tmp/captured_stream.XXXXXXobject <02XXXXXX: mp/captured_stream.XXXXXX detect the number of threads.cve(X  read_fd_ == -1XXXXXhich is: etected >close_fd)ir("
) failed:   of threads.XXX_fd)not ubstring of .  etect the number of threads.am.XXXXXXetect the number of threads.t ch is: ("stream.XXXXXXXhich is: led: /captured_stream.XXXXXX) in L"= -1d) substring of  of  <tured_stream.XXXXXX++ exception with description "rgs->close_fd)threads.f threads.f d ailed:  not  detect the number of threads.se(args->close_fd)d)ch is:  exception with description "iled: aptured_stream.XXXXXXXXXXXXir("s: -byte object < of ("ject <iled: = -1se(args->close_fd) failed: -1rgs->close_fd)XXXXXse_fd) == -1t the number of threads. of ("ads.-1 : etect the number of threads.e number of threads.-byte object < of threads.>close_fd)rmber of threads.s->close_fd)mp/captured_stream.XXXXXXe(s: _fd) ... ed:  ++ exception with description "_fd_ == -1tured_stream.XXXXXXring of hdir("02Xam.XXXXXXt the number of threads./tmp/captured_stream.XXXXXXfailed: Xred_stream.XXXXXXd)s.ng of -byte object <ailed: red_stream.XXXXXXobject <in ++ exception with description "d_stream.XXXXXXrgs->close_fd)_fd)rlose(args->close_fd)-1 of threads.se(args->close_fd)threads.ring of eption with description "ject <= -1threads.ream.XXXXXX= -1the number of threads.hich is: ad_fd_ == -1.  ct <aptured_stream.XXXXXXobject <..) in ream.XXXXXX-byte object <-byte object <object <ubstring of  substring of  iled: -byte object <XXXXXad_fd_ == -1-1XXXject <(args->close_fd)  read_fd_ == -1s: XXX) in the number of threads.ed:  detect the number of threads..  tured_stream.XXXXXXad_fd_ == -1f threads.++ exception with description "ect the number of threads. exception with description ".XXXXXX/captured_stream.XXXXXXlose_fd)) in s->close_fd)ream.XXXXXXd_ == -1d: mp/captured_stream.XXXXXXthreads. ...) in Xse_fd)d)XXXXX ...) in xecve((" is: iled: read_fd_ == -1XXXXXreads.ct <e( is: ads.cve(d). : d_stream.XXXXXX_fd)r-byte object <number of threads.e(reads.aptured_stream.XXXXXXnot stream.XXXXXXer of threads.(args->close_fd)) in mber of threads.L"s:  exception with description " detect the number of threads.am.XXXXXX of threads. /captured_stream.XXXXXX: etect the number of threads.e( of . -byte object <red_stream.XXXXXX ected f etected am.XXXXXX_fd_ == -1(args->close_fd)ted d_stream.XXXXXX02X of object <the number of threads.++ exception with description "ed: ... : s. iled: lose(args->close_fd) ...) in /captured_stream.XXXXXXng of XXXad_fd_ == -1rgs->close_fd)ed: -byte object <threads.d: se(args->close_fd)ream.XXXXXXaptured_stream.XXXXXX exception with description ") failed: -byte object <s->close_fd)ailed:  substring of mber of threads.ir("/tmp/captured_stream.XXXXXXmber of threads. exception with description " exception with description "reads. detect the number of threads.f hdir("ream.XXXXXXthe number of threads.am.XXXXXXin _fd)02Xected object <) in = -1mp/captured_stream.XXXXXX_fd)..) in XXXxception with description "ads.ng of reads.hdir("am.XXXXXX. ) in s.) in t the number of threads.s: X of threads.the number of threads.s. <mp/captured_stream.XXXXXXread_fd_ == -1etect the number of threads.er of threads.XXXream.XXXXXX..) in ect the number of threads. of >close_fd)ream.XXXXXX ...) in ad_fd_ == -1threads.led: etected e object <rgs->close_fd)ads.-1++ exception with description "red_stream.XXXXXX... read_fd_ == -1d_stream.XXXXXX ...) in 
s->close_fd)reads. detect the number of threads.: xception with description "am.XXXXXXd)ject <d_stream.XXXXXX: cve( mber of threads.threads.ted xception with description " of _fd_ == -1yte object <er of threads.ct <cve(ailed: L"ream.XXXXXXthreads.t failed: s: etected ailed: e number of threads.red_stream.XXXXXXd: ject <(args->close_fd) of threads.xception with description "f am.XXXXXX) failed:  <ailed: e(hich is: _fd_ == -1not the number of threads.= -1 XXXailed: hich is: s.xception with description " substring of ad_fd_ == -1... ream.XXXXXXs->close_fd)aptured_stream.XXXXXXse(args->close_fd):  == -1reads.mp/captured_stream.XXXXXXxception with description "XXXailed:  ...) in etected ect the number of threads.:  XXXXX..) in f threads.number of threads.ng of iled: reads. is:  of .XXXXXX exception with description "etect the number of threads.not -byte object < exception with description "e object <ect the number of threads.cve(e(= -1threads. ch is: -byte object <ads.L"XXXXXer of threads.read_fd_ == -102Xs.= -1d: am.XXXXXXng of  failed: stream.XXXXXXfailed: ) in  X.  .XXXXXX rgs->close_fd)yte object <(" detect the number of threads.not not  stream.XXXXXXobject <stream.XXXXXX substring of lose(args->close_fd)d_ == -1(args->close_fd) exception with description "etected am.XXXXXXe(... ted d_stream.XXXXXXect the number of threads.ubstring of se_fd)e number of threads.ream.XXXXXXct <) in  of /captured_stream.XXXXXXs->close_fd)d_ == -1s.d) of  detect the number of threads.ted ++ exception with description " == -1mber of threads.yte object <hich is: 02Xlose(args->close_fd) of -1failed: se(args->close_fd)string of ream.XXXXXXd_ == -1e( etect the number of threads.d_stream.XXXXXX/tmp/captured_stream.XXXXXXt read_fd_ == -1iled:  ...) in cve(eption with description "yte object <ed: e(ads.e object <not reads.er of threads.hich is: am.XXXXXXobject <hdir("aptured_stream.XXXXXXject <XXXXX substring of the number of threads.-byte object <(". = -1aptured_stream.XXXXXXd_stream.XXXXXX . reads. of threads.d) exception with description "led: mp/captured_stream.XXXXXXlose_fd)ch is: ++ exception with description "tured_stream.XXXXXXs.f ected _fd_ == -1/tmp/captured_stream.XXXXXX is: ream.XXXXXXXXXXX: threads.se_fd)number of threads.L"led: eption with description "rrgs->close_fd)rgs->close_fd)hich is: xecve( of yte object <>close_fd)>close_fd)reads.string of e object <(args->close_fd)e object <) failed:  of threads.s._fd_ == -1se(args->close_fd)ch is: = -1 of threads./tmp/captured_stream.XXXXXXXyte object <XXXxception with description "ubstring of e number of threads. ad_fd_ == -1ads.= -1(args->close_fd)f mber of threads.ject <) in mp/captured_stream.XXXXXX of xecve(robject <mber of threads.) in _fd)ad_fd_ == -1d_stream.XXXXXXthe number of threads.d)reads.("t ) in d: ailed: >close_fd)yte object <ring of number of threads.red_stream.XXXXXX... f threads...) in ) failed: mber of threads.e object <ads. failed: ubstring of ject <xecve(reads.t X/tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXXse_fd)Xd)in d_stream.XXXXXXe(f threads.hich is: _fd_ == -1 of threads.cve(-byte object < <Xthreads. failed: ..) in .XXXXXX/captured_stream.XXXXXXted Xtured_stream.XXXXXX == -1rgs->close_fd)ailed: d_ == -1in read_fd_ == -1 of aptured_stream.XXXXXXstring of Xads.) failed: se(args->close_fd)t (args->close_fd)ubstring of : object <Xse(args->close_fd)) in  detect the number of threads.aptured_stream.XXXXXXir("red_stream.XXXXXXe object <. ) in /tmp/captured_stream.XXXXXX(args->close_fd).XXXXXXetect the number of threads.d: mp/captured_stream.XXXXXX-1string of object <e number of threads.XXXlose_fd)Xhdir("ject <d_ == -1(") failed: ir("lose(args->close_fd) <++ exception with description "s: aptured_stream.XXXXXXe object <_fd_ == -1_fd) xecve(ch is: -1lose_fd)cve( is: L" etect the number of threads._fd_ == -1xecve(lose(args->close_fd):  ...) in ailed: xception with description "...  substring of ch is: ) failed:  failed: (args->close_fd)t  ...) in ads.hdir("xecve(yte object <ng of ad_fd_ == -1eption with description " ...) in string of string of 02Xtured_stream.XXXXXX/tmp/captured_stream.XXXXXXled: f d_ == -1ads.mp/captured_stream.XXXXXX) failed: ) failed: ad_fd_ == -1 threads. ...) in etected stream.XXXXXX(args->close_fd)threads.: _fd_ == -1XXXXXeption with description "ect the number of threads.) in L"_fd_ == -1rgs->close_fd)ch is: led: iled:  ed: mber of threads.... e number of threads.se_fd)yte object <_fd)reads.mber of threads.lose(args->close_fd)ream.XXXXXXe object <X ...) in XXXad_fd_ == -1etect the number of threads.ect the number of threads.ng of ch is: s.e(ed: eption with description "s.>close_fd)rgs->close_fd)hich is: ject < detect the number of threads.XXXXXng of ++ exception with description "02Xetected threads.se_fd)object <reads.hich is: se_fd)d: 
am.XXXXXXe number of threads. of threads.-1xecve(eption with description "-1in r/captured_stream.XXXXXXd)ed: iled: _fd_ == -1ring of lose(args->close_fd)ed:  detect the number of threads.er of threads. <mp/captured_stream.XXXXXXd)in e object <e(xecve(02Xected the number of threads.= -1= -1in read_fd_ == -1 ...) in string of xecve(ream.XXXXXX++ exception with description "XXXXXse(args->close_fd)ed: tured_stream.XXXXXX..) in t  ...) in threads.02Xmp/captured_stream.XXXXXXXXXXXream.XXXXXXad_fd_ == -1cve(..) in f threads. ...) in _fd)ct <xception with description "ect the number of threads.am.XXXXXXads.s.mber of threads.number of threads.string of lose(args->close_fd)L"t cve(d)/captured_stream.XXXXXXlose(args->close_fd)se(args->close_fd)number of threads.ch is: rgs->close_fd)= -1etected aptured_stream.XXXXXXyte object <s->close_fd)(" is: _fd)ir(": threads.d: t the number of threads.not failed: e( threads.02Xt the number of threads.ir("ch is: lose(args->close_fd)XXXect the number of threads.am.XXXXXX... stream.XXXXXX... aptured_stream.XXXXXXubstring of rgs->close_fd)Xs.led:  of threads.d_ == -1ad_fd_ == -1. am.XXXXXXlose(args->close_fd)= -1reads.failed: red_stream.XXXXXX02Xse(args->close_fd)xception with description "hdir("s: red_stream.XXXXXX-1se(args->close_fd)) in XXXXXse_fd)d_stream.XXXXXXxecve(led: ject <number of threads.ect the number of threads.lose_fd)ads.... red_stream.XXXXXX-1lose_fd)led: ads.ailed: object <e number of threads.ng of lose_fd)s: ads.e(led: hdir("reads.ected ailed: /tmp/captured_stream.XXXXXXng of stream.XXXXXXlose(args->close_fd)ected /captured_stream.XXXXXXd: s->close_fd)02Xng of f threads./tmp/captured_stream.XXXXXX of in : etected read_fd_ == -1yte object <XXXXXt ir("ected read_fd_ == -1xecve(ads.cve(ad_fd_ == -1ject <e number of threads.02Xobject <s->close_fd)f threads.X>close_fd)s->close_fd)mp/captured_stream.XXXXXXct <) in ) failed: s.not reads. == -1failed: threads.d_ == -1failed: rd_ == -1xception with description "r>close_fd)XXXXX) failed: .XXXXXX_fd_ == -102X. f threads.e number of threads. == -1ng of _fd)d s: e object <) failed: hich is: failed:  of number of threads. < detect the number of threads.t ++ exception with description "iled: 
eption with description "reads. == -1rs.number of threads.se_fd)>close_fd)t the number of threads._fd)cve(ect the number of threads. detect the number of threads.se(args->close_fd)ng of XXXrgs->close_fd)ed: ailed: reads.ubstring of threads.xecve(s: ng of XXXXX of threads.) in  ...) in eption with description "red_stream.XXXXXXir("e number of threads.e(02XXXXXXads.(args->close_fd)cve(xecve(rgs->close_fd)d_ == -1rgs->close_fd)reads.reads./captured_stream.XXXXXX) in e object < is: f /captured_stream.XXXXXXct <++ exception with description "s: ads. ...) in /tmp/captured_stream.XXXXXXlose_fd)etected se(args->close_fd)lose_fd)... hdir("failed: am.XXXXXX++ exception with description "ct <d_ == -1red_stream.XXXXXXs.etected ++ exception with description " exception with description ". t lose_fd)mp/captured_stream.XXXXXX_fd)se(args->close_fd)xception with description "hich is: XXXXXct <ir("xception with description "
am.XXXXXXubstring of ted  of threads./captured_stream.XXXXXXL"Xread_fd_ == -1>close_fd) e(
-byte object <the number of threads. <object <e(-byte object <X cve(ect the number of threads.hich is: .XXXXXXch is: rgs->close_fd)mber of threads.ring of ad_fd_ == -1ream.XXXXXXin ted XXXXXted ad_fd_ == -1.XXXXXXthreads.ect the number of threads.threads. ...) in threads./tmp/captured_stream.XXXXXXstream.XXXXXXt the number of threads.not  of ir("d ject <ream.XXXXXXcve(ads.xception with description "ed: red_stream.XXXXXXd_ == -1..) in  ir("red_stream.XXXXXX exception with description "xecve( is: er of threads. == -1number of threads.number of threads.++ exception with description "mp/captured_stream.XXXXXX++ exception with description "e(e(>close_fd)e(XXXXXch is: object <xception with description " <d)XXXXXobject <se(args->close_fd)/captured_stream.XXXXXXetected failed:  substring of r/captured_stream.XXXXXXe object <-1the number of threads.d:  is:  failed: XXXXXthreads.red_stream.XXXXXXmp/captured_stream.XXXXXXyte object < is: ad_fd_ == -1= -1s.L" d  of ad_fd_ == -1Xlose(args->close_fd).XXXXXX(args->close_fd)xception with description "ir("ring of hdir("XXXXXX of reads. is: . in ch is:  <f threads.f threads.threads.e object <r substring of  ...) in X
etect the number of threads.d: ect the number of threads.s.d am.XXXXXX... >close_fd)f  <d_ == -1lose(args->close_fd) led: se_fd)reads.iled: the number of threads.ed: er of threads.d ubstring of ch is:  failed: string of rgs->close_fd)string of object <eption with description "threads.ads...) in in ng of ++ exception with description "_fd)stream.XXXXXX) in   detect the number of threads. is: XXX("ed: (" of threads.d  exception with description "cve(lose(args->close_fd)reads.d: XXXled:  == -1ailed: .XXXXXX  == -1not XXXXXeption with description "aptured_stream.XXXXXXmp/captured_stream.XXXXXXX ad_fd_ == -1 exception with description "ed: d t _fd)lose(args->close_fd)xception with description "s. exception with description "failed: ad_fd_ == -1_fd)) in tured_stream.XXXXXXs: am.XXXXXXream.XXXXXX-1ailed: reads.threads.>close_fd)number of threads.iled: not reads.d)iled: ("= -1in ) in r_fd_ == -1 er of threads./captured_stream.XXXXXXreads.mp/captured_stream.XXXXXX. = -1_fd_ == -1 exception with description "hich is: e number of threads.d)failed: XXX
reads.d)XXXXX detect the number of threads.mp/captured_stream.XXXXXX= -1. er of threads.ream.XXXXXX= -1in XXXXX-1d: t the number of threads.:  == -1Xf threads.se(args->close_fd)X("object <ad_fd_ == -1reads.d: xecve() in t the number of threads.se_fd)hdir("/tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXX-byte object <ct </tmp/captured_stream.XXXXXX detect the number of threads.stream.XXXXXX(args->close_fd)led: etected ream.XXXXXX/tmp/captured_stream.XXXXXXse(args->close_fd) ring of s: eption with description ". hich is: stream.XXXXXXs->close_fd) detect the number of threads.xecve(d_stream.XXXXXXhich is: >close_fd)-byte object <++ exception with description "_fd)X= -1ailed: f threads.lose_fd)d: d_ == -1ted  ...) in X substring of ted ..) in am.XXXXXXread_fd_ == -1X("++ exception with description "s->close_fd)ads. ...) in s.s->close_fd)..) in L"string of cve(L"aptured_stream.XXXXXXnot xecve(f  of ch is: ) failed: /captured_stream.XXXXXXs: reads. lose(args->close_fd)ject <f iled: L"(args->close_fd)Xaptured_stream.XXXXXXstring of ed: failed: led: rgs->close_fd) substring of s.= -1reads.e(ected  is: ads.iled: XXXXXin ect the number of threads.-byte object <s.number of threads.X_fd)ring of  ...) in ads.tured_stream.XXXXXX/captured_stream.XXXXXX -1eption with description ".XXXXXXL"hdir(" xecve(e number of threads.threads.red_stream.XXXXXXiled: xception with description "tured_stream.XXXXXXected Xring of  of s.ream.XXXXXXubstring of s->close_fd)hich is: hdir("hdir("Xfailed: -byte object < exception with description " == -1d_stream.XXXXXX_fd_ == -1r <threads.xecve(object <.XXXXXX("-1threads.t f threads. 02X s.eption with description "failed: .XXXXXXs: _fd_ == -1X++ exception with description "++ exception with description "ng of t rgs->close_fd)eption with description "("object <s->close_fd)mp/captured_stream.XXXXXXhdir("d ring of aptured_stream.XXXXXX... red_stream.XXXXXXXXXXXch is:  == -1ed: string of ) failed: read_fd_ == -1t the number of threads.= -1number of threads.ject <d_stream.XXXXXXrgs->close_fd)-1 is: ailed:  tured_stream.XXXXXXd): -byte object <number of threads. exception with description "ads.XXXthreads.ed: f threads.ailed: eption with description " is: f threads.(args->close_fd)_fd_ == -1d ring of cve(d_ == -1se(args->close_fd)t the number of threads.e number of threads.ailed: = -1
XXXXXX of ..) in failed: not ect the number of threads.f threads.... _fd)lose_fd)threads. of ailed: cve(red_stream.XXXXXXstring of .XXXXXXxecve(>close_fd)(args->close_fd)etected s.e object <stream.XXXXXX_fd_ == -1reads. substring of lose(args->close_fd)("am.XXXXXXse(args->close_fd)ir(" is: f ailed: d): ad_fd_ == -1ring of  == -1ads.failed: not  < /captured_stream.XXXXXXf threads.not ) failed: ected s.lose_fd) of threads.er of threads.threads.d: ads.(" of -byte object </captured_stream.XXXXXXd  substring of ... iled:  of ("L"-1/captured_stream.XXXXXXd_stream.XXXXXXected  detect the number of threads.er of threads.: L"lose_fd)reads.rgs->close_fd): ads.e( of ads.02Xiled: f threads.threads.reads.threads. substring of r_fd)ject <yte object <ected rgs->close_fd)ring of mber of threads.XXXXXtured_stream.XXXXXXads.ubstring of number of threads.lose_fd)02Xng of hich is: XXXXXxception with description "++ exception with description ": 
(args->close_fd)read_fd_ == -1s.iled: s. ject <eption with description "cve(stream.XXXXXXng of ..) in f threads.s->close_fd) the number of threads.) in number of threads.f cve( substring of d_ == -1f . /captured_stream.XXXXXX/tmp/captured_stream.XXXXXX02X == -1 reads.am.XXXXXX
reads.ed: number of threads.e(.XXXXXXed: red_stream.XXXXXX) in ("s->close_fd).XXXXXX is: Xiled:  of threads.reads.string of mp/captured_stream.XXXXXXred_stream.XXXXXXads.. e number of threads.hdir("reads.f se_fd) substring of Xled: s->close_fd)f ... threads. ...) in  failed: rgs->close_fd) ++ exception with description "s.02Xreads.hich is: = -1ubstring of d)f threads._fd_ == -1xception with description "f threads.) failed: .XXXXXX exception with description "d: not aptured_stream.XXXXXX
ring of s.the number of threads.se_fd) of _fd_ == -1. d _fd_ == -1 <object <++ exception with description "("d: red_stream.XXXXXX/tmp/captured_stream.XXXXXX++ exception with description "ected se_fd)tured_stream.XXXXXX ...) in ) in f ++ exception with description "ads. t s: 
L"reads.ted  <number of threads.read_fd_ == -1ed: ected  <ected ("ted ject <s. == -1d)/captured_stream.XXXXXXe(. t the number of threads.ect the number of threads.-byte object <er of threads.e number of threads.mber of threads.02Xetected X/tmp/captured_stream.XXXXXXstring of se(args->close_fd)led:   ...) in  se(args->close_fd)read_fd_ == -1f .XXXXXX substring of f number of threads.++ exception with description "rgs->close_fd)e object < ...) in ads.threads.ng of e( of threads.se(args->close_fd)ubstring of se_fd)... cve(failed: ...  == -1not number of threads.s.threads.d: stream.XXXXXXrd)e(= -1ad_fd_ == -1 == -1= -1etect the number of threads.++ exception with description "cve(object </tmp/captured_stream.XXXXXXd e object <..) in string of : _fd)e object <d: d .XXXXXXd:  == -1_fd_ == -1ct <tured_stream.XXXXXXs.ad_fd_ == -1.XXXXXX/captured_stream.XXXXXXed: cve(d_ == -1_fd)etect the number of threads.t the number of threads.threads.etected  is: f reads.d_stream.XXXXXXrgs->close_fd)ream.XXXXXXmp/captured_stream.XXXXXXject <ject <) failed: string of number of threads.d_ == -1L"XXX: mber of threads.ads.f  == -1t the number of threads.am.XXXXXXeption with description "-1e object < ...) in -1ng of etect the number of threads.e( in not X... ads._fd)reads. of threads.lose_fd)d in threads. substring of red_stream.XXXXXXch is: ring of ect the number of threads.object <iled: the number of threads. <++ exception with description "string of ) failed: X exception with description "se_fd)ect the number of threads.s: /captured_stream.XXXXXXthe number of threads.02Xs.ng of ed: the number of threads.xception with description "Xf threads.se(args->close_fd)= -1e(xecve(cve(++ exception with description "etected ected L"d  of s: ailed: 02Xin  <er of threads.s: read_fd_ == -1er of threads.threads.s->close_fd). reads.e( of threads._fd_ == -1 == -1ject <mber of threads.d ad_fd_ == -1failed: L"xception with description "++ exception with description "hich is: stream.XXXXXXse_fd)) in etect the number of threads.ir("XXXads.not  failed: ad_fd_ == -1object <ad_fd_ == -1iled: e object <tured_stream.XXXXXX d ng of : threads.hdir("s->close_fd)yte object <ads.02Xstring of tured_stream.XXXXXX. -byte object < lose_fd)string of f threads./tmp/captured_stream.XXXXXXir("(args->close_fd)read_fd_ == -1hich is: f threads.ected e number of threads.lose_fd)mp/captured_stream.XXXXXX is: lose_fd)/tmp/captured_stream.XXXXXXyte object < failed: tured_stream.XXXXXXads.t (args->close_fd)hich is: ected s.02Xs.ir("ed: ct <stream.XXXXXXse_fd)reads.failed: ) in tured_stream.XXXXXX
se_fd)d)... mber of threads.("-byte object <ect the number of threads.e object <_fd): ct <se_fd)aptured_stream.XXXXXXe(("... mber of threads./tmp/captured_stream.XXXXXXthe number of threads.mp/captured_stream.XXXXXXstring of stream.XXXXXX == -1t in rgs->close_fd)ir(".XXXXXXXected f iled: ream.XXXXXXthe number of threads.(" detect the number of threads.stream.XXXXXXd: e number of threads.ubstring of e object <er of threads.iled: ) in ected led: lose(args->close_fd) is: = -1.XXXXXXobject <-byte object <reads._fd)/captured_stream.XXXXXXetect the number of threads.t the number of threads.f threads.) failed: am.XXXXXXt failed: d: t t object < of threads...) in tured_stream.XXXXXX substring of in  f threads.xecve(("threads.number of threads. is:  detect the number of threads.mp/captured_stream.XXXXXXiled: ..) in s->close_fd)f d_ == -1reads.e number of threads...) in  of threads.hich is:  <s: red_stream.XXXXXXXd ject <ed: not yte object <L"t not lose(args->close_fd)xception with description " (args->close_fd)(args->close_fd)failed: rgs->close_fd)mp/captured_stream.XXXXXX: mp/captured_stream.XXXXXX <d_ == -1.XXXXXXd tured_stream.XXXXXXiled: red_stream.XXXXXXads.e number of threads.e object <t the number of threads.threads.ubstring of ads.s./captured_stream.XXXXXXse_fd)hich is: ) in not d: aptured_stream.XXXXXX/tmp/captured_stream.XXXXXXyte object <Xubstring of string of ch is: read_fd_ == -1L"d_stream.XXXXXXs->close_fd)read_fd_ == -1object <failed: led: tured_stream.XXXXXX/tmp/captured_stream.XXXXXXeption with description "threads. X ng of t the number of threads.er of threads.reads.aptured_stream.XXXXXX.XXXXXXring of s.02X_fd)se(args->close_fd)iled: >close_fd) ...) in object <d)not aptured_stream.XXXXXXted d_ == -1ream.XXXXXX substring of iled: d led: ed: d).XXXXXXlose(args->close_fd)hdir("reads.yte object <s.object <Xed: ailed: number of threads.>close_fd)hich is: /captured_stream.XXXXXX(" . ct <f ct <s.ryte object <... mber of threads.iled: s.. s->close_fd)ct <
led: -byte object <reads.ads..XXXXXXam.XXXXXXobject <mber of threads.cve(yte object <02X= -1ad_fd_ == -1= -1ct <reads.ads..XXXXXXread_fd_ == -1read_fd_ == -1 ream.XXXXXXXXXXXhich is: e number of threads.f d: etect the number of threads.hich is: _fd_ == -1er of threads. <red_stream.XXXXXXch is: cve(xception with description " is: -byte object <iled: threads.reads._fd_ == -1t the number of threads.02X.XXXXXXlose(args->close_fd). d)e number of threads.object <Xct <ring of object < exception with description "threads.ad_fd_ == -1number of threads.  exception with description "hdir("ected : ... stream.XXXXXXfailed: ream.XXXXXXL" failed: t the number of threads.e number of threads.ch is: d_ == -1ted d t object < ...) in -byte object <r(args->close_fd) substring of  : (args->close_fd)s.) in red_stream.XXXXXXred_stream.XXXXXXXXXxception with description "ailed: ads.ed: >close_fd)object <d)ected ring of eption with description "threads.-byte object <xception with description "e(ir("etected ed: threads.reads. of threads./captured_stream.XXXXXXthreads.threads...) in ect the number of threads.hdir("etect the number of threads.ject <etect the number of threads.the number of threads.in led: eption with description " exception with description "Xhich is: ailed: 02Xct <reads.f threads.XXXXX= -1ted cve(read_fd_ == -1led: ject <e object <string of s: lose_fd)++ exception with description " <threads.++ exception with description "("aptured_stream.XXXXXXect the number of threads.ct <s: read_fd_ == -1 exception with description "XXXXXtured_stream.XXXXXX>close_fd)mber of threads. detect the number of threads.object <ring of (args->close_fd)_fd)failed:  is: _fd_ == -1ad_fd_ == -1X is: s.L"etect the number of threads.: e(not failed: d_ == -1 < substring of s: e( substring of ted XXXXX... tured_stream.XXXXXXd not er of threads. object <ected _fd) of threads.Xeption with description ") in threads. exception with description "er of threads.ch is: ad_fd_ == -1XXXad_fd_ == -1_fd_ == -1) failed: >close_fd)Xxecve(the number of threads.lose(args->close_fd)) failed: failed: 
d : etect the number of threads.etected ... ct < detect the number of threads. detect the number of threads.yte object <etect the number of threads.("the number of threads.) in red_stream.XXXXXXtured_stream.XXXXXXiled: ted ads.ch is: xception with description "threads.ed: read_fd_ == -1rreads.ect the number of threads.d L".XXXXXXstring of ted reads.hdir("the number of threads./tmp/captured_stream.XXXXXXlose(args->close_fd)-1ted yte object <led: ads.X exception with description "threads.reads.ream.XXXXXXxception with description "_fd_ == -1ads.ailed: ir("eption with description "f threads.ng of -byte object <f threads..XXXXXXstream.XXXXXXstream.XXXXXXrXmber of threads. substring of number of threads.ads. hdir("_fd)number of threads.object < exception with description "d_stream.XXXXXX-1t tured_stream.XXXXXXads.iled: ng of xception with description "ir("/tmp/captured_stream.XXXXXXXad_fd_ == -1 ) failed: cve(etected failed: ream.XXXXXX is: t se(args->close_fd)e object <ads.threads.d: -byte object <stream.XXXXXX(args->close_fd)ed: -1reads.d: t the number of threads. exception with description "Xtured_stream.XXXXXX failed: ("ring of ubstring of reads._fd)lose(args->close_fd)stream.XXXXXXch is: ch is: ted hdir(") failed: reads.tured_stream.XXXXXX... e number of threads.read_fd_ == -1ir("XXXXX) failed: lose_fd)-1 of am.XXXXXX02Xhdir("..) in XXXring of :  exception with description "rd: s: s: 02Xailed: Xeption with description " <in  detect the number of threads.led: am.XXXXXX.  substring of _fd)XXXred_stream.XXXXXX of threads.ir(" exception with description "ad_fd_ == -1failed:  <>close_fd)se(args->close_fd). se(args->close_fd)threads.ct < substring of threads.yte object <d e number of threads.ected ect the number of threads.se_fd)e(ect the number of threads.s: reads. == -1= -1d f threads.-1ed: ... ream.XXXXXXiled: yte object <threads.XXXobject <ubstring of ject <d_ == -102Xject < ads.f ++ exception with description "ch is:   of threads.s->close_fd)tured_stream.XXXXXXads.rgs->close_fd)ected -byte object <yte object <s.s->close_fd)d red_stream.XXXXXXnot ) in failed: ubstring of /captured_stream.XXXXXXream.XXXXXXs->close_fd) == -1-byte object < < of (args->close_fd)L"string of in r is: ..) in  detect the number of threads.++ exception with description " exception with description "xecve(L"XXX/tmp/captured_stream.XXXXXXstream.XXXXXXhdir("cve() failed: ject <  == -1er of threads.the number of threads.iled: e(X
t red_stream.XXXXXXam.XXXXXXthreads.threads.ch is: reads.etect the number of threads.eption with description "iled: .XXXXXXmber of threads.ailed:  == -1threads.ected ct <d_stream.XXXXXXd: ect the number of threads.e(object <_fd)= -1 exception with description "s->close_fd)e number of threads. e number of threads.mp/captured_stream.XXXXXX ("ch is:  ring of reads.se(args->close_fd)object <mber of threads._fd)ch is: s: xception with description " of threads...) in ubstring of xception with description "s: _fd)++ exception with description ".  is: lose_fd)(". .XXXXXXf threads.d: ++ exception with description " ...) in rgs->close_fd)ad_fd_ == -1aptured_stream.XXXXXXf threads.s.d ) in threads.reads.s.se_fd)= -1e object <ct <the number of threads.ads.reads.02XXXXe(hich is: am.XXXXXX) failed: ads.reads.ected f threads.d)_fd)lose_fd)d: . threads.mber of threads.failed: ads.reads.led: xception with description "_fd_ == -1 ...) in _fd)X/tmp/captured_stream.XXXXXXread_fd_ == -1XXe(ted ct <f threads.) failed: ng of not ubstring of ted  cve(rgs->close_fd)ir("etected d ..) in eption with description ") in tured_stream.XXXXXX(args->close_fd)yte object <-byte object < == -1lose_fd)(args->close_fd)ir("hich is: eption with description "f ng of etect the number of threads.xecve(cve(/tmp/captured_stream.XXXXXXL" of e(++ exception with description "XXXXXected ect the number of threads.ads.ubstring of ..) in eption with description "_fd_ == -1the number of threads.led:  exception with description "eption with description "failed: ad_fd_ == -1in am.XXXXXX ...) in _fd_ == -1led: ring of ng of object <hdir("mber of threads.d_ == -1lose_fd)L"XXXXXs: ) failed: t L"ct <ng of xecve(etected ) in ed: threads.ed:  exception with description "ed: d lose(args->close_fd) ) in XXXXX..) in hich is: xception with description "d)ng of Xrect the number of threads.threads.-byte object <xception with description ". _fd_ == -1e number of threads.xecve(se_fd)) failed: am.XXXXXXs: s: threads. of threads.ected s.s->close_fd) failed: ject <ring of hdir("f threads. <ubstring of mp/captured_stream.XXXXXX s.ring of _fd)lose_fd)the number of threads.hdir(" of 
ailed: ++ exception with description "threads. detect the number of threads.reads.f threads. == -1-byte object <) failed: reads.ads.the number of threads.) failed: t etected reads.ads.red_stream.XXXXXXeption with description "ed: e(rgs->close_fd)ubstring of d_stream.XXXXXXreads.) in = -1f threads.-byte object < == -1 substring of d_ == -1/tmp/captured_stream.XXXXXXir("etect the number of threads. ) in = -1..) in _fd_ == -1 02Xthreads.etect the number of threads.ream.XXXXXXected ch is: ject < exception with description ".XXXXXXed: /tmp/captured_stream.XXXXXXcve(read_fd_ == -1ring of etected ubstring of  of threads.ected  /tmp/captured_stream.XXXXXXreads.ch is: d)ch is: etected t the number of threads.rgs->close_fd)X) in stream.XXXXXX exception with description "the number of threads.Xse_fd)string of ch is: f threads. ...) in s.(args->close_fd)the number of threads.in  ...) in tured_stream.XXXXXXstring of _fd)L"t ubstring of d /captured_stream.XXXXXXeption with description "not eption with description "d) of ng of ubstring of d hdir("led: ) failed: 02Xe number of threads. mber of threads.-1mber of threads.e(am.XXXXXX == -1L": ject <ir("xception with description "ject <ubstring of f threads.ct <yte object <er of threads.r of threads.threads.f in ected xecve( is: iled: hich is: read_fd_ == -1cve() failed: ads.hdir("... ct <etected _fd_ == -1ailed:  substring of 02XX... ailed: ch is: . s.ad_fd_ == -1s: ject <tured_stream.XXXXXX t ject <ream.XXXXXXf ailed: Xs: ) in ..) in  ...) in threads.red_stream.XXXXXXxecve(red_stream.XXXXXX_fd_ == -1stream.XXXXXXct < t ir("ir("++ exception with description "threads. of threads..XXXXXXlose_fd).XXXXXXthe number of threads.etected 02Xaptured_stream.XXXXXXred_stream.XXXXXXd_ == -1d)("e((" : mber of threads.f threads. threads.ch is:  failed: ng of  ads. of s.L"/tmp/captured_stream.XXXXXXs: in ads.hdir(". number of threads. detect the number of threads.xecve( is: ected  failed: s.e object <yte object <Xt the number of threads.stream.XXXXXXL"d_ == -1 < is: e number of threads.am.XXXXXXstring of .XXXXXXse_fd)-byte object <>close_fd)threads.d)am.XXXXXXads. substring of lose(args->close_fd)mber of threads.= -1f threads.reads.string of  Xstring of >close_fd)XXXXXread_fd_ == -1 failed: L"mber of threads.XXXXX-1 of ... am.XXXXXX) in  failed: hdir("-1e number of threads.d_ == -1lose(args->close_fd)(args->close_fd)eption with description "ted Xreads.etect the number of threads.ng of t the number of threads.the number of threads. ...) in  is: the number of threads.ch is: s: s.
ct <ads.>close_fd)L"("XXXXXreads.ject <hich is: f e(failed: ) failed: : d_ == -1ted d: ads. ) failed: aptured_stream.XXXXXXmber of threads.led: ) failed: lose_fd)d: . d_stream.XXXXXXubstring of /captured_stream.XXXXXXlose(args->close_fd)XXXf threads. exception with description "e number of threads.t the number of threads.ch is: etect the number of threads.se_fd) substring of (args->close_fd)threads.ir("se(args->close_fd)ir("ct <hich is: Xads.++ exception with description ": t e(d threads.ng of f rgs->close_fd)number of threads.r substring of L"t the number of threads.Xse_fd) exception with description "ected ads.ted e( failed: mber of threads..XXXXXXyte object </tmp/captured_stream.XXXXXX failed: ads. ...) in >close_fd)Xetect the number of threads.ailed: ("/tmp/captured_stream.XXXXXX ...) in f threads.d)02Xect the number of threads.ring of _fd_ == -1ads.rgs->close_fd)eption with description " ...) in ject <= -1... eption with description "d_ == -1in  of s: xception with description " <ads.threads.e number of threads.not reads.t in _fd)threads.f threads.number of threads. <failed: ) in number of threads.>close_fd)rer of threads.iled: object <>close_fd)L"02Xhdir("rng of d: ect the number of threads. exception with description "e object <ct < exception with description "se(args->close_fd)object <failed: XXXXXnumber of threads.-byte object <f threads.ted  ...) in f xception with description " is:  substring of hich is: cve(e(: reads.t the number of threads. of ubstring of ads.hdir("e number of threads.object <>close_fd)e((" is: XXXXX  is: : ++ exception with description "Xd)..) in s.tured_stream.XXXXXXmber of threads. < substring of cve(xecve(... ream.XXXXXX substring of xecve((args->close_fd)se(args->close_fd)e number of threads.r.XXXXXX>close_fd)ad_fd_ == -1_fd_ == -1("xecve(ted  is: er of threads. == -1e( detect the number of threads.mp/captured_stream.XXXXXX is: _fd)red_stream.XXXXXX  ir("ailed: d_stream.XXXXXX_fd)threads.ring of ailed: ads.e number of threads.d mber of threads.xception with description "reads.failed: yte object <ject <Xng of  t s.f stream.XXXXXXxecve(string of ct <>close_fd)... ect the number of threads.d: d_ == -1 etected -byte object < failed: ted ads.ad_fd_ == -1s->close_fd)t _fd_ == -1XXXXXads.d: /captured_stream.XXXXXXread_fd_ == -1led:  ad_fd_ == -1threads.= -1: ++ exception with description " == -1etected  substring of (args->close_fd)
ir("d)object <string of the number of threads.: ) in yte object <etect the number of threads.("XXXXXnumber of threads.ads.string of ect the number of threads.read_fd_ == -1(" of  == -1e(e number of threads.threads.tured_stream.XXXXXX. .XXXXXXd_stream.XXXXXXhdir("t the number of threads.ted ads.-byte object <in ng of : /tmp/captured_stream.XXXXXXct <ads.ir("object <rer of threads. <iled: reads.lose(args->close_fd)ailed: read_fd_ == -1 ...) in hich is: ++ exception with description "xception with description "reads.02Xct <_fd_ == -1ream.XXXXXX. d: mber of threads.d_stream.XXXXXXse_fd)ct <
tured_stream.XXXXXXeption with description "ct < of s.XXXXXer of threads.rXXXobject < <Xf threads.ads.object <led: e object <ected ..) in /tmp/captured_stream.XXXXXXin XXX_fd) d)..) in rse_fd)lose_fd)e number of threads.hich is: etected ..) in the number of threads.ject <red_stream.XXXXXX detect the number of threads.t the number of threads.riled: stream.XXXXXXlose(args->close_fd) <... -1 ...) in mber of threads.ailed: ct <xception with description "reads. exception with description "e object <in stream.XXXXXXXstring of  < _fd)XXXmber of threads. of threads. of t the number of threads.ted ailed: s->close_fd)ted the number of threads...) in eption with description "ad_fd_ == -1X(args->close_fd)s->close_fd)(") failed: se(args->close_fd)..) in  of led: e object <yte object <ailed: iled: lose(args->close_fd)ted lose_fd)reads.ads.read_fd_ == -1s: f ..) in t ads.... stream.XXXXXXad_fd_ == -1ed: xception with description "read_fd_ == -1e object <ads.s->close_fd)
_fd_ == -1r. ject < <ubstring of XXXXX. er of threads..XXXXXXs->close_fd) <s: .XXXXXXL"number of threads./captured_stream.XXXXXXam.XXXXXXng of XXXXXthreads.t the number of threads. == -1-byte object </tmp/captured_stream.XXXXXX substring of >close_fd)in hdir("ed: /captured_stream.XXXXXX02Xct < detect the number of threads.ed: d: = -1++ exception with description "read_fd_ == -1ch is: ) in t not ject < substring of e(-byte object <red_stream.XXXXXX (args->close_fd) substring of led:  is: number of threads.++ exception with description "ring of xception with description "ailed: -byte object <d)e object < failed: /captured_stream.XXXXXXyte object <s: ) failed: s. substring of yte object <-1/captured_stream.XXXXXX == -1(args->close_fd)..) in etected d s.etected >close_fd)X detect the number of threads._fd)xception with description "se_fd)d)("ected red_stream.XXXXXXs: ailed: led: t the number of threads.s.ng of -1ailed: ed: L"red_stream.XXXXXXct <XXXe number of threads.am.XXXXXX substring of object <ad_fd_ == -1 Xiled: 
red_stream.XXXXXXeption with description "..) in object <>close_fd) failed: mp/captured_stream.XXXXXXreads.>close_fd)cve(t mp/captured_stream.XXXXXXxception with description "ailed:  ...) in  exception with description "f threads...) in object <ir("string of lose(args->close_fd) substring of ) in ch is: lose_fd)lose_fd)stream.XXXXXXt the number of threads.
rgs->close_fd)ch is: read_fd_ == -1s: ng of e number of threads.hdir("hdir("ir("e number of threads.etected threads. == -1the number of threads.
ted stream.XXXXXXhich is: : lose_fd)f threads.t threads.reads.ected string of read_fd_ == -1-1ad_fd_ == -1d_ == -1 <etected s->close_fd): ir("d: ring of ng of e object <e number of threads.f d XXX ...) in xception with description "ted hdir("ream.XXXXXXin s.("hdir("02Xnumber of threads./captured_stream.XXXXXX... etect the number of threads.ir("threads.red_stream.XXXXXXstream.XXXXXXL"in /tmp/captured_stream.XXXXXX/captured_stream.XXXXXXeption with description " ...) in yte object <ad_fd_ == -1-1er of threads.: d_stream.XXXXXX.XXXXXX02Xads.d eption with description "se_fd) substring of  substring of ct <. f threads. exception with description "d_stream.XXXXXXmber of threads....  of Xstream.XXXXXXreads.se_fd)d)the number of threads.not am.XXXXXX) in _fd)ads.ubstring of am.XXXXXXnot (args->close_fd)ream.XXXXXX:  exception with description ". d_ == -1lose_fd)aptured_stream.XXXXXXs->close_fd)d)ted ject <r-1ject <red_stream.XXXXXXyte object <threads.-1ailed: f threads. eption with description "threads.X... e number of threads.s->close_fd) ...) in eption with description "f threads.read_fd_ == -1mber of threads.rgs->close_fd)... s: ... ailed: : mber of threads. detect the number of threads.threads.ct <yte object <yte object <++ exception with description "Xhich is: string of  exception with description " of XXXXXse_fd)threads.cve(led: f mber of threads.ch is: 02X of threads. ...) in failed: s->close_fd)the number of threads.ed: s->close_fd)ir("_fd_ == -1threads.hdir("ected rream.XXXXXXected d: eption with description " failed:  exception with description "iled: f threads. ads.t the number of threads. is:  detect the number of threads. of threads.ch is:  -1 failed: number of threads. exception with description "d)ected led: etected e(/tmp/captured_stream.XXXXXXir("ject <s: ring of failed: t the number of threads.f threads.Xubstring of tured_stream.XXXXXX
string of xecve(am.XXXXXXiled: threads.in red_stream.XXXXXX(args->close_fd)f threads.lose_fd)s:  substring of s->close_fd)/captured_stream.XXXXXXads.Xcve() in ject <reads.etect the number of threads.hich is: ted ected  of in _fd_ == -1aptured_stream.XXXXXXin t = -1eption with description "ject <XXXthe number of threads. == -1>close_fd)se(args->close_fd)s.r == -1s: d)object <d: xception with description " d)t am.XXXXXXread_fd_ == -1iled: reads.-1xecve(d  == -1s: s: object <lose(args->close_fd)ected ads.t the number of threads.s.= -1stream.XXXXXX detect the number of threads.("hich is: the number of threads. is: ir(" red_stream.XXXXXXetect the number of threads.mp/captured_stream.XXXXXXailed: stream.XXXXXXs->close_fd). . ch is: er of threads.not etect the number of threads.s->close_fd)d_ == -1led: s.se_fd)d: mp/captured_stream.XXXXXXd)d_ == -1etect the number of threads.eption with description "f  failed: se(args->close_fd)lose(args->close_fd)r(".XXXXXX("rgs->close_fd)the number of threads.d_ == -1ected number of threads.etect the number of threads.stream.XXXXXXXXXad_fd_ == -1: se(args->close_fd)t the number of threads./captured_stream.XXXXXXxception with description "ream.XXXXXXs. substring of  of threads.e(= -1not object <xception with description "e number of threads./tmp/captured_stream.XXXXXXs.e number of threads. == -1aptured_stream.XXXXXXobject <XXXstring of d: t aptured_stream.XXXXXXthe number of threads.hich is: L"f threads.
t /captured_stream.XXXXXXailed: lose(args->close_fd)02X-byte object <object <ng of = -1d: : ng of = -1e object < detect the number of threads.aptured_stream.XXXXXX-byte object <ject </tmp/captured_stream.XXXXXX is: threads.se(args->close_fd)led: rgs->close_fd) of ++ exception with description " exception with description "mp/captured_stream.XXXXXXt etected ads.f threads.e(xecve( d_ == -1(args->close_fd)led: se_fd)ng of ir("= -1 ect the number of threads.Xlose_fd)) in ir(" of XXXXXream.XXXXXX == -1tured_stream.XXXXXX is: ads.>close_fd)XXX of threads.ed: ted cve(reads.rXXXXX>close_fd)  e number of threads.XXXXXXhich is: ch is:  ...) in reads..XXXXXX substring of XXXXXject < of s.led: f f threads. <se(args->close_fd)>close_fd)iled: mp/captured_stream.XXXXXXX d_stream.XXXXXXd)
s.s: s.e number of threads.eption with description "d_stream.XXXXXXreads.ring of hdir(" tured_stream.XXXXXX) in d_ == -1(" == -1X/captured_stream.XXXXXXthe number of threads.(args->close_fd)t ch is: tured_stream.XXXXXXfailed: rxception with description "object <ch is:  failed: d: ailed: 
string of lose(args->close_fd)failed: lose_fd)tured_stream.XXXXXXt the number of threads.>close_fd)object <eption with description "f threads.d:  == -1d_ == -1iled: e(d)reads. (args->close_fd)read_fd_ == -1read_fd_ == -1d: tured_stream.XXXXXXmp/captured_stream.XXXXXXX... mp/captured_stream.XXXXXX) failed: XXXXXX... e object <reads.XXXX) in string of string of threads.ailed: = -1-byte object <_fd_ == -1 of threads..XXXXXXe number of threads.hdir("ch is:  < failed: the number of threads. failed: mber of threads.ed: am.XXXXXXch is: s.XXX. er of threads.etect the number of threads. exception with description "/tmp/captured_stream.XXXXXXed: : : yte object <XXXXX: 02Xhich is: lose_fd)ch is:  is: threads. of threads.etect the number of threads. is: d number of threads.. -byte object <02X detect the number of threads.02Xed: ng of ) failed: e(02Xeption with description "am.XXXXXXmber of threads.) failed: ... yte object <number of threads.d)..) in mp/captured_stream.XXXXXXject <t  er of threads.e object <cve(ream.XXXXXXnumber of threads.t the number of threads.se_fd)f threads.e object <object <ads.lose(args->close_fd) exception with description "e number of threads.hich is: s.reads.aptured_stream.XXXXXX yte object <ted f threads...) in ect the number of threads.ng of red_stream.XXXXXXthe number of threads.) failed: se(args->close_fd) detect the number of threads.threads.lose(args->close_fd) of threads. hich is: /captured_stream.XXXXXXfailed: the number of threads. failed: ject <) in se(args->close_fd)_fd)string of 02XXXXXX <e number of threads.se(args->close_fd)s.ads.stream.XXXXXX) failed:  detect the number of threads.d)mp/captured_stream.XXXXXX-byte object <ads.e object </captured_stream.XXXXXX ...) in ..) in d)) failed: se_fd)aptured_stream.XXXXXX) failed: threads.. tured_stream.XXXXXX= -1 of threads.number of threads.hdir("e(XXXaptured_stream.XXXXXX exception with description "in xecve(++ exception with description "ed:  of threads.se_fd)
ring of se(args->close_fd)f in cve(stream.XXXXXXt the number of threads.ted : XXXXXmp/captured_stream.XXXXXX exception with description "ream.XXXXXXstring of er of threads.ct <... t >close_fd) exception with description "reads.led: s->close_fd) substring of  of threads.t the number of threads.yte object <er of threads. exception with description ">close_fd)the number of threads.= -1number of threads.. se_fd)s.yte object < substring of lose_fd) <L"am.XXXXXX. s: d)_fd_ == -1.XXXXXXs: er of threads.ads.ubstring of led: ed: e number of threads.ect the number of threads.++ exception with description "/captured_stream.XXXXXXs. failed: etect the number of threads.rgs->close_fd)ads.not d_stream.XXXXXXch is: >close_fd)xecve(reads.L"f = -1 ring of .XXXXXXd ch is: -1 <tured_stream.XXXXXXected ad_fd_ == -1ring of  : lose_fd). ads.ream.XXXXXXs. == -1tured_stream.XXXXXXstream.XXXXXX_fd_ == -1... d_ == -1X("_fd)s->close_fd)ir("_fd_ == -1ring of ++ exception with description "ailed: am.XXXXXXubstring of e(d)s: XXXXXXXX-1ect the number of threads.ailed: rread_fd_ == -1 <t threads. ed: ect the number of threads.d_stream.XXXXXXstream.XXXXXX-byte object <ted f ... xception with description "ed: t the number of threads./tmp/captured_stream.XXXXXXX ...) in ring of = -1ct <se_fd)the number of threads.XXXXX++ exception with description "L"number of threads.02Xd)ted lose_fd)rgs->close_fd)stream.XXXXXX. t the number of threads.: >close_fd)XXXX detect the number of threads.object <) in etect the number of threads.red_stream.XXXXXXxecve(("threads.d the number of threads.eption with description "ted number of threads.ads.se(args->close_fd)red_stream.XXXXXXetect the number of threads.tured_stream.XXXXXXe number of threads.mber of threads.threads.X) in /tmp/captured_stream.XXXXXXubstring of tured_stream.XXXXXX/tmp/captured_stream.XXXXXX: rgs->close_fd)-byte object <
/captured_stream.XXXXXX-byte object <not _fd_ == -1object <ject <ir("threads.object <s.rXXXXX of threads.t the number of threads. failed: string of d)_fd_ == -1reads.mber of threads.ream.XXXXXXs: d_stream.XXXXXX <rmp/captured_stream.XXXXXXnot iled: r..) in XXXhich is: L"e(_fd)d) -1d (args->close_fd) failed: /tmp/captured_stream.XXXXXXaptured_stream.XXXXXXd)the number of threads.ch is: rgs->close_fd) am.XXXXXXer of threads.object <in yte object <lose(args->close_fd) ...) in >close_fd)mber of threads.ct <: ) in eption with description "-byte object <e object <xception with description "ted ch is: /tmp/captured_stream.XXXXXXring of d: e number of threads.02Xyte object <Xrgs->close_fd)tured_stream.XXXXXXthreads.("XXXXXse_fd)read_fd_ == -1..) in ected ect the number of threads. object <object <f threads. /captured_stream.XXXXXX ...) in ct <= -1not  == -1ads.ject <Xse(args->close_fd)e( s.hich is:  ...) in hich is: am.XXXXXXailed: t string of e(string of s.d_stream.XXXXXXhdir(") in . ream.XXXXXXct <ir("ring of ed: ads.) in . = -1lose(args->close_fd)
lose_fd)++ exception with description "reads. substring of e object <yte object <(" substring of lose(args->close_fd)yte object <string of red_stream.XXXXXX_fd_ == -1t lose(args->close_fd)er of threads.... ) failed: s->close_fd)ng of ++ exception with description "ad_fd_ == -1number of threads.cve(string of s->close_fd)Xled: eption with description ": threads.f in _fd)read_fd_ == -1e number of threads.red_stream.XXXXXXam.XXXXXX.XXXXXXream.XXXXXXreads. ads.hdir("ream.XXXXXXthreads..  is: ...  exception with description "object <
(args->close_fd)reads.s->close_fd)number of threads.cve(object <d)XXXXX>close_fd)cve(. .XXXXXX exception with description " detect the number of threads.am.XXXXXXct <ct < is: not _fd)the number of threads.-byte object <e object <aptured_stream.XXXXXX(args->close_fd): ailed: eption with description "  of threads.ads.iled: ed: d: XXXect the number of threads.stream.XXXXXXmber of threads. yte object </tmp/captured_stream.XXXXXXXred_stream.XXXXXX of threads.-1number of threads.threads.ir("L"t failed: threads.-1the number of threads.ads.) in ("d)rgs->close_fd)++ exception with description "d)e( ed: lose(args->close_fd)d ream.XXXXXXt mber of threads. == -1rad_fd_ == -1 exception with description " of stream.XXXXXXtured_stream.XXXXXX) in XXXiled: r ct <er of threads.t the number of threads.t led: lose_fd)eption with description ") in /captured_stream.XXXXXX..) in  of threads.(args->close_fd)reads...) in ch is:  of ected cve(xception with description "ted failed: XL"t er of threads.se_fd)etect the number of threads.t the number of threads.mber of threads.er of threads.failed: se(args->close_fd)/tmp/captured_stream.XXXXXXcve(iled: stream.XXXXXXetected Xstream.XXXXXXring of rch is: t the number of threads.tured_stream.XXXXXXe(ailed: e() in ect the number of threads._fd_ == -1d)hdir("ir("ads. of  of d_stream.XXXXXXse(args->close_fd)++ exception with description "hich is: reads.er of threads. failed: d: hich is:  substring of ("etected f not 02Xs->close_fd)e number of threads.ring of ng of d: s.e number of threads. detect the number of threads.ed: not ng of t red_stream.XXXXXXd)iled: ++ exception with description " of ream.XXXXXXailed: failed: mp/captured_stream.XXXXXXs.threads.d_stream.XXXXXXin  failed:  exception with description "(" == -1/tmp/captured_stream.XXXXXXlose_fd)s: reads.iled: XXXXXe(hdir(") failed: s.ir("/tmp/captured_stream.XXXXXXs:  of threads.stream.XXXXXXd)se(args->close_fd)reads.rgs->close_fd)in  detect the number of threads.ad_fd_ == -1aptured_stream.XXXXXX == -1 of etect the number of threads.ed: d)s->close_fd)not etected  of threads. of threads.etected aptured_stream.XXXXXXxception with description "am.XXXXXXXiled: hich is: cve(ad_fd_ == -1 ... hdir("yte object <..) in  detect the number of threads.red_stream.XXXXXX/captured_stream.XXXXXX < <ect the number of threads.("s.threads.) failed: tured_stream.XXXXXX... e(ir("-byte object <ted ++ exception with description "d d: .XXXXXX failed:  exception with description "= -1xecve(ads.("eption with description "ads.reads. of e(stream.XXXXXXad_fd_ == -1e number of threads.stream.XXXXXXxception with description "t = -1_fd_ == -1ad_fd_ == -1 failed: f  of threads.xception with description "ted ... failed: the number of threads.am.XXXXXXrgs->close_fd)red_stream.XXXXXX
ad_fd_ == -1ad_fd_ == -1Xad_fd_ == -1not   == -1reads.ted _fd)hdir("
reads.++ exception with description "number of threads.threads.read_fd_ == -1ted  detect the number of threads.f threads.d: se_fd). d_ == -1read_fd_ == -1s. is: ads.-byte object <in se(args->close_fd)se(args->close_fd)ring of  of  ...) in hich is: mp/captured_stream.XXXXXX02Xs->close_fd)lose_fd)ads. of threads.XXXt the number of threads.
ch is: se(args->close_fd) == -1 detect the number of threads.d)) in se(args->close_fd)ads.etect the number of threads.ted XXXXXed: ailed: .XXXXXXected Xled: iled: 
XXXream.XXXXXXlose_fd) detect the number of threads.mber of threads.XXX ("xecve(lose(args->close_fd) substring of s->close_fd)/captured_stream.XXXXXXL"("rgs->close_fd)rxecve(s.s.= -1rgs->close_fd) of threads. detect the number of threads.ng of t t the number of threads. d_ == -1 ...) in ream.XXXXXX: lose(args->close_fd)e number of threads.++ exception with description "d_stream.XXXXXXXfailed: threads.object <etected s.led: er of threads.rd_stream.XXXXXXs.X ...) in cve(e object <ring of ring of  ...) in ted hich is: /tmp/captured_stream.XXXXXXlose(args->close_fd)rgs->close_fd):  of ject <ads.ubstring of ...  iled: in .XXXXXXch is:   < of  == -1d: /tmp/captured_stream.XXXXXX>close_fd) == -1reads.aptured_stream.XXXXXXse(args->close_fd)_fd) ..) in xception with description "yte object <t e(/captured_stream.XXXXXX.XXXXXXfailed: ng of (args->close_fd)mp/captured_stream.XXXXXX_fd_ == -1...  detect the number of threads.xception with description "d_stream.XXXXXX: ("L" exception with description "L"etected .XXXXXXng of threads.eption with description "d_ == -1d)t the number of threads./tmp/captured_stream.XXXXXXd).XXXXXX <ad_fd_ == -1 of threads.aptured_stream.XXXXXX ...) in ailed: not  ...) in mp/captured_stream.XXXXXX...  failed: read_fd_ == -1aptured_stream.XXXXXXstream.XXXXXX ) in  substring of rgs->close_fd)am.XXXXXXetected .XXXXXXhich is: ) in rgs->close_fd)ailed: reads.t e object <reads.etect the number of threads.threads. == -1e object <02Xs->close_fd)cve(("cve(XX </captured_stream.XXXXXXch is: ) failed: XXXs->close_fd)object <Xt the number of threads.failed: ng of in hich is: _fd_ == -1L"L"in _fd_ == -1d s->close_fd)etect the number of threads..XXXXXXd: ) failed: reads.d_ == -1number of threads.-1.XXXXXXthreads.(args->close_fd)etect the number of threads.tured_stream.XXXXXX++ exception with description "/captured_stream.XXXXXX_fd_ == -1("number of threads.aptured_stream.XXXXXXf threads.s->close_fd)f  substring of ubstring of  detect the number of threads. threads.02X) failed: ... L"s. detect the number of threads.f lose_fd)string of threads.ads.f threads.ject <f d_ == -1 == -1ads.) in hdir("_fd)etected -1xecve(hich is: : tured_stream.XXXXXX/tmp/captured_stream.XXXXXXse_fd)ir("t  exception with description "red_stream.XXXXXXe( substring of not d -1the number of threads./tmp/captured_stream.XXXXXXlose_fd)lose(args->close_fd)mp/captured_stream.XXXXXXnot s: hdir("ected ed: stream.XXXXXXhdir("mber of threads.) in ads.d: s: am.XXXXXXxecve(.  detect the number of threads.hich is: yte object <eption with description "d_stream.XXXXXXream.XXXXXXled: xception with description "mp/captured_stream.XXXXXXt am.XXXXXXyte object <number of threads.rt the number of threads.hdir("red_stream.XXXXXX-byte object <  exception with description " of threads.ailed: ubstring of led: X ...) in Xobject <cve( exception with description "f threads.ct < ...) in _fd)ed: string of t the number of threads.d:  ...) in etect the number of threads.d_ == -1(" of f  == -1 substring of object < of 02Xng of ed: d object <... _fd)/tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXt  detect the number of threads. exception with description "yte object <hdir("s: string of .XXXXXX exception with description "L"mber of threads.lose_fd)ng of aptured_stream.XXXXXXs: etected ("ect the number of threads.number of threads.led:  .XXXXXX:  XXXXX  detect the number of threads.d_stream.XXXXXX of threads.) failed: -1s->close_fd)threads.ch is: ed: e(ected ch is: yte object <ct <s: threads.ect the number of threads. exception with description "stream.XXXXXXthe number of threads.) in in >close_fd)d . ..) in  detect the number of threads.ch is: aptured_stream.XXXXXX of  is: ... /tmp/captured_stream.XXXXXX == -1threads.>close_fd)reads.(args->close_fd)cve(etect the number of threads.d threads.the number of threads.ads.XXXobject <d string of  Xct <L"stream.XXXXXX failed: e number of threads.number of threads.reads.t ream.XXXXXXhdir("cve( ..) in .XXXXXX
hdir(". ct < substring of  detect the number of threads. failed: ("ected ed: -byte object <t ... in hdir("-1 not s:  is: the number of threads.ted 
: er of threads.failed: ... ++ exception with description "threads.failed: in led:  detect the number of threads.xecve(s.f threads.tured_stream.XXXXXXxception with description "reads.hich is: ) failed: /captured_stream.XXXXXX
 ...) in  of e object <t the number of threads.read_fd_ == -1se(args->close_fd) failed: ected se_fd)) in lose_fd) <..) in e(am.XXXXXXs.cve(tured_stream.XXXXXX) in ) failed: yte object <= -1>close_fd)ads.++ exception with description "threads.object < ...) in aptured_stream.XXXXXXL"ads.:  <in threads.failed:  == -1xception with description "X substring of reads..  is: led: number of threads.xecve(lose(args->close_fd)e object <... stream.XXXXXXnumber of threads.f threads.se(args->close_fd)_fd_ == -1 substring of -byte object <rgs->close_fd)d)/captured_stream.XXXXXXse_fd)) in XXX of threads.object <mp/captured_stream.XXXXXXse_fd) == -1 of threads.>close_fd) ...) in mp/captured_stream.XXXXXXmp/captured_stream.XXXXXX) failed: string of number of threads.ailed: ads.se_fd)ted ct <ad_fd_ == -1e object <e object <= -1e(se(args->close_fd).XXXXXXe number of threads.ch is: L"... 02XL"ng of ected  of .XXXXXX= -1red_stream.XXXXXX xecve(f read_fd_ == -1er of threads.the number of threads.etected reads...) in  substring of mp/captured_stream.XXXXXX
ng of Xring of hich is: object <se_fd)in ... ir("02X substring of XXX failed: -byte object <er of threads. t 
s.("red_stream.XXXXXXs->close_fd)ubstring of  == -1d_stream.XXXXXXthe number of threads.yte object <ads.ted ) in iled: s. ...) in s: se_fd)s.ream.XXXXXXX == -1not  hich is: reads.ch is: number of threads.reads.ream.XXXXXX failed: /tmp/captured_stream.XXXXXXads.lose_fd)string of  is: se_fd)ream.XXXXXX substring of ads.string of  == -1ect the number of threads.red_stream.XXXXXXed: hdir("failed: threads. is: hdir("d_ == -1.XXXXXXnumber of threads.L"d: ad_fd_ == -1r 
se_fd)number of threads.the number of threads.d:  .XXXXXXred_stream.XXXXXX/captured_stream.XXXXXXstream.XXXXXXject < of d: reads.d_stream.XXXXXXlose_fd)se_fd) ...) in ... ted /tmp/captured_stream.XXXXXXream.XXXXXXXject </tmp/captured_stream.XXXXXXng of number of threads.reads.) in string of hich is:  exception with description ">close_fd)iled: ted mber of threads.read_fd_ == -1_fd)iled: >close_fd)++ exception with description "f threads.lose_fd)ubstring of cve((") failed: hdir("mber of threads.ct < substring of ct <iled:  02X++ exception with description " ...) in ailed: XXXmp/captured_stream.XXXXXXed: Xtured_stream.XXXXXXXXXxception with description "eption with description "string of eption with description ": e number of threads.(" exception with description "e( ...) in ng of ... ir("number of threads.d /tmp/captured_stream.XXXXXXeption with description "string of ect the number of threads.xecve(_fd_ == -1ubstring of hdir("hdir(": f aptured_stream.XXXXXXe(yte object <++ exception with description "s.-1) in /captured_stream.XXXXXX-1: hdir("eption with description "lose(args->close_fd)ubstring of ) failed: . ) failed: ir(" detect the number of threads.ads._fd)e object <hdir(" -byte object <lose_fd)rted hich is: threads...) in _fd)ted string of  exception with description "ads.ng of led: /tmp/captured_stream.XXXXXXmber of threads.XXXXX reads.("f s.ubstring of L"d_ == -1 substring of  ailed: not in ted e(/tmp/captured_stream.XXXXXXs: lose(args->close_fd) <led: ..) in ad_fd_ == -1not  etected ads.d_stream.XXXXXXnot  of threads. exception with description "read_fd_ == -1 of e number of threads.ream.XXXXXX02Xstream.XXXXXXrer of threads.e number of threads.read_fd_ == -1X) in  exception with description "= -1
++ exception with description "e(object <.  is: rgs->close_fd)t the number of threads.ads.Xlose(args->close_fd)cve(etect the number of threads.threads.L"reads.f ubstring of string of  substring of  mber of threads.stream.XXXXXX= -1..) in ... Xthreads.mber of threads.ads.object <... s.ring of d)hich is: s: s->close_fd) == -1ir("etected hdir("threads.cve(s->close_fd)am.XXXXXXfailed: .XXXXXX <_fd)ected not stream.XXXXXXcve(s:  of threads.ch is: in s._fd)rgs->close_fd)iled:  of  s.) in object < failed: ) in red_stream.XXXXXXmp/captured_stream.XXXXXXhdir("d:  ++ exception with description " exception with description "t the number of threads.ubstring of reads.ch is:  rgs->close_fd)/tmp/captured_stream.XXXXXXads.string of mp/captured_stream.XXXXXXs->close_fd)e object <ject <... ) failed: Xeption with description "ect the number of threads.ads. == -1etect the number of threads. d_stream.XXXXXX of threads.number of threads.ads.lose(args->close_fd)++ exception with description "lose(args->close_fd)d_ == -1t the number of threads. substring of (args->close_fd)ected  ) in f ect the number of threads.threads. substring of d)02X>close_fd)XXXXXring of string of ir("-byte object < is: stream.XXXXXX substring of read_fd_ == -1XXX substring of s.hich is: /tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXe number of threads.e(etect the number of threads.mber of threads.ct <xception with description "tured_stream.XXXXXXject <rgs->close_fd)f threads.er of threads.red_stream.XXXXXXr(args->close_fd)lose(args->close_fd)hich is: se_fd) substring of  detect the number of threads.ads.++ exception with description " exception with description "lose(args->close_fd)lose_fd)= -1tured_stream.XXXXXX..) in  is: hich is: d ..) in d: led: d_ == -1object < hdir("d_ == -1led: _fd)t the number of threads.ads.s.d: d_stream.XXXXXX) in aptured_stream.XXXXXX
 d)ream.XXXXXXer of threads. exception with description "aptured_stream.XXXXXXled: d_stream.XXXXXXin 
  t  ailed: d ++ exception with description "d_ == -1... _fd_ == -1se(args->close_fd)>close_fd)ads.-byte object <d  == -1XXX s: ) failed: ected  stream.XXXXXXd_ == -1 (args->close_fd)stream.XXXXXX-1not se(args->close_fd).XXXXXXXXXXXring of string of object <t the number of threads.ng of ("ected /captured_stream.XXXXXXe object <e(er of threads.s: se_fd)ad_fd_ == -1iled: (">close_fd)rgs->close_fd)number of threads.failed: red_stream.XXXXXXrgs->close_fd) failed: red_stream.XXXXXXject <ject <reads.lose(args->close_fd)reads.ir("ected s->close_fd)d er of threads.ject <the number of threads.
) in ) in s.: d_stream.XXXXXXads.lose_fd)etect the number of threads.e object <L" is:  of threads.failed: s->close_fd)t am.XXXXXXxception with description "number of threads.++ exception with description "ng of L"XXXiled: ad_fd_ == -1s.s->close_fd)ads.threads.xception with description "/tmp/captured_stream.XXXXXXreads.ring of ted hich is: ect the number of threads.
reads.ject <ng of  exception with description "02Xf threads./captured_stream.XXXXXXetect the number of threads.L"02X02Xam.XXXXXXetected d_stream.XXXXXXxception with description "am.XXXXXXf threads._fd_ == -1 se_fd) exception with description "hich is: lose_fd)threads.e((args->close_fd)d) of threads._fd)_fd)++ exception with description "++ exception with description "f threads.  <s->close_fd)f threads.e object <e number of threads.ad_fd_ == -1f  ...) in the number of threads.ted number of threads.ch is: f failed: d_ == -1r... d:  is: threads.string of ected L"reads.ject <number of threads.iled: ct <: ("ubstring of er of threads.e number of threads...) in 02X <ads.se(args->close_fd)lose(args->close_fd)threads.s:  == -1:  ...) in yte object <... ed: ubstring of ... ring of Xf aptured_stream.XXXXXX substring of : ads.se(args->close_fd) == -1 < is: d s->close_fd)e(XXX02Xt ect the number of threads.mp/captured_stream.XXXXXX("aptured_stream.XXXXXXe number of threads.iled: red_stream.XXXXXX(args->close_fd)ect the number of threads. exception with description "("..) in  is: ject <-byte object <ng of s.t = -1ads.etected .XXXXXXmber of threads.reads.-1 mber of threads.ads.threads. of threads.ailed: ads.(args->close_fd)s.ream.XXXXXXstring of xecve(ad_fd_ == -1se_fd)string of d_stream.XXXXXXr= -1se_fd)-byte object <-1ch is: ubstring of  substring of ect the number of threads. failed:  detect the number of threads.-byte object <iled: f threads.stream.XXXXXXstream.XXXXXX: .XXXXXX... xecve(_fd) is: hich is: e object <etected  == -1ir(".XXXXXXlose_fd)ect the number of threads.. xecve( exception with description "object <in e number of threads.lose(args->close_fd)/tmp/captured_stream.XXXXXX/captured_stream.XXXXXX-byte object < ream.XXXXXXailed: ... .  detect the number of threads.t tured_stream.XXXXXXreads._fd_ == -1ailed: mp/captured_stream.XXXXXX>close_fd)red_stream.XXXXXXstream.XXXXXXnumber of threads.d)XXXiled:  exception with description "red_stream.XXXXXX(args->close_fd)
X= -1led: reads.red_stream.XXXXXXf  substring of ng of s.threads.  == -1 ..) in f led: d: d_stream.XXXXXX mber of threads.stream.XXXXXXhdir("ject < is: t X failed: not ubstring of ect the number of threads.) failed:  substring of er of threads.eption with description "er of threads.ject <ubstring of f threads.:  == -1f ng of ct <>close_fd) is: _fd):  substring of  of threads.e number of threads.ream.XXXXXXd)_fd_ == -1aptured_stream.XXXXXX < of threads. substring of mber of threads.lose(args->close_fd)/captured_stream.XXXXXXred_stream.XXXXXX
not ... rgs->close_fd)ream.XXXXXX is: -1ng of ream.XXXXXXthreads.aptured_stream.XXXXXXxecve(object <aptured_stream.XXXXXXads.ir(" of threads.s.not er of threads.etect the number of threads.se(args->close_fd)d_ == -1s.xecve(f threads.d_ == -1ad_fd_ == -1s: number of threads.rxecve(ject <ct <er of threads.(args->close_fd)= -1ads.XXXXXam.XXXXXX/tmp/captured_stream.XXXXXX substring of eption with description "e(lose_fd)t red_stream.XXXXXXse(args->close_fd) ...) in e object <mp/captured_stream.XXXXXX... = -1
 == -1string of  of threads.threads.L"ject <XXXXXnumber of threads.ect the number of threads.XXXd lose(args->close_fd)number of threads.s:  failed: : am.XXXXXXe number of threads.rgs->close_fd)02X_fd)tured_stream.XXXXXXxception with description " <ir("hich is: se(args->close_fd)ject <cve(-102X/captured_stream.XXXXXXted  lose(args->close_fd)ream.XXXXXXtured_stream.XXXXXXf threads.("d)failed: s. <rject <t  of se(args->close_fd)failed: ream.XXXXXXXXXfailed: ream.XXXXXXled: _fd_ == -1rgs->close_fd)ed: d_ == -1  ...) in yte object <lose_fd). ("reads.eption with description "ng of e object <X exception with description "read_fd_ == -1ads.t the number of threads.= -1tured_stream.XXXXXXir("s->close_fd)..) in ("etect the number of threads.rgs->close_fd)s. substring of tured_stream.XXXXXX-1object <ected ) failed: -1 is: xception with description "mp/captured_stream.XXXXXX.XXXXXXted ++ exception with description "ect the number of threads.d: ect the number of threads.d: failed: mp/captured_stream.XXXXXX. lose(args->close_fd)s.s->close_fd)se(args->close_fd)failed: ("s: read_fd_ == -1ted ads.d .XXXXXX/captured_stream.XXXXXXd: Xd_ == -1 ...) in ++ exception with description "/tmp/captured_stream.XXXXXX <>close_fd)mp/captured_stream.XXXXXX02X
ad_fd_ == -1... L"ject <s: etected se_fd)-byte object <failed: red_stream.XXXXXXf threads. of threads.am.XXXXXXaptured_stream.XXXXXX of ..) in /tmp/captured_stream.XXXXXX e number of threads...) in /captured_stream.XXXXXXyte object <ected ) in  ected -1etect the number of threads._fd_ == -1ir(" ...) in XXXads.ted >close_fd)mp/captured_stream.XXXXXXream.XXXXXXted lose(args->close_fd)  of threads.er of threads./captured_stream.XXXXXX of threads.f threads.e object <... ..) in  of threads.-1 detect the number of threads.ject <...  == -1s.) failed: . /captured_stream.XXXXXXs->close_fd)in d_stream.XXXXXX substring of ect the number of threads.reads.-1ch is: . lose(args->close_fd)led: 02Xaptured_stream.XXXXXXam.XXXXXX of not Xmber of threads.) in e object <cve(Xiled: ring of t ("ted se(args->close_fd)string of r of threads.er of threads./captured_stream.XXXXXX..) in er of threads.lose_fd)ject <stream.XXXXXX. d) is: ject <reads.ads.etect the number of threads.d_stream.XXXXXX number of threads.02X...  detect the number of threads.failed: ect the number of threads.xecve(... object </captured_stream.XXXXXXch is: threads.stream.XXXXXXject <in  of string of er of threads.ed: xception with description "er of threads.read_fd_ == -1cve(object <ad_fd_ == -1the number of threads. ...) in s.: mber of threads.L"rgs->close_fd)ubstring of f threads.ed: se(args->close_fd)) failed: iled: d_stream.XXXXXX_fd_ == -1++ exception with description "s: string of yte object <s:   of threads.mber of threads. am.XXXXXXmp/captured_stream.XXXXXXhich is: _fd)failed: -byte object <ring of ted ) failed: ubstring of XXX: ject <(args->close_fd)er of threads.L" of X... se(args->close_fd)mber of threads.. /tmp/captured_stream.XXXXXXam.XXXXXXetect the number of threads.ailed: ng of d_stream.XXXXXXt the number of threads.ed: ailed: eption with description " exception with description ". er of threads...) in red_stream.XXXXXX-byte object </captured_stream.XXXXXXubstring of 
XXXXXd: : Xthe number of threads.s.in d:  of threads. of ("L"xecve(lose(args->close_fd)++ exception with description "ed: 
(". : -1tured_stream.XXXXXXnumber of threads.ad_fd_ == -1object <. ed: number of threads.the number of threads.se(args->close_fd)etect the number of threads.mber of threads.the number of threads.red_stream.XXXXXXe object <in XXXstream.XXXXXX of threads.tured_stream.XXXXXX ...) in mber of threads.) failed: ailed:  exception with description "
ch is: XXXXX= -1 <tured_stream.XXXXXXtured_stream.XXXXXXXXXs: red_stream.XXXXXXted ) in XXXXXt XXXXXxecve(d)rgs->close_fd)aptured_stream.XXXXXXled: ads.rgs->close_fd)aptured_stream.XXXXXXs->close_fd)eption with description "/tmp/captured_stream.XXXXXX..) in lose_fd) ...) in  failed: mp/captured_stream.XXXXXXlose(args->close_fd) ...) in .XXXXXX of threads.s. mp/captured_stream.XXXXXXad_fd_ == -1threads.mber of threads.-1stream.XXXXXX..) in ch is: rgs->close_fd)>close_fd)) failed:  </captured_stream.XXXXXX of threads.d d: er of threads.ad_fd_ == -1 failed: ad_fd_ == -1..) in ) failed: Xaptured_stream.XXXXXXxception with description "= -1mber of threads.ject <_fd_ == -1) failed: mber of threads.-1 is: stream.XXXXXXs: t failed: eption with description "s: d)reads.s->close_fd) exception with description "
ads.ed: XXXch is:  is: ..) in ected  exception with description "
>close_fd)ect the number of threads.("mber of threads.ect the number of threads._fd_ == -1e number of threads.ream.XXXXXXreads.
ad_fd_ == -1.XXXXXXe object <cve(>close_fd)= -1 ubstring of Xd: e object <red_stream.XXXXXXthreads.s->close_fd)lose_fd)lose(args->close_fd) detect the number of threads.ected s.lose(args->close_fd)lose_fd)e object <Xct < == -1ailed:  == -1XXXXX) failed: cve(= -1s.lose(args->close_fd)mber of threads.string of mber of threads. detect the number of threads.stream.XXXXXX of e object <eption with description "lose(args->close_fd)XXX substring of in ) in 
 ...) in er of threads.etect the number of threads.threads. == -1aptured_stream.XXXXXXthe number of threads.L") failed: threads.led: cve(02X/tmp/captured_stream.XXXXXXL"s: t the number of threads. == -1cve(threads.read_fd_ == -1mber of threads. of threads. ring of ct <lose_fd)threads.. _fd_ == -1xception with description "led: f lose(args->close_fd) of iled: reads.(args->close_fd)... cve(ct <. ... am.XXXXXXd ect the number of threads.++ exception with description "ir("e(red_stream.XXXXXXng of /captured_stream.XXXXXX d: Xt the number of threads.not d: XXXXXe(ream.XXXXXXd: ct < ...) in XXXXXe number of threads.-byte object <hich is: the number of threads.ted ted ream.XXXXXXthreads.-1++ exception with description "in s.) failed: d: f ..) in red_stream.XXXXXX= -1ect the number of threads.t the number of threads.ct <d: mp/captured_stream.XXXXXX substring of s. se(args->close_fd)s: failed: f d: am.XXXXXXhich is: lose(args->close_fd)_fd_ == -1etected f Xhich is: ad_fd_ == -1 ...) in ++ exception with description "f in mber of threads.object <etect the number of threads.xecve(xecve(lose_fd)xecve(ailed: rgs->close_fd)aptured_stream.XXXXXXstream.XXXXXXlose(args->close_fd)ct <ct <se_fd) s.t the number of threads.number of threads.led: yte object <read_fd_ == -1_fd)s: reads.s.ed: d)t number of threads.ch is: object <++ exception with description "ed: ubstring of the number of threads.er of threads.er of threads._fd_ == -1red_stream.XXXXXX is: ... failed:  is:  ++ exception with description ": rad_fd_ == -1mber of threads..XXXXXXads.am.XXXXXX/captured_stream.XXXXXXX-byte object <>close_fd)-1xecve(t the number of threads.e number of threads. exception with description "ads.e object <ads. == -1se_fd)Xch is: d)t the number of threads.e object <e number of threads.am.XXXXXX>close_fd)hdir("xecve(ads.f threads.e object <ct <_fd)not s.aptured_stream.XXXXXX++ exception with description "red_stream.XXXXXX02Xeption with description "XXXd: se(args->close_fd)ect the number of threads.aptured_stream.XXXXXXnot _fd_ == -1/captured_stream.XXXXXXread_fd_ == -1ads.ng of ted number of threads. of xception with description "se(args->close_fd)f threads. of string of xecve(hdir("ads.cve(lose(args->close_fd): 
rject <ads. failed: ... rgs->close_fd)e number of threads.ads.e( == -1t _fd)(args->close_fd)(" failed: eption with description "cve(.XXXXXX/tmp/captured_stream.XXXXXXring of number of threads.ject </tmp/captured_stream.XXXXXX detect the number of threads.>close_fd)object <am.XXXXXX failed: /tmp/captured_stream.XXXXXXs:  xecve(ct <number of threads.reads.am.XXXXXX/tmp/captured_stream.XXXXXXs.ected d: lose(args->close_fd)lose(args->close_fd)failed: hich is: read_fd_ == -1the number of threads.s: hdir("s./tmp/captured_stream.XXXXXX++ exception with description "ad_fd_ == -1/tmp/captured_stream.XXXXXX_fd_ == -1yte object <.XXXXXXnot ream.XXXXXX. ect the number of threads.ted ed: reads.threads.02Xam.XXXXXXXXXXX substring of .XXXXXX
 detect the number of threads.ject <. s.ed: f threads.ream.XXXXXXthe number of threads. of threads.ch is: ct <ailed: e(ream.XXXXXXt the number of threads.am.XXXXXXf ..) in hich is: ject <d _fd_ == -1 <ed: XXXng of s.reads.f threads.lose_fd)threads.XXX detect the number of threads.) failed: _fd)reads.d:  detect the number of threads.s->close_fd)s.lose_fd)ect the number of threads.aptured_stream.XXXXXXs->close_fd)_fd_ == -1e object <-byte object < se_fd)ubstring of . ..) in ct </captured_stream.XXXXXXeption with description " exception with description "-byte object <ubstring of s->close_fd)s.cve(ad_fd_ == -1Xreads.s: ected d_ == -1tured_stream.XXXXXXthe number of threads.-1++ exception with description "lose_fd)ring of d_stream.XXXXXXlose(args->close_fd)mp/captured_stream.XXXXXXthe number of threads.s.) in ch is:  ...) in _fd)= -1... not rgs->close_fd)) in in  of threads.reads.xception with description "xecve(-byte object <ect the number of threads.hich is:  failed: lose_fd)Xd_stream.XXXXXXreads./tmp/captured_stream.XXXXXXred_stream.XXXXXXXL"string of s.mber of threads.: red_stream.XXXXXX: ject <ct <ream.XXXXXXread_fd_ == -1ubstring of XXXd_ == -1s: .  detect the number of threads.rgs->close_fd) ...) in 02Xe object <s->close_fd) ...) in hdir(">close_fd) substring of ..) in read_fd_ == -1stream.XXXXXXXyte object < ...) in s. == -1 ted L"ads.yte object <. ch is: d_ == -1. threads. is: stream.XXXXXXyte object <tured_stream.XXXXXXf threads.X++ exception with description "ad_fd_ == -1 of threads.ed: -byte object <s->close_fd)s: ailed: = -1ted .XXXXXXled: am.XXXXXXred_stream.XXXXXXthreads.ct <etect the number of threads.t : lose(args->close_fd)L" <-byte object <d_stream.XXXXXX of threads. exception with description "xception with description "er of threads.t the number of threads.etect the number of threads.02Xreads.t s.aptured_stream.XXXXXXs.number of threads.e(ad_fd_ == -1_fd_ == -1ect the number of threads.t red_stream.XXXXXXnot ect the number of threads.... eption with description "led: ubstring of ng of tured_stream.XXXXXXd  <f  substring of f hdir("am.XXXXXXcve(stream.XXXXXXject <ads.xception with description "_fd_ == -1rng of iled: etected ream.XXXXXX= -1Xxception with description "s: 
 detect the number of threads.ted t -1red_stream.XXXXXXnumber of threads.ir("threads.++ exception with description "ads. <stream.XXXXXXt (args->close_fd)e object <f threads. ct <XXXXXlose(args->close_fd)e number of threads.er of threads.("ads./captured_stream.XXXXXXct <failed: led: t ring of ng of f threads.e object <d ubstring of reads. d: the number of threads.eption with description "d_ == -1Xxecve(xception with description ": d d) is: ++ exception with description "tured_stream.XXXXXX substring of L"ct <not ++ exception with description "threads.aptured_stream.XXXXXXnumber of threads.X failed: lose(args->close_fd)mp/captured_stream.XXXXXX of threads.reads.ir("reads. of ected : ailed:  exception with description "lose(args->close_fd)(args->close_fd) ...) in s.yte object <hich is: etected d_stream.XXXXXXstring of e(eption with description "mber of threads.r= -1e(threads.ted ailed: ) in ads.object <rgs->close_fd)ct <object <X of threads.X) in ject <d not L"ject <am.XXXXXXd_ == -1ring of xecve( .  == -1ed: f  exception with description "xecve(ected t iled: failed: xception with description "-1ads./captured_stream.XXXXXXmber of threads.t ream.XXXXXXected /tmp/captured_stream.XXXXXXreads.object <e(f threads.d: d: ads..XXXXXXect the number of threads.ubstring of tured_stream.XXXXXX("s.hdir(" 
ads.read_fd_ == -1d)eption with description "(" exception with description "Xect the number of threads.L"e number of threads. detect the number of threads.string of eption with description "t the number of threads.d)>close_fd)d  detect the number of threads.... : the number of threads.s. detect the number of threads.ads.led: e(d: ad_fd_ == -1iled: ct < ) failed: not red_stream.XXXXXX(args->close_fd)t ct <se_fd)X.XXXXXX... ng of -1the number of threads.ad_fd_ == -1 ads.tured_stream.XXXXXXd)_fd_ == -1failed: yte object <++ exception with description " exception with description "ected XXXe object <f threads.aptured_stream.XXXXXXhich is: = -1d_stream.XXXXXXed: read_fd_ == -1s.d_ == -1 exception with description "s: 
 is: ring of tured_stream.XXXXXXs: 02Xailed: er of threads.) failed: = -1ect the number of threads.aptured_stream.XXXXXX detect the number of threads.XXXXXream.XXXXXXd)d)(args->close_fd)Xnumber of threads.e(ng of   failed: aptured_stream.XXXXXXads.L"d_ == -1reads.the number of threads. 
e number of threads.s. substring of hich is: e object <e object <ect the number of threads.>close_fd)..) in e() in ubstring of the number of threads.string of s: s: _fd_ == -1d_stream.XXXXXXXXXXXXXX == -1.XXXXXXthreads.t f XXXt the number of threads.ads.d)ect the number of threads.
 t iled: s: eption with description "hdir("Xs->close_fd)s._fd)not _fd) ...) in f d: -byte object < detect the number of threads. of threads.XXXXd hdir("xception with description "ad_fd_ == -1 == -1er of threads.mp/captured_stream.XXXXXXs->close_fd) is:  <lose(args->close_fd)lose(args->close_fd)) in 
threads.d rL"mber of threads.Xhich is: iled: ected ) failed: mber of threads.ected ted ailed: ..) in ir("/captured_stream.XXXXXXd) <ream.XXXXXXXXXXXe(ailed: .XXXXXXe object <e object <f threads.Xse_fd)object <... er of threads.... ch is: eption with description "mber of threads.t the number of threads.-byte object <number of threads.d_ == -1 ...) in e object <iled: stream.XXXXXXnumber of threads.in  failed: iled: yte object <stream.XXXXXX= -1e number of threads.t XXXream.XXXXXXubstring of etect the number of threads.. _fd) etected  is: ject <d: ected  is: ailed: hdir("ng of er of threads.am.XXXXXXiled:  ) in (args->close_fd)ng of e object <ject <XXXXX exception with description "ct < ("f threads.ng of led: etected reads.object <f xecve(red_stream.XXXXXXd_stream.XXXXXXailed: (args->close_fd)eption with description "ads...) in the number of threads.XXX("XXXXXd: ream.XXXXXXd hdir("etect the number of threads.se_fd)t L"L"mp/captured_stream.XXXXXXct <red_stream.XXXXXXnot ("reads.ailed: in etected lose(args->close_fd)ect the number of threads._fd)cve(rgs->close_fd)tured_stream.XXXXXX of not ads.am.XXXXXX>close_fd)eption with description "ailed: rgs->close_fd).XXXXXXin lose(args->close_fd)s.f threads.mp/captured_stream.XXXXXXng of >close_fd)d)iled: aptured_stream.XXXXXXt the number of threads.: am.XXXXXXhich is: ads.X= -1ected se_fd)yte object <read_fd_ == -1e number of threads.ed: ring of red_stream.XXXXXXring of /captured_stream.XXXXXX("read_fd_ == -1number of threads.etected rf threads.rgs->close_fd)/captured_stream.XXXXXXrgs->close_fd)/tmp/captured_stream.XXXXXXred_stream.XXXXXXailed: 
) in L"lose(args->close_fd)object <(args->close_fd)... 02Xir("etected lose(args->close_fd)etected etect the number of threads.ailed: ++ exception with description "the number of threads.XXXd)ring of ubstring of /tmp/captured_stream.XXXXXXread_fd_ == -1ted ++ exception with description "ream.XXXXXXXXXXXe(... t number of threads.t the number of threads.s->close_fd)ring of  == -1object <e(read_fd_ == -1 of threads.ected er of threads.ject <hich is: ads.not -1number of threads.ted number of threads.er of threads. == -1ject <number of threads.eption with description " L"red_stream.XXXXXXread_fd_ == -1..) in ng of aptured_stream.XXXXXX/captured_stream.XXXXXXfailed:  of threads.reads. XXXlose_fd)etected L"
 is:   is: ted >close_fd)_fd)reads....  ...) in lose(args->close_fd)t d_ == -1 of XXX-byte object <s: e number of threads.ads.cve(lose_fd)xecve(tured_stream.XXXXXXin number of threads.se(args->close_fd)lose(args->close_fd)rgs->close_fd)-1hdir("s->close_fd)d)the number of threads.-byte object <ream.XXXXXXeption with description "led: ch is:  failed: xception with description "hdir("e object <led: rgs->close_fd)failed: ad_fd_ == -1se_fd)number of threads.d_stream.XXXXXXthreads.) in failed: ad_fd_ == -1e(ring of ected lose_fd)led:  detect the number of threads.ir("read_fd_ == -1read_fd_ == -1red_stream.XXXXXXect the number of threads. == -1stream.XXXXXX substring of hdir("/captured_stream.XXXXXXject <>close_fd)er of threads.led: f mber of threads.ads.e(_fd_ == -1.XXXXXXe(t ng of f threads./captured_stream.XXXXXXobject <ir(" exception with description "hich is:  detect the number of threads.rread_fd_ == -1 of >close_fd)ads.object < of threads.: f ream.XXXXXX of : s.f  of threads._fd_ == -1ng of in ng of etected stream.XXXXXXread_fd_ == -1r) in iled:  detect the number of threads.= -1xecve(/captured_stream.XXXXXXX the number of threads.ring of reads. is:  ...) in xecve(rmp/captured_stream.XXXXXXnumber of threads.ad_fd_ == -1in eption with description "X failed: d_ == -1object <_fd)s. stream.XXXXXX/captured_stream.XXXXXXam.XXXXXXnumber of threads.s. substring of d_ == -1hich is: (args->close_fd)aptured_stream.XXXXXX ted t threads.d_ == -1= -1 f threads.red_stream.XXXXXXect the number of threads.02X of threads.= -1ected ject < of L" (args->close_fd)f threads.d object <etect the number of threads.object <ad_fd_ == -1ir("L"ng of ads.ads.hich is: number of threads.xception with description " is: am.XXXXXX-byte object <string of mp/captured_stream.XXXXXX..) in reads.d_ == -1("d_ == -1: d_stream.XXXXXXads.Xtured_stream.XXXXXXyte object < exception with description "cve(t the number of threads.02Xads.red_stream.XXXXXX <the number of threads.("e object < exception with description "_fd_ == -1number of threads.hich is: .XXXXXXf threads.am.XXXXXXect the number of threads.XXXXXthreads. is:  <number of threads.Xxecve(eption with description "reads.hich is: e number of threads...) in ch is: xception with description "lose(args->close_fd)stream.XXXXXX/tmp/captured_stream.XXXXXXthreads. yte object <ected -1 == -1failed: lose(args->close_fd)lose(args->close_fd)ect the number of threads.e(ailed: ected : d:  detect the number of threads. of threads._fd_ == -1ct <XXXted ject <rct <yte object <mber of threads.Xreads.aptured_stream.XXXXXX) failed: number of threads.read_fd_ == -1ct <xecve(ad_fd_ == -1.XXXXXX-byte object < detect the number of threads.hdir("se(args->close_fd)-1t the number of threads.se(args->close_fd)lose(args->close_fd)/captured_stream.XXXXXXnot ct <ch is:  substring of . d yte object <hdir("number of threads. detect the number of threads.ring of ng of eption with description "..) in f threads.d ("/tmp/captured_stream.XXXXXX <eption with description "d_stream.XXXXXXthe number of threads.ads.. threads. exception with description "cve(threads.number of threads.mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXled:  of threads.cve(= -1 is:  e number of threads.ream.XXXXXXubstring of >close_fd)am.XXXXXXstream.XXXXXXct < is: ject <d_ == -1 exception with description "d) == -1e number of threads.) in ream.XXXXXXad_fd_ == -1number of threads.lose_fd)... Xe(d)XXXreads.cve( exception with description ": t the number of threads.d e object <aptured_stream.XXXXXXred_stream.XXXXXXX++ exception with description "= -102Xetect the number of threads.ailed: the number of threads.ubstring of ream.XXXXXX-byte object <ir("-1hich is: ailed: f yte object <stream.XXXXXXred_stream.XXXXXXubstring of d: L" ..) in /captured_stream.XXXXXXthreads. failed: hdir("/tmp/captured_stream.XXXXXX = -1 of threads. exception with description "rgs->close_fd)lose_fd)hich is: -1 ...) in etected mber of threads.d_ == -1in  exception with description "XXXXXreads. == -1d se_fd)mp/captured_stream.XXXXXXhich is:  is: aptured_stream.XXXXXXlose_fd)/tmp/captured_stream.XXXXXXt ring of  substring of iled: ream.XXXXXXrubstring of reads.number of threads.lose(args->close_fd)ad_fd_ == -1L"read_fd_ == -1ream.XXXXXXd_stream.XXXXXXse_fd)yte object <t the number of threads.iled: ject <xception with description "e(aptured_stream.XXXXXXetect the number of threads.ailed: xecve(_fd_ == -1e object <(args->close_fd)s.ted f threads.++ exception with description "read_fd_ == -1ected  reads.reads./tmp/captured_stream.XXXXXXject <tured_stream.XXXXXXf threads.mber of threads.f threads.aptured_stream.XXXXXXad_fd_ == -1threads.led: t e object <t the number of threads.ir("cve(f Xlose_fd)d_ == -1iled: failed: XXX_fd_ == -1hich is: read_fd_ == -1se(args->close_fd) substring of cve(d: cve(etected XXXXXXXXin L"ch is: string of >close_fd)led: .XXXXXXs->close_fd)read_fd_ == -1object <L"_fd_ == -1in  == -1er of threads.lose(args->close_fd)-1red_stream.XXXXXXrnumber of threads.mp/captured_stream.XXXXXXe(reads...) in s->close_fd)ailed: ring of threads. ads. ...) in stream.XXXXXX-byte object <number of threads.ubstring of e( mber of threads. ...) in eption with description "etected ) in ream.XXXXXXf threads._fd)/tmp/captured_stream.XXXXXXxception with description "etect the number of threads.s->close_fd) of . ailed: >close_fd)er of threads. ...) in xecve( eption with description "ring of X_fd_ == -1d_ == -1 == -1_fd_ == -1 substring of se(args->close_fd) exception with description "("02Xthe number of threads.red_stream.XXXXXXf threads.etect the number of threads.number of threads.eption with description "re object <read_fd_ == -1ring of number of threads.ream.XXXXXX= -1lose(args->close_fd)) in aptured_stream.XXXXXXtured_stream.XXXXXXf  ted  of .XXXXXXe(reads.er of threads.xecve(ubstring of e object <xecve(mp/captured_stream.XXXXXXd: etected s.aptured_stream.XXXXXX == -1. L"s: d_stream.XXXXXXam.XXXXXXrgs->close_fd)yte object <yte object <hich is: .XXXXXX..) in  of xception with description "er of threads.02Xam.XXXXXX detect the number of threads.ted  failed: failed: f r>close_fd)hdir("string of se(args->close_fd)not 02Xyte object <-byte object </tmp/captured_stream.XXXXXXse(args->close_fd)e number of threads. 
= -1t the number of threads.d: cve(-byte object <ng of mp/captured_stream.XXXXXXs->close_fd)reads. ...) in  ed: (args->close_fd)red_stream.XXXXXX  is: = -1lose_fd)_fd_ == -1lose(args->close_fd)Xad_fd_ == -1aptured_stream.XXXXXX == -1ch is: ads.mp/captured_stream.XXXXXX of  exception with description "ch is: ++ exception with description "ected mp/captured_stream.XXXXXXed: ir("iled:  exception with description "d: XXXXX: ring of : iled:  == -1aptured_stream.XXXXXX ...) in s.red_stream.XXXXXXcve(Xd  == -1XXXXX>close_fd)threads._fd_ == -1 = -1the number of threads.ad_fd_ == -1rgs->close_fd)f ads.ring of 02X exception with description ">close_fd)/captured_stream.XXXXXXect the number of threads.) in mp/captured_stream.XXXXXXlose_fd)ng of  ("++ exception with description ": xception with description " s->close_fd)ct <_fd)ream.XXXXXXads. detect the number of threads.aptured_stream.XXXXXXeption with description " of threads.ected stream.XXXXXXrad_fd_ == -1/captured_stream.XXXXXXe(
++ exception with description "s.XXXXXr_fd_ == -1am.XXXXXX02X(args->close_fd)threads./tmp/captured_stream.XXXXXXject < exception with description "stream.XXXXXXread_fd_ == -1.XXXXXX02Xubstring of  exception with description "ch is: L"ads.tured_stream.XXXXXXd_stream.XXXXXX..) in cve(s.se_fd)
 substring of etected lose(args->close_fd)the number of threads.threads.L"d)eption with description "yte object <lose(args->close_fd)am.XXXXXX(args->close_fd)ailed:  of threads. substring of se_fd)read_fd_ == -1/captured_stream.XXXXXXL"ubstring of mber of threads. is: e number of threads./captured_stream.XXXXXXd_stream.XXXXXX-byte object <ring of : t the number of threads. ("d_ == -1failed: ("rads.number of threads.e(red_stream.XXXXXXreads.ubstring of -1etect the number of threads. == -1mp/captured_stream.XXXXXXmber of threads. exception with description "("aptured_stream.XXXXXXd) <s->close_fd)s->close_fd)er of threads.ad_fd_ == -1
failed: . led: ct <ch is: ream.XXXXXXse_fd) exception with description "= -1in xecve(mp/captured_stream.XXXXXX.XXXXXX == -1ream.XXXXXXthreads.threads.ream.XXXXXXe number of threads.s.reads.  ...) in >close_fd)d)("tured_stream.XXXXXXe object <>close_fd)xecve( detect the number of threads./captured_stream.XXXXXXed: threads. failed: -1cve(ct <) in XXXXXt the number of threads.threads.er of threads.er of threads. am.XXXXXX <ads.tured_stream.XXXXXX substring of  <red_stream.XXXXXXf number of threads. is: hich is: threads.xecve( is: . not ailed:  <_fd) iled: ..) in ads.) failed: L" of threads.er of threads.se_fd)_fd)mber of threads.stream.XXXXXXhdir("= -1ch is:  substring of  ed: threads.= -1("object < failed: rthe number of threads.xception with description " (">close_fd)mp/captured_stream.XXXXXXxecve(ailed: (args->close_fd)ads.tured_stream.XXXXXXads._fd)read_fd_ == -1se_fd)ailed: ("hich is: red_stream.XXXXXX= -1eption with description " detect the number of threads.ad_fd_ == -1XXXXXream.XXXXXX exception with description " of threads.ed: d: ring of cve(yte object <ected ("rs.not d_ == -1ch is: mp/captured_stream.XXXXXX  ++ exception with description "threads.ring of ailed: (args->close_fd)d: ad_fd_ == -1 s.f threads./tmp/captured_stream.XXXXXX substring of s.s->close_fd) <tured_stream.XXXXXXthreads.failed: f t the number of threads.in d: yte object <s->close_fd)(args->close_fd)er of threads.s.ad_fd_ == -1... ir("stream.XXXXXXubstring of  of threads.: ted rgs->close_fd)_fd)) failed: xecve(s->close_fd)red_stream.XXXXXXread_fd_ == -1in X. ch is: hich is: e number of threads.ect the number of threads.rgs->close_fd)xecve(red_stream.XXXXXXd: ..) in ubstring of d_stream.XXXXXXXXXXXads.lose_fd)++ exception with description " exception with description " r failed: hich is: hich is: ubstring of threads.d mber of threads.number of threads.string of reads.read_fd_ == -1/captured_stream.XXXXXXread_fd_ == -1led:  detect the number of threads.etected ads.-byte object <t yte object <etect the number of threads.not -byte object <not ected X failed: am.XXXXXXe(ad_fd_ == -1s->close_fd)..) in ubstring of rt hich is: reads.ream.XXXXXXe(ailed:  e number of threads.ng of s.mp/captured_stream.XXXXXXailed: ailed: etect the number of threads.in object <string of ream.XXXXXX(args->close_fd)ad_fd_ == -1lose(args->close_fd)ream.XXXXXXd: :  is: ected  of threads.in  ...) in ad_fd_ == -1e number of threads.f threads.X: ..) in ir("in Xaptured_stream.XXXXXXxecve(XXXled:  of /tmp/captured_stream.XXXXXX exception with description "t the number of threads.>close_fd)/tmp/captured_stream.XXXXXXted  substring of led: ct <etect the number of threads.ect the number of threads. exception with description "ailed:  is: threads.s.... tured_stream.XXXXXXubstring of mp/captured_stream.XXXXXX eption with description "L"rgs->close_fd)led: mber of threads.) in  <("the number of threads. substring of failed: am.XXXXXXhdir("ect the number of threads. ted reads.tured_stream.XXXXXX detect the number of threads.reads.etect the number of threads.the number of threads. == -1s.cve(ct <>close_fd): etected eption with description "ted cve(reads.= -1 failed: lose(args->close_fd) == -1(args->close_fd)(") failed:  substring of lose(args->close_fd)= -1>close_fd) is:  exception with description "ct <object <s.aptured_stream.XXXXXXe object < substring of ++ exception with description "ream.XXXXXXxecve(lose_fd)the number of threads.e(XXXXX.XXXXXX++ exception with description "s._fd)e object <-byte object < of reads.XXXXXL"-byte object <("aptured_stream.XXXXXXf rgs->close_fd)ng of ... eption with description "threads.ed:  ed: lose_fd)cve(...  e(ring of ng of ch is: xecve( ...) in threads.lose_fd)in in = -1ubstring of threads.threads.) in t /captured_stream.XXXXXXch is: ring of _fd)hich is: ject <ir("(args->close_fd)am.XXXXXX substring of ng of -1. ream.XXXXXXam.XXXXXXXir("d_ == -1mp/captured_stream.XXXXXX/captured_stream.XXXXXX ...) in se(args->close_fd)aptured_stream.XXXXXXthreads. of threads.mp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXreads.d: ... reads.ads.XXXxception with description "ected s->close_fd) == -1iled: : cve(lose_fd)("rgs->close_fd) read_fd_ == -1ch is: ads.se(args->close_fd)(") in -1er of threads.XXXXXs.: failed: ad_fd_ == -1-1hdir("/captured_stream.XXXXXX(args->close_fd) is: XXXXX  of mber of threads.ailed: t xecve(f threads._fd)in  substring of number of threads.-byte object <ng of hich is: ct <d_ == -1etect the number of threads.++ exception with description "ads.02Xetected failed:  <XXXXXf threads.d_ == -1se(args->close_fd)ted e object <am.XXXXXXL"ct < in not (args->close_fd) ...) in = -1er of threads.reads. == -1 is: ailed: >close_fd)ch is: am.XXXXXXd_stream.XXXXXXlose(args->close_fd)aptured_stream.XXXXXXads.ir(" ...) in (") in  ...) in yte object <am.XXXXXX ...) in d: xecve(ads.) in d threads. is: reads.s.ads.the number of threads.ct <etect the number of threads.e number of threads.ed: d string of ) failed: e number of threads.d_ == -1ted XXXring of  of threads. <("s.f threads. failed: red_stream.XXXXXXct < of reads.ir(".XXXXXX is: -1d_stream.XXXXXXstream.XXXXXXhich is: (args->close_fd)e((args->close_fd)L"  of threads.in (args->close_fd)tured_stream.XXXXXX-byte object <
ect the number of threads.XXXe number of threads.ct <-byte object <ad_fd_ == -1(args->close_fd): /tmp/captured_stream.XXXXXXs.reads.ted red_stream.XXXXXXf am.XXXXXX) failed: stream.XXXXXXs->close_fd)ads.xception with description ") failed: in 02X
r of threads.s. ...) in read_fd_ == -1..) in er of threads.... d hich is: ng of f threads.etected Xlose(args->close_fd)Xect the number of threads..XXXXXX/tmp/captured_stream.XXXXXX... d: stream.XXXXXXd_stream.XXXXXX etected reads. substring of  detect the number of threads.xception with description "e number of threads.t the number of threads.ir("ch is: object <mber of threads.02Xread_fd_ == -1d_stream.XXXXXXf ect the number of threads.xception with description "ads.ring of hich is: d_ == -1ect the number of threads.ad_fd_ == -1 exception with description "ng of rgs->close_fd)s->close_fd)s. failed:  failed: s.-1read_fd_ == -1XXX of (args->close_fd)d: am.XXXXXXiled: (args->close_fd)e(.XXXXXXreads.lose_fd)mp/captured_stream.XXXXXXir("ads.(args->close_fd)... etected ng of >close_fd)) in ect the number of threads.s->close_fd)yte object <read_fd_ == -1ubstring of d_stream.XXXXXXe object <xception with description "d:  ..) in .XXXXXXubstring of XXXect the number of threads. <e(++ exception with description "e object < detect the number of threads.reads. mber of threads.L"mber of threads.ad_fd_ == -1. ("ads.threads.ted eption with description ") failed:  d e object <s->close_fd)led:  ..) in X("02Xd)d_stream.XXXXXXd)hich is: read_fd_ == -1d_stream.XXXXXXread_fd_ == -1string of hich is: ) failed: in ected ject <ir("rgs->close_fd)reads...) in rgs->close_fd)xecve(xecve(number of threads./tmp/captured_stream.XXXXXX of threads.... /tmp/captured_stream.XXXXXX detect the number of threads.am.XXXXXXream.XXXXXX++ exception with description "d: t the number of threads.ir("XXXXX..) in >close_fd)number of threads./captured_stream.XXXXXX <>close_fd)stream.XXXXXX ...) in ads.Xcve(ads.ct <ream.XXXXXXject <ir("Xthreads.ir("("ected -1am.XXXXXXubstring of ) failed: ng of  failed: ubstring of xception with description "rad_fd_ == -1read_fd_ == -1 is: ubstring of iled: failed:  substring of read_fd_ == -1d_ == -1e object <f threads.se_fd)mp/captured_stream.XXXXXX <number of threads.led: XXX-byte object <... threads./captured_stream.XXXXXXfailed: aptured_stream.XXXXXX>close_fd)eption with description "/captured_stream.XXXXXXs->close_fd)cve( == -1
reads.object <ring of 
d_ == -1ect the number of threads.Xer of threads.("aptured_stream.XXXXXXse_fd)... tured_stream.XXXXXXted reads.aptured_stream.XXXXXXthe number of threads.
aptured_stream.XXXXXX detect the number of threads. ...) in  substring of r aptured_stream.XXXXXXrgs->close_fd)s.ream.XXXXXXetect the number of threads.s: d am.XXXXXXfailed: object <("ring of xception with description "not lose(args->close_fd)-byte object <se(args->close_fd)ads.e object <reads.rgs->close_fd)red_stream.XXXXXXnumber of threads.02Xs->close_fd)number of threads.... = -1 == -1e(threads.iled: ir("the number of threads. == -1 == -1read_fd_ == -1 ...) in t the number of threads.e object <= -1d: ct <ect the number of threads.ng of mp/captured_stream.XXXXXX...  failed: object <rgs->close_fd) exception with description "reads.lose(args->close_fd)e(-byte object <t the number of threads.red_stream.XXXXXXetected s: ct <ted s->close_fd)threads.se(args->close_fd)... not mber of threads./tmp/captured_stream.XXXXXX_fd_ == -1etect the number of threads. >close_fd)d)number of threads./captured_stream.XXXXXXhich is: ject <ubstring of ..) in 
d_stream.XXXXXX>close_fd)/captured_stream.XXXXXX failed: _fd)02Xled:  substring of ) in reads.reads. ...) in yte object < is: Xd_stream.XXXXXX++ exception with description "e(etected _fd)02X exception with description "Xer of threads.f threads.e number of threads.f read_fd_ == -1ailed:  of threads.e object < failed:  xception with description "ect the number of threads.) failed: the number of threads.stream.XXXXXXXs.ct <etected hdir("lose_fd)iled: string of  of threads.reads.d_ == -1t the number of threads.(args->close_fd)stream.XXXXXXam.XXXXXX_fd_ == -1 reads.number of threads.mber of threads.ailed: ++ exception with description "in in ...  substring of _fd)ng of /tmp/captured_stream.XXXXXXer of threads.>close_fd)ailed: mber of threads.s: XXXXXected  is: = -1mber of threads.ads. < of etected /tmp/captured_stream.XXXXXXreads.ch is: e number of threads.XXX..) in s: ads.mp/captured_stream.XXXXXXstring of object <:   etect the number of threads. mp/captured_stream.XXXXXX.XXXXXX failed:  d_stream.XXXXXXe object <ream.XXXXXX < of s->close_fd) failed: ted xception with description "e number of threads.s.yte object <-1eption with description "tured_stream.XXXXXXailed: xception with description "(args->close_fd)Xd: reads.ring of se(args->close_fd)-byte object <aptured_stream.XXXXXXXXXXXted ted _fd) L" ads.read_fd_ == -1 detect the number of threads.etect the number of threads._fd) is: ected am.XXXXXXs.am.XXXXXXlose_fd)xecve(ected  is:  ...) in etected s.e object <the number of threads.ad_fd_ == -1 is: threads.L" ads.failed: d string of failed: threads.yte object <yte object <d_stream.XXXXXX.XXXXXX of er of threads.object < substring of  <ad_fd_ == -1ch is:  == -1ng of stream.XXXXXX-1string of ject <tured_stream.XXXXXXreads.s./captured_stream.XXXXXXnot >close_fd) == -1d_ == -1
mp/captured_stream.XXXXXXed:  failed: d_stream.XXXXXXd: ect the number of threads.ted Xream.XXXXXXected ct <s->close_fd)object <ect the number of threads. == -1e number of threads.d: read_fd_ == -1= -1d: se(args->close_fd)lose_fd)Xin ailed: aptured_stream.XXXXXX02Xd)++ exception with description "
..) in  substring of ++ exception with description "rgs->close_fd)d)aptured_stream.XXXXXXX string of d_ == -1ct <ream.XXXXXXreads.ected read_fd_ == -1ubstring of ring of ..) in >close_fd)read_fd_ == -1xecve(ubstring of mp/captured_stream.XXXXXX of threads.reads.f threads.s.read_fd_ == -1stream.XXXXXX(" ...) in in ads.L"ected d:  of 
ad_fd_ == -1 failed: d s: lose_fd)Xtured_stream.XXXXXXfailed: ream.XXXXXX
se_fd)) in mber of threads.f etect the number of threads.ct <ct <ch is: ++ exception with description ") failed: ct </tmp/captured_stream.XXXXXXL" ...) in ..) in  of threads.e(02Xread_fd_ == -1 failed: the number of threads.s.se(args->close_fd)L"ed: xception with description ":  exception with description "lose_fd)= -1ted ir(" of threads. substring of ng of ect the number of threads.lose_fd)er of threads.xecve( the number of threads.XXXetect the number of threads.t the number of threads.) failed: led: 
d_stream.XXXXXXr exception with description "ads.ct <in : xception with description " exception with description "XXXmp/captured_stream.XXXXXXe(XXXXXf threads.tured_stream.XXXXXXXXXXXlose_fd) led: etect the number of threads.d_stream.XXXXXXs.ct < se_fd)hdir("mp/captured_stream.XXXXXXmp/captured_stream.XXXXXXe object <ject <the number of threads.: XXXXXream.XXXXXXng of threads..XXXXXXxception with description "ted  is:  of ng of ailed: _fd_ == -1mber of threads.ch is: tured_stream.XXXXXX == -1reption with description "ject <t the number of threads.in rgs->close_fd)ch is: _fd)++ exception with description "hich is: e number of threads.threads.d)-byte object <. : hich is: yte object <ads.: led: reads.X/tmp/captured_stream.XXXXXXnot threads._fd_ == -1ads.ir("threads.se(args->close_fd) ...) in reads.  ...) in >close_fd)ject <se(args->close_fd)_fd_ == -1 exception with description ">close_fd)cve(yte object <ed: se_fd)d:  detect the number of threads.... XXX xecve(lose_fd)tured_stream.XXXXXX <threads.t d_stream.XXXXXXxecve( == -1 <ream.XXXXXXXXXXXeption with description "red_stream.XXXXXXin  detect the number of threads.t the number of threads.number of threads.L"lose_fd)ch is: mp/captured_stream.XXXXXXL"d: /captured_stream.XXXXXXd_ == -1ailed: ream.XXXXXXstream.XXXXXXse(args->close_fd)02X>close_fd) substring of ject <threads.) failed: ct <rgs->close_fd)t  ected  <ir("rt ) in _fd) == -1hdir("s->close_fd)("ch is: ..) in ubstring of ... hdir("not = -1
>close_fd)yte object <mp/captured_stream.XXXXXXtured_stream.XXXXXX_fd)xecve(XXXXXt the number of threads.) failed: ted ted number of threads./tmp/captured_stream.XXXXXX/tmp/captured_stream.XXXXXXd_stream.XXXXXXect the number of threads.reads.ads.ads. substring of d_ == -1railed: d: in hich is: ream.XXXXXXiled: Xf threads. is:  == -1 exception with description "Xe(ected reads.not = -1tured_stream.XXXXXXring of ..) in s->close_fd) substring of -1: _fd_ == -1 failed: = -1red_stream.XXXXXXject <d_stream.XXXXXXiled: t lose_fd)/tmp/captured_stream.XXXXXX ...) in string of d_stream.XXXXXX failed: s.retect the number of threads.ream.XXXXXXject <ed: eption with description " <= -1s.reads.) failed: string of number of threads.f threads.. se(args->close_fd)xecve(XXXlose_fd)the number of threads. <-1object <XXXreads.ted ) failed: ++ exception with description "s.lose_fd)d)reads.t ads.mp/captured_stream.XXXXXXch is: Xf threads.in ++ exception with description ") in ..) in >close_fd)_fd). r++ exception with description " detect the number of threads.cve(failed: hdir("reads.read_fd_ == -1hich is: ) failed: = -1 == -1in e(: number of threads.r..) in string of >close_fd)ect the number of threads._fd) detect the number of threads.ubstring of mp/captured_stream.XXXXXXng of ubstring of hich is: ject < failed:  <cve( failed: er of threads.er of threads._fd)in rgs->close_fd) is: /captured_stream.XXXXXX-byte object <se_fd)ubstring of cve(ect the number of threads.d d etected  ...) in the number of threads.mp/captured_stream.XXXXXXthe number of threads.mber of threads.XXXse(args->close_fd)s.: ailed: ed: number of threads. substring of  is: e(mp/captured_stream.XXXXXX substring of . cve( substring of xecve(rir("rgs->close_fd)/tmp/captured_stream.XXXXXXs.d_ == -1failed: XXXXXd)lose(args->close_fd)red_stream.XXXXXX= -1.XXXXXXred_stream.XXXXXXse_fd)02Xream.XXXXXXam.XXXXXXXXXXXthreads.lose(args->close_fd)ed: ++ exception with description "f yte object <xception with description ".XXXXXXthe number of threads.: number of threads.ubstring of failed: s->close_fd)-1red_stream.XXXXXX>close_fd)string of rt the number of threads.) in string of t ct <the number of threads. yte object <object <in /captured_stream.XXXXXXream.XXXXXXthe number of threads.s.am.XXXXXX XXXXXs->close_fd)ir("reads.ct <xception with description "-byte object <am.XXXXXXd)number of threads.rir("_fd_ == -1 <XXXhich is: f threads.cve() failed: /captured_stream.XXXXXXam.XXXXXXected am.XXXXXX) failed: red_stream.XXXXXXd)ted 02Xreads.cve(ir("(args->close_fd)ng of ailed: ... e number of threads.led: d_stream.XXXXXX detect the number of threads...) in cve(lose(args->close_fd)) in cve(02Xng of ected number of threads.mp/captured_stream.XXXXXXe object <am.XXXXXXXXXXXs.eption with description "/captured_stream.XXXXXXt /tmp/captured_stream.XXXXXX
ected ads. of threads.mber of threads.failed:  ...) in -byte object <ject <threads. t the number of threads.("etected  detect the number of threads.in ream.XXXXXXL"threads.am.XXXXXXch is: f threads.ir("er of threads.led: the number of threads./captured_stream.XXXXXX) failed: ) in  ...) in ream.XXXXXXt the number of threads.) in ect the number of threads. the number of threads.se(args->close_fd)eption with description "read_fd_ == -1t (args->close_fd)cve(lose_fd)s.ir("reads.("mber of threads.stream.XXXXXX-byte object <hdir("ch is: in d  of threads.e number of threads.("rled: ads. of L"hich is:  substring of cve(led: threads._fd_ == -1_fd) ...) in /captured_stream.XXXXXXject <s.xecve(ject <ir("er of threads.s.threads.ream.XXXXXXs.Xthe number of threads.("-1led: ads.d_stream.XXXXXX ...) in  detect the number of threads.  of ch is: d: ream.XXXXXX-1L"r == -1 is: s: ted t the number of threads.ad_fd_ == -1 ...) in number of threads.yte object <ads.e(s._fd)e number of threads.ted  threads.Xect the number of threads.d_stream.XXXXXXXXXXXject <reads.yte object <mp/captured_stream.XXXXXXlose(args->close_fd)e number of threads.: ect the number of threads.02Xe(f threads.lose(args->close_fd)f threads..XXXXXX/tmp/captured_stream.XXXXXXread_fd_ == -1ring of ads.d_stream.XXXXXX(args->close_fd)/captured_stream.XXXXXXred_stream.XXXXXXch is: e(t the number of threads.ads.etect the number of threads.XXXL"tured_stream.XXXXXXxception with description "ected led: d_stream.XXXXXXled:  of led: ubstring of etect the number of threads.e(-byte object <ed: e(s->close_fd)ch is:  ...) in ad_fd_ == -1t the number of threads.xecve(Xrted -1threads.) failed: eption with description ">close_fd)ream.XXXXXXX == -1xecve(object </tmp/captured_stream.XXXXXXin mp/captured_stream.XXXXXXred: s: object <ject <ch is: failed: stream.XXXXXXubstring of ++ exception with description "("XXXXXs->close_fd)threads.s: ubstring of s: xecve(/tmp/captured_stream.XXXXXXnot  failed: hdir("in lose(args->close_fd)ject <r(args->close_fd)in  f threads.XXXd: ... ...  of threads.= -1threads. of threads.er of threads.s.f threads.rgs->close_fd)etected xecve(ch is: ring of f X ) in ..) in d_stream.XXXXXX == -1_fd)d)number of threads.) in ads.f d_ == -1xecve(/captured_stream.XXXXXXmp/captured_stream.XXXXXXhdir("in stream.XXXXXX reads.t  e object < substring of r.XXXXXXhich is: .XXXXXXs.ir("..) in e object < of .XXXXXXled: string of s->close_fd) of threads.ected er of threads.ject < ng of  XXXt am.XXXXXXnumber of threads.(args->close_fd)-byte object <rgs->close_fd)rfailed:  <) failed: ++ exception with description "L"("stream.XXXXXXailed: number of threads.se(args->close_fd) detect the number of threads.s->close_fd)t  of xception with description " of threads.ted r of threads./tmp/captured_stream.XXXXXXailed:  is:   of threads.ject <read_fd_ == -1in ++ exception with description "/tmp/captured_stream.XXXXXX) in cve(s->close_fd)eption with description "er of threads.am.XXXXXX/captured_stream.XXXXXX_fd)etect the number of threads.cve( substring of rfailed: .XXXXXX= -1reads.rs->close_fd)reads. lose_fd)led: ("etect the number of threads.XXXXXyte object <ng of threads.f f s: ailed: lose(args->close_fd)etected (args->close_fd)XXX-1rxception with description "mber of threads. of threads. d /tmp/captured_stream.XXXXXXs.am.XXXXXXch is: f  ...) in eption with description "hich is: Xd)in iled: t Xnumber of threads.xception with description "threads.yte object <>close_fd)ads.t aptured_stream.XXXXXXobject <) failed: hich is: reads.stream.XXXXXX == -1 hdir("f threads.XXXXXobject <lose(args->close_fd)) failed: r/captured_stream.XXXXXX ring of xception with description "/captured_stream.XXXXXXch is: read_fd_ == -1d_stream.XXXXXX... threads.e number of threads.s->close_fd) substring of ring of ..) in /captured_stream.XXXXXXf e number of threads.s.am.XXXXXXaptured_stream.XXXXXXad_fd_ == -1ng of se_fd)XXXXXct <e( aptured_stream.XXXXXXXXXmp/captured_stream.XXXXXX failed: am.XXXXXXch is: rgs->close_fd)/captured_stream.XXXXXXreads.threads.cve(. stream.XXXXXX... hdir("rgs->close_fd)cve(s.iled: -byte object <L"++ exception with description "s.hdir("hich is: ubstring of cve(s.XXXXXf threads.etect the number of threads..XXXXXXer of threads.etected ring of -byte object <ect the number of threads.X>close_fd)d: ("reads.(args->close_fd)t the number of threads.... ted >close_fd)ream.XXXXXXf threads.threads.f threads.iled: s: yte object <Xe object <the number of threads.threads.ng of ng of  failed: /captured_stream.XXXXXX substring of ed: /captured_stream.XXXXXXe number of threads.ted stream.XXXXXX... ubstring of xception with description "stream.XXXXXXream.XXXXXXin ted 
e( <stream.XXXXXX= -1ad_fd_ == -1. ring of ir("yte object <d: iled: ad_fd_ == -1the number of threads.ring of  ng of hich is: mp/captured_stream.XXXXXXted failed: >close_fd)ring of XXXXX == -1 is: ) failed: e number of threads.re object <hich is: se(args->close_fd)s: ng of yte object <s: not  failed:  in tured_stream.XXXXXXre number of threads.object <X
02Xads.hdir("stream.XXXXXXam.XXXXXX of threads.d: XXXetected f threads.in er of threads.ailed: -1>close_fd)string of Xd_ == -1d_ == -1object <in ad_fd_ == -1threads.er of threads.... e number of threads.: d_ == -1xception with description "d_stream.XXXXXXstream.XXXXXXs->close_fd)ted in ad_fd_ == -1mp/captured_stream.XXXXXXted  is: ream.XXXXXX. ect the number of threads.threads.XXX_fd)lose_fd)L"xception with description "threads.Xring of d: threads.-byte object < failed:  substring of = -1 exception with description "lose_fd) substring of L" substring of ir(" substring of eption with description "lose(args->close_fd)e number of threads.threads.ted etect the number of threads.lose(args->close_fd)reads.XXX <t ailed: t ) in d number of threads.XXXobject <tured_stream.XXXXXXread_fd_ == -1X substring of s.number of threads.ect the number of threads. is: ct <ir(" exception with description "XXX  failed: ... etect the number of threads..XXXXXXs.se(args->close_fd)stream.XXXXXX 02X . ) in tured_stream.XXXXXXected t the number of threads.L". ) in etect the number of threads.d_ == -1ct <) in rthe number of threads.reads. of threads.rs->close_fd)  = -1s->close_fd) failed: se(args->close_fd)mp/captured_stream.XXXXXX>close_fd)L" <hdir("d_stream.XXXXXX_fd)/tmp/captured_stream.XXXXXX substring of yte object <ng of ubstring of ads.ir("e number of threads.er of threads.mber of threads.>close_fd)  detect the number of threads.d)ject <02Xd)ect the number of threads.L" hich is: stream.XXXXXXrXXXXXred_stream.XXXXXXreads..XXXXXX) in ad_fd_ == -1ring of XXXad_fd_ == -1..) in ) in  red_stream.XXXXXXubstring of e number of threads.ject <xception with description "rred_stream.XXXXXXetect the number of threads.-byte object <d: ads.s. <etect the number of threads.aptured_stream.XXXXXXf threads.ect the number of threads.not s.failed: /tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXXject <. 
ected rd)L"e number of threads. failed: ject <f threads.se(args->close_fd)failed: ct <stream.XXXXXX_fd)_fd_ == -1d_stream.XXXXXXd_stream.XXXXXXlose_fd)s.(" <d read_fd_ == -1-byte object <rgs->close_fd)e number of threads.mp/captured_stream.XXXXXX.XXXXXX ads./captured_stream.XXXXXXd_stream.XXXXXXstream.XXXXXXrgs->close_fd)_fd_ == -1tured_stream.XXXXXXect the number of threads.ct <(args->close_fd)-byte object <-1= -1ject <d_ == -1Xject <02Xreads.stream.XXXXXX substring of aptured_stream.XXXXXXreads.02Xailed: rX failed: aptured_stream.XXXXXXir("xception with description ") failed: aptured_stream.XXXXXXnot iled: d: lose_fd)("threads.-1threads.) in etected red_stream.XXXXXX of -1reads.s->close_fd)..) in  of threads.reads.red_stream.XXXXXXch is: ject <failed: threads.ream.XXXXXXads.ream.XXXXXXt Xlose_fd) se(args->close_fd)threads. <= -1hich is: er of threads.) failed: d).XXXXXX... Xthreads.) failed: f   is: se_fd)se_fd)s: ected mp/captured_stream.XXXXXXt the number of threads.mp/captured_stream.XXXXXXs->close_fd)se(args->close_fd)mber of threads.ads. d_ == -1etect the number of threads./tmp/captured_stream.XXXXXX < of red_stream.XXXXXXs: . .XXXXXXin .XXXXXX failed:  == -1>close_fd)failed: ring of mp/captured_stream.XXXXXXreads. e(read_fd_ == -1ads.ject < failed: er of threads.aptured_stream.XXXXXX/tmp/captured_stream.XXXXXXL" <red_stream.XXXXXXXXXXX..) in : the number of threads.f threads.s: am.XXXXXXfailed: ct <string of L"++ exception with description ":  failed: d_stream.XXXXXX_fd_ == -1 == -1X am.XXXXXXir("++ exception with description "XXXXXring of ream.XXXXXXer of threads.s.. L"ct <cve(f threads...) in ream.XXXXXX.XXXXXXd: >close_fd)object <rgs->close_fd)) in  xecve(ject <object <XXXXXream.XXXXXXnot ng of not  <...  detect the number of threads./tmp/captured_stream.XXXXXXir("in 
string of  of threads.ads.s: rgs->close_fd). ads.mp/captured_stream.XXXXXXf threads.xecve(.XXXXXXlose(args->close_fd)e number of threads.) in xception with description "tured_stream.XXXXXXetect the number of threads.stream.XXXXXX... (args->close_fd)reads.iled: = -1-byte object <d: ++ exception with description "ring of /tmp/captured_stream.XXXXXXnumber of threads.(args->close_fd)reads.s->close_fd)d)reads.read_fd_ == -1se(args->close_fd)ct <aptured_stream.XXXXXX t the number of threads.e(reads.ream.XXXXXX detect the number of threads.s.led: threads.reads.etect the number of threads.. ct <ted >close_fd)aptured_stream.XXXXXXe(f ch is: ++ exception with description "string of e number of threads.f threads.string of ected L"d_stream.XXXXXXse(args->close_fd)mp/captured_stream.XXXXXXailed:  failed: X: not ted ed:  of threads.= -1read_fd_ == -1xecve(>close_fd)etect the number of threads.not ir("ailed: f threads.. e number of threads. ++ exception with description "ubstring of t rgs->close_fd)e number of threads.number of threads.threads.ream.XXXXXXxecve(etected d)) failed: mber of threads.t XXXXXe(xception with description "led: ads.ect the number of threads.hdir("++ exception with description "iled: se(args->close_fd)d_stream.XXXXXXthreads.e number of threads. of reads.ad_fd_ == -1 detect the number of threads.-1(args->close_fd)t the number of threads.("d:  exception with description "ubstring of yte object <failed: t the number of threads.-1se_fd)string of . ubstring of  ads.read_fd_ == -1ed: s.in threads. is: Xthreads.read_fd_ == -1 failed: ) failed: rgs->close_fd)string of s.ad_fd_ == -1ject <L"("er of threads. detect the number of threads.cve(ed: f threads.d: hdir("s.s: the number of threads. ject <. rgs->close_fd)ted t the number of threads.cve(ng of se_fd)eption with description "ected ..) in  e number of threads._fd_ == -1string of iled: am.XXXXXX..) in _fd_ == -1mp/captured_stream.XXXXXXailed: aptured_stream.XXXXXX(") failed:  detect the number of threads.: ring of /captured_stream.XXXXXXs: number of threads.) in -1 is: 02Xthreads.>close_fd) is: mber of threads.xecve(("hdir(" <stream.XXXXXX(args->close_fd)read_fd_ == -1ads.mber of threads.ubstring of  ...) in threads.er of threads.XXXXX.XXXXXX>close_fd) exception with description "ream.XXXXXXch is: 
rgs->close_fd)string of ad_fd_ == -1object <d_stream.XXXXXXe(rxecve(: not rgs->close_fd)s.= -1 ected threads.not XXXXXcve((args->close_fd)etect the number of threads.s: am.XXXXXXmp/captured_stream.XXXXXXe object <number of threads.lose_fd)s->close_fd)er of threads.ads.led:  . 02X ubstring of /captured_stream.XXXXXXstring of ring of -byte object <f threads.ect the number of threads.reads._fd_ == -1ads.XXXXXobject <reads. of threads.XXXXX substring of ++ exception with description "etect the number of threads._fd_ == -1 d_ == -1s.s->close_fd)) in ject <tured_stream.XXXXXXmp/captured_stream.XXXXXX. . threads.mber of threads. exception with description "etect the number of threads. == -1failed: hich is: s. failed: /tmp/captured_stream.XXXXXX ring of : failed: d)f the number of threads.mber of threads.ir("Xads.t xception with description "led: ++ exception with description " substring of rgs->close_fd) of threads.not not d_stream.XXXXXXmp/captured_stream.XXXXXX ...) in /captured_stream.XXXXXXstring of f /tmp/captured_stream.XXXXXX exception with description "XXXXXin e number of threads.mp/captured_stream.XXXXXXads. ...) in hdir("eption with description "etect the number of threads. substring of s.am.XXXXXXd_ == -1the number of threads. exception with description "ads. ir("(args->close_fd)_fd).XXXXXXam.XXXXXXthreads. of threads. failed: se_fd)mp/captured_stream.XXXXXX("/captured_stream.XXXXXXs: t reads.ream.XXXXXXse_fd)s: hich is: -1s->close_fd)d: = -1XXXads.ad_fd_ == -1d: ct <>close_fd) <stream.XXXXXXream.XXXXXXfailed:  of threads.string of d: d)ad_fd_ == -1d_stream.XXXXXX(args->close_fd) is: ads.e(ted tured_stream.XXXXXXir("stream.XXXXXXreads._fd)string of failed: t the number of threads.= -1 ect the number of threads.lose_fd)02Xng of hich is: in XXXXX /captured_stream.XXXXXX failed: am.XXXXXXobject <ubstring of number of threads.t  detect the number of threads.xecve( ream.XXXXXXthe number of threads.s.se_fd)ir("t the number of threads.stream.XXXXXXstring of  (" == -1read_fd_ == -1-byte object <ected ailed: Xr) failed:  failed: ir("X-byte object <ailed: ream.XXXXXX  mp/captured_stream.XXXXXXct <-byte object <xecve(/tmp/captured_stream.XXXXXXd_stream.XXXXXXcve(iled: cve(lose_fd) substring of r/captured_stream.XXXXXX xception with description "se(args->close_fd)hich is: threads.ads.eption with description "
the number of threads.d_ == -1 <ed: ct <..) in ) failed: object <-byte object < ct <hich is: ject <xception with description "ream.XXXXXXd ch is: number of threads.ads.xecve(_fd)ng of f lose_fd)xecve(xception with description "hich is: s->close_fd)..) in object <ir("er of threads._fd)xception with description "ads. exception with description "L"not er of threads.mber of threads.ct <d d_ == -1in stream.XXXXXX <read_fd_ == -1d_ == -1-byte object <Xled: ect the number of threads.number of threads.ject <) failed: hich is:  substring of e(yte object <read_fd_ == -1s: (" ...) in XXXXXred_stream.XXXXXXf threads.ir(". s.ted the number of threads.s->close_fd)threads. == -1>close_fd)ed: xception with description ". f threads.(args->close_fd)e(XXXrstring of _fd_ == -1>close_fd)reads.XXXXX++ exception with description "xecve(the number of threads.rring of hich is: se(args->close_fd) ch is: ct <. se_fd)s.d_stream.XXXXXXream.XXXXXX ...) in /tmp/captured_stream.XXXXXXs: d: ng of .XXXXXXXXXL"iled: lose(args->close_fd)tured_stream.XXXXXXreads.s.aptured_stream.XXXXXXd)L"red_stream.XXXXXXected object <am.XXXXXXs->close_fd)xecve(string of 02Xt the number of threads.mp/captured_stream.XXXXXXxception with description "X/tmp/captured_stream.XXXXXXreads.yte object <02Xf eption with description "object <) failed: ject <e object <_fd_ == -1_fd)s->close_fd)in r eption with description "("/captured_stream.XXXXXXfailed: ream.XXXXXXect the number of threads.rgs->close_fd)ted >close_fd)d)yte object < of ) in f  substring of ads.object <ted ailed: _fd)led: d >close_fd) == -1 == -1lose(args->close_fd)d:  of threads./captured_stream.XXXXXXam.XXXXXX02X ir("++ exception with description ": ected ubstring of  == -1 is: t ("iled: _fd)
ect the number of threads.am.XXXXXX failed: ubstring of reads.s. detect the number of threads.. Xad_fd_ == -1_fd)xception with description "ted : -1) failed: threads.t threads.read_fd_ == -1am.XXXXXX d:  exception with description "lose_fd)red_stream.XXXXXXf mp/captured_stream.XXXXXXreads.ng of L"X= -1 failed: lose(args->close_fd)t lose_fd)Xhich is: _fd)xecve(the number of threads.XXXXXnumber of threads..XXXXXXs.threads.s: e(se_fd)number of threads.reads./captured_stream.XXXXXXring of xception with description "s->close_fd)s: etected tured_stream.XXXXXXetect the number of threads. ...) in ch is: ted _fd)) in Xubstring of e( == -1reads.L"f reads. == -1number of threads.++ exception with description "ch is: am.XXXXXXobject <ir("rgs->close_fd)ad_fd_ == -1xception with description ": 02Xred_stream.XXXXXX in /captured_stream.XXXXXXe object <ed: d)ed: etect the number of threads.ad_fd_ == -1lose(args->close_fd)iled: ct <xecve(stream.XXXXXXads.reads.-byte object <ject <s.am.XXXXXX("xecve(f threads.t the number of threads.ted  threads. is:  ...) in -1 == -1s: d_ == -1ring of the number of threads.t the number of threads.02X ...) in xception with description "stream.XXXXXXer of threads. detect the number of threads.ring of ring of e number of threads.xception with description "ubstring of = -1= -1XXXer of threads..XXXXXXyte object <ject <red_stream.XXXXXXlose_fd)..) in .XXXXXXect the number of threads.threads.aptured_stream.XXXXXXXe number of threads.iled:  ...) in  substring of threads.++ exception with description "("ject </tmp/captured_stream.XXXXXXnumber of threads./captured_stream.XXXXXXrrgs->close_fd)ring of = -1ch is: f ected yte object < is: e(ted ) in number of threads.xecve(ed: ect the number of threads.aptured_stream.XXXXXXailed: xecve(yte object <am.XXXXXXyte object </tmp/captured_stream.XXXXXXad_fd_ == -1ed: ir("/captured_stream.XXXXXX failed: aptured_stream.XXXXXX_fd_ == -1
cve(s.ailed: ir("  
mber of threads.ir("e( failed: ++ exception with description "rgs->close_fd)e number of threads.ubstring of ted am.XXXXXXad_fd_ == -1failed: ect the number of threads.failed: . hich is: xecve(lose_fd)rads.threads._fd). 02Xreads./tmp/captured_stream.XXXXXXetect the number of threads.-1ch is: eption with description "d: tured_stream.XXXXXXthreads.X... ct <hdir(" == -1se_fd)threads.er of threads. of se_fd)/tmp/captured_stream.XXXXXX ads.aptured_stream.XXXXXX++ exception with description "ir("
f ject <not se_fd). ream.XXXXXXred_stream.XXXXXXs.ailed: ected  d)ected s. exception with description "s.ect the number of threads. detect the number of threads.s.threads.(" of threads.d .XXXXXXe object <ect the number of threads.= -1L"se_fd)reads.s->close_fd)rgs->close_fd) threads.led: object <reads.ed:  ...) in stream.XXXXXXXXX_fd)threads. failed:  detect the number of threads.etect the number of threads.. reads. == -1e object <02Xetected s: . ad_fd_ == -1 of ads.ch is: f threads.ads.Xstream.XXXXXX-1d)("etected s->close_fd)= -1XXXs:  <(args->close_fd)
X/tmp/captured_stream.XXXXXXlose_fd)etect the number of threads.-byte object <e(d_stream.XXXXXX-1rhdir("s: e object <hich is: stream.XXXXXX-1mber of threads.>close_fd). se_fd). failed: (args->close_fd)X ...) in lose_fd)= -1... etect the number of threads.er of threads.ed: threads.number of threads.. string of iled: . ads.("ream.XXXXXXads.d 
s. ubstring of ring of -byte object <tured_stream.XXXXXXubstring of reads. of ad_fd_ == -1X..) in led: failed: -byte object <  ...) in xception with description "failed: f ) failed: ected s.ailed: ..) in number of threads.-byte object <ject <t s.ect the number of threads.lose(args->close_fd)ads. number of threads.threads.XXject <reads.-1rd) e(reads.aptured_stream.XXXXXXe object < of threads.etect the number of threads. detect the number of threads.) in lose(args->close_fd)d)/tmp/captured_stream.XXXXXXfailed: d:  /tmp/captured_stream.XXXXXXd)) in e number of threads.>close_fd)ed: r_fd_ == -1>close_fd) <t se_fd)red_stream.XXXXXX++ exception with description "mp/captured_stream.XXXXXXread_fd_ == -102Xf s.yte object <threads.hdir("ng of ir("hich is: red_stream.XXXXXXject <d_ == -1f s->close_fd)ng of xception with description "ir(" <) failed: object < == -1d_stream.XXXXXX= -1er of threads.stream.XXXXXX(". 02Xe number of threads.L"se(args->close_fd)d_stream.XXXXXX-byte object <ad_fd_ == -1XXXXXs.ring of .XXXXXXthreads.threads.not ect the number of threads.aptured_stream.XXXXXX detect the number of threads. ...) in f tured_stream.XXXXXXXXXreads.("ream.XXXXXXect the number of threads.lose(args->close_fd)tured_stream.XXXXXXrgs->close_fd) of threads.lose(args->close_fd)ir("se_fd)eption with description "hich is: Xt the number of threads.ed:  substring of 
e object <not rect the number of threads.ct <red_stream.XXXXXXam.XXXXXXfailed: the number of threads..XXXXXXnumber of threads.s.am.XXXXXXred_stream.XXXXXX/captured_stream.XXXXXX.XXXXXX_fd_ == -1stream.XXXXXXmber of threads. ...) in ubstring of  detect the number of threads.iled: Xhdir("ch is: ads./captured_stream.XXXXXXthreads. ...) in in ject <etected ailed: red_stream.XXXXXXthreads.XXXXXxception with description "d)red_stream.XXXXXXected ... d_ == -1r == -1hdir("d aptured_stream.XXXXXX-1d: d_ == -1xecve(ected led: ected ubstring of etect the number of threads.d)d: in er of threads.hdir("f threads.d_ == -1 ...) in read_fd_ == -1d: s.led: d_stream.XXXXXX++ exception with description "am.XXXXXX= -1threads...) in  detect the number of threads.s: ring of ream.XXXXXX failed: led: s.tured_stream.XXXXXXread_fd_ == -1f  . hdir(" -byte object <d ..) in in ubstring of e object <f .  of ct <02Xd_ == -1threads.object <in s.ream.XXXXXX substring of aptured_stream.XXXXXXd_ == -1 is: reads.ream.XXXXXX exception with description "read_fd_ == -1_fd)ream.XXXXXX..) in = -1failed: etect the number of threads.s: ng of  failed: _fd)failed: ) failed: led: hdir("t the number of threads.ted ir("s._fd_ == -1 failed: ads.etected  detect the number of threads.number of threads._fd)not lose_fd)d)string of .XXXXXX_fd)ubstring of ads.ng of iled: yte object <_fd)d_ == -1 failed: -1ect the number of threads.lose(args->close_fd)s->close_fd)..) in t ) failed: = -1s->close_fd)red_stream.XXXXXXthe number of threads.threads.
 substring of lose(args->close_fd) failed: ++ exception with description ". ted ream.XXXXXXetect the number of threads.e number of threads.read_fd_ == -1ch is: er of threads.ted /captured_stream.XXXXXXrgs->close_fd)..) in t the number of threads.Xd_ == -1: hdir(") in etect the number of threads.d)f threads.mber of threads.reads.mp/captured_stream.XXXXXXnot ream.XXXXXXads.ring of cve(ubstring of /captured_stream.XXXXXX of s: XXXlose_fd)ect the number of threads.led: d_ == -1ads.f threads.t the number of threads.xception with description "failed: s.XXXXXt ject <  <rgs->close_fd)rected s->close_fd)stream.XXXXXXd_ == -1e(.XXXXXX of threads.-byte object <hich is: lose(args->close_fd)d_stream.XXXXXXd: >close_fd)f threads.ng of lose(args->close_fd)ch is: reads.f threads.eption with description "..) in .XXXXXX-byte object < failed:  t the number of threads.stream.XXXXXXt : number of threads.reads._fd_ == -1_fd)XXX++ exception with description "
 e number of threads.am.XXXXXXt the number of threads.threads.Xtured_stream.XXXXXXetect the number of threads.ir("tured_stream.XXXXXXxecve(s->close_fd)d_stream.XXXXXXe number of threads.mber of threads.Xt the number of threads.XXXXXhdir("in red_stream.XXXXXXthe number of threads. ...) in ads.++ exception with description "/tmp/captured_stream.XXXXXXrgs->close_fd) failed: e object <led: ch is: : ..) in t the number of threads.ring of rgs->close_fd)iled: f mp/captured_stream.XXXXXXhich is:  == -1..) in reads.threads.not  of threads. <mp/captured_stream.XXXXXX) failed: ng of stream.XXXXXXxecve(02Xstream.XXXXXXream.XXXXXXr... stream.XXXXXX detect the number of threads..XXXXXX.XXXXXXd) of threads..XXXXXX... etect the number of threads.iled: r: ring of d)lose_fd)ected ads.e object <02Xmber of threads.ailed: .XXXXXXlose_fd)... ected ring of tured_stream.XXXXXXject <ng of ed: reads.threads.(args->close_fd) Xaptured_stream.XXXXXXam.XXXXXX... t the number of threads.d: -1_fd)aptured_stream.XXXXXX) failed: the number of threads.ect the number of threads./tmp/captured_stream.XXXXXXng of ject <.XXXXXXXeption with description " lose(args->close_fd)s->close_fd)_fd_ == -1f ring of mber of threads.02X == -1ads.) in reads.L"XXXyte object <-1 yte object <ream.XXXXXXe number of threads./tmp/captured_stream.XXXXXX-byte object <ject <am.XXXXXXeption with description "etected e number of threads.ads. ed: hdir("
(" substring of etected not s.red_stream.XXXXXXmp/captured_stream.XXXXXX exception with description " failed: mber of threads.) in s.
.  ...) in not hich is: ct <ads.eption with description "mp/captured_stream.XXXXXX-byte object <etect the number of threads.>close_fd)lose_fd)ed:  xecve(d: xecve(aptured_stream.XXXXXXir("... ..) in stream.XXXXXXiled: ected ct <ream.XXXXXX of threads. ...) in ch is: _fd)iled: : mp/captured_stream.XXXXXXubstring of ) failed: er of threads.-byte object <ct <xception with description " hdir("etected  failed: lose_fd)Xs.f threads.ected Xd ected d) of threads.ads.ected  == -1s.
the number of threads.-1 substring of d L"
: >close_fd) ...) in e(yte object <L"er of threads./tmp/captured_stream.XXXXXXd_stream.XXXXXX exception with description "number of threads.etected se_fd).XXXXXXL"ect the number of threads.d: etected (args->close_fd)mp/captured_stream.XXXXXXect the number of threads.ad_fd_ == -1the number of threads.reads.d_ == -1ubstring of : am.XXXXXX... mp/captured_stream.XXXXXX exception with description "L"er of threads.-byte object <.XXXXXX>close_fd)d)se_fd)++ exception with description "ads.e object <d_stream.XXXXXX: (args->close_fd)-byte object <not  of threads.ed:  f threads. is: reads.the number of threads.e number of threads.d_stream.XXXXXX _fd)  <ir(">close_fd) ...) in Xhich is: .XXXXXXd) xecve(..) in XXXXX/captured_stream.XXXXXXfailed: ir("_fd)("s.: etected object <t (args->close_fd)ailed:  detect the number of threads.d_ == -1mp/captured_stream.XXXXXXring of xception with description "read_fd_ == -1 failed: se_fd)aptured_stream.XXXXXX..) in cve(ted -byte object <mp/captured_stream.XXXXXX of threads.s: red_stream.XXXXXX.XXXXXXd: d reads.) failed:  == -1se(args->close_fd)d red: ir("/tmp/captured_stream.XXXXXXread_fd_ == -1
red_stream.XXXXXX failed:  detect the number of threads.failed: number of threads.object < of -1ted ed: d_ == -1e number of threads.yte object <.XXXXXXf cve( failed: ads. ...) in ubstring of threads.xecve(xception with description "mp/captured_stream.XXXXXX_fd_ == -1t the number of threads.
not tured_stream.XXXXXX/tmp/captured_stream.XXXXXX ject <) in 
ring of ream.XXXXXXobject <L"tured_stream.XXXXXXted ir("object <) failed: X  ...) in d_ == -1XXXs->close_fd)ring of  (args->close_fd)reads.red_stream.XXXXXXXd: threads.s. ed: ring of s: >close_fd). _fd_ == -1eption with description " ject <. 02X/captured_stream.XXXXXXected ng of  substring of e number of threads.e((args->close_fd)rgs->close_fd)XXXXXfailed: ng of /captured_stream.XXXXXXthreads./captured_stream.XXXXXXir("
L" exception with description "++ exception with description "++ exception with description "mp/captured_stream.XXXXXX <reads.s:  is: threads.led: L"Xeption with description "d reads.X-byte object <++ exception with description "etected ubstring of /captured_stream.XXXXXXd_ == -1led: ... ch is: ng of (args->close_fd)  substring of in ng of reads.am.XXXXXXring of -byte object <reads.in L"s:  exception with description "etect the number of threads./captured_stream.XXXXXX) failed: lose_fd)X..) in reads.>close_fd)d_ == -1ads.ream.XXXXXXlose_fd)etect the number of threads.s.= -1d) is: d)yte object < == -1tured_stream.XXXXXXads..XXXXXXin .XXXXXXXXXX. ted f se_fd)d)object <mp/captured_stream.XXXXXXeption with description "= -1_fd_ == -1d f threads.mber of threads.xception with description " of f threads.yte object <) failed: e object <) failed: e object <ject < of threads.string of -1tured_stream.XXXXXXct < is: ected  etected  is: XXXXXected ect the number of threads.mp/captured_stream.XXXXXX_fd)ailed:  failed: rxecve(ir("ailed: -byte object <number of threads.d: X_fd_ == -1t the number of threads.the number of threads.s: iled: f .  <r/tmp/captured_stream.XXXXXX= -1stream.XXXXXX02Xmber of threads.ect the number of threads. ...) in lose(args->close_fd)ads.
xception with description "er of threads./captured_stream.XXXXXXXected ad_fd_ == -102Xng of XXXed: ect the number of threads.threads.XXXXXxecve(etected XXXd : /captured_stream.XXXXXXf threads.t the number of threads..XXXXXX("e(XXXd_ == -1object <cve( detect the number of threads.ng of failed: d 
(args->close_fd)se_fd)ed: reads.
 substring of  detect the number of threads.not reads.02Xxecve(in cve(ads.e(hdir("ch is: eption with description "etect the number of threads.
>close_fd)d: XXX <s.(args->close_fd)not string of /tmp/captured_stream.XXXXXXubstring of e(++ exception with description "X) in s: ed: stream.XXXXXXred_stream.XXXXXXreads.reads.ct <ng of d ++ exception with description " ng of d /tmp/captured_stream.XXXXXX= -1t the number of threads. detect the number of threads.xception with description " <ream.XXXXXXe(ads.f ream.XXXXXXetected f  ...) in XXXXXhdir("in . .XXXXXXad_fd_ == -1xception with description "led:  of threads. exception with description "... hich is: etect the number of threads. failed:  failed: = -1e object <ject <ted mp/captured_stream.XXXXXXled: e object <d read_fd_ == -1mber of threads.aptured_stream.XXXXXXreads.ng of xecve(ubstring of e(number of threads.ring of ads./tmp/captured_stream.XXXXXXubstring of s.not rs.e object <string of f red_stream.XXXXXXled: ected s.++ exception with description "hdir(" detect the number of threads.Xtured_stream.XXXXXXhich is: am.XXXXXXect the number of threads.ject <ir(" failed:  ...) in .XXXXXXse_fd)= -1 exception with description "se(args->close_fd) ...) in se(args->close_fd) == -1t the number of threads.the number of threads._fd)e object <etect the number of threads. e object <number of threads.etected number of threads.
ected ... am.XXXXXXfailed: XXX of threads.etect the number of threads.s. == -1: red_stream.XXXXXXject <e number of threads.threads.s.lose(args->close_fd)etect the number of threads.XXX(args->close_fd) ...) in mber of threads.failed: .XXXXXXaptured_stream.XXXXXX detect the number of threads.not XXX/captured_stream.XXXXXX of /tmp/captured_stream.XXXXXX is: ("ads.t  substring of ir("se(args->close_fd) <threads.
se(args->close_fd)XXXXXmp/captured_stream.XXXXXX... ... string of ject <f -1 ) in object <led: mber of threads.reads.the number of threads.s.d_ == -1etect the number of threads.lose(args->close_fd)eption with description "Xfailed: etected /captured_stream.XXXXXX... ad_fd_ == -1L"ected in ject <mp/captured_stream.XXXXXXailed: ng of ring of lose(args->close_fd)string of ads.d_ == -1>close_fd)-1am.XXXXXXads. of ected er of threads.XXXXXetect the number of threads.mber of threads.in f ubstring of rled: led: am.XXXXXX.  ...) in xecve(cve(ir("ng of  failed: ++ exception with description "-1cve(rtured_stream.XXXXXXng of yte object < of threads.not ct <ch is:  of tured_stream.XXXXXX..) in XXXyte object <++ exception with description "ected cve(e(ir(" ...) in rXXX of : ed: /captured_stream.XXXXXXyte object <e( of ect the number of threads.ct <Xmp/captured_stream.XXXXXXred_stream.XXXXXXng of ) failed: led: stream.XXXXXXe number of threads. of threads.xecve(-byte object <stream.XXXXXX(args->close_fd)_fd)d)am.XXXXXX(args->close_fd)mp/captured_stream.XXXXXXread_fd_ == -1ect the number of threads.string of am.XXXXXXtured_stream.XXXXXX == -1..) in ads.t the number of threads.cve( detect the number of threads. == -1>close_fd)ected ) in d_stream.XXXXXXad_fd_ == -1the number of threads.d_stream.XXXXXXaptured_stream.XXXXXXected ad_fd_ == -1ed: .XXXXXXream.XXXXXXreads.e(hdir("ring of se(args->close_fd)... 
ected number of threads.d_ == -1 s:  substring of string of threads.ir("ct <reads.led: d d: ject <_fd_ == -1f threads.cve(e(... lose_fd)d_stream.XXXXXXe number of threads. == -1s.ject <ected ng of in  stream.XXXXXXtured_stream.XXXXXXrL"threads.("s.reads.ng of rgs->close_fd)lose(args->close_fd).XXXXXX reads.in hdir(" exception with description "Xd)er of threads.hich is:  == -1e object <L") in ) in 
Xng of d_stream.XXXXXX == -1ected e object <ed: s->close_fd)ad_fd_ == -1yte object <.XXXXXX reads.d mp/captured_stream.XXXXXXaptured_stream.XXXXXX-1s:  of ct <ring of hich is: X  (args->close_fd)
d)ject <reads.red_stream.XXXXXXs.d_stream.XXXXXX. etected rthreads.red_stream.XXXXXXobject < se(args->close_fd).XXXXXXxecve(ected  is: -1/tmp/captured_stream.XXXXXXt the number of threads.string of rthreads.eption with description "d_stream.XXXXXXin _fd)ected se_fd)yte object <ir("++ exception with description "ads. of se_fd)etected = -1e object < <t the number of threads...) in hdir("ad_fd_ == -1) in . lose_fd)XXXXXXring of d) <..) in mber of threads. e(hdir("XXXXXr_fd_ == -1ads.XXX... ct <failed:  substring of iled: tured_stream.XXXXXXnot f stream.XXXXXXreads.hich is: threads.s: am.XXXXXXse_fd)mp/captured_stream.XXXXXXf xception with description " detect the number of threads.tured_stream.XXXXXXch is: ) failed: Xetected d_ == -1L") failed: ("++ exception with description "ads.-1ch is: e(am.XXXXXX  detect the number of threads.lose(args->close_fd)s:  aptured_stream.XXXXXXd)r) failed: ..) in hich is: ... -byte object <t the number of threads.ream.XXXXXXetected ch is: failed: ++ exception with description "ng of reads.... s.d_stream.XXXXXXstream.XXXXXXiled: threads.02Xrgs->close_fd)stream.XXXXXXd: red_stream.XXXXXXect the number of threads.rgs->close_fd) of threads.d_stream.XXXXXXin er of threads.d red_stream.XXXXXXcve(..) in xception with description "/captured_stream.XXXXXXf threads.ected er of threads.r>close_fd)XXXXXthe number of threads.failed: s.read_fd_ == -1 ring of ject <ring of xception with description "re number of threads.led: lose(args->close_fd) of threads.ct <ed: stream.XXXXXXer of threads.XXXXreption with description "s.ads.Xected xecve(red_stream.XXXXXXs->close_fd)>close_fd)reads. failed: t the number of threads.rgs->close_fd)f  failed: hdir("d)tured_stream.XXXXXXs.ected /tmp/captured_stream.XXXXXXXt led: lose(args->close_fd)aptured_stream.XXXXXXd_ == -1ailed: eption with description " ailed: ads.: in ct <led: number of threads.ng of  substring of ch is: rgs->close_fd) < XXXXXt the number of threads.number of threads.ect the number of threads.ad_fd_ == -1 ...) in hich is: ad_fd_ == -1ad_fd_ == -1rgs->close_fd)d: e number of threads.d_ == -1f threads. ...) in lose(args->close_fd)s.s.++ exception with description "_fd_ == -1e(eption with description "mp/captured_stream.XXXXXXtured_stream.XXXXXXtured_stream.XXXXXXnot mp/captured_stream.XXXXXXt the number of threads.d)lose_fd)ject <er of threads.02Xe number of threads.e number of threads. f  <ect the number of threads.red_stream.XXXXXXted _fd) failed: 02XXse_fd) of ailed: threads.mber of threads.++ exception with description "etected ch is: _fd_ == -1d_stream.XXXXXXf threads.mp/captured_stream.XXXXXXL"d: . ads. of er of threads.s: not  ads.XXXXXXads.reads.ad_fd_ == -1stream.XXXXXX stream.XXXXXXject <string of the number of threads.aptured_stream.XXXXXXstring of ) in ted xception with description "d >close_fd)("s: xception with description "se_fd)ect the number of threads.ream.XXXXXX mber of threads.ted reads.d ed: string of  detect the number of threads.mber of threads.d)_fd_ == -1ads.(" am.XXXXXX++ exception with description "/captured_stream.XXXXXXetect the number of threads.yte object <t 
e object < < ...) in ch is: /tmp/captured_stream.XXXXXXXfailed: iled: ++ exception with description "e number of threads.Xnot rlose_fd)aptured_stream.XXXXXX) in e number of threads.ads. substring of _fd_ == -1s.e object <ring of iled: 
am.XXXXXX... ring of 
t  ad_fd_ == -1se_fd)ed: _fd_ == -1eption with description ". se_fd)number of threads.mp/captured_stream.XXXXXX == -1yte object <_fd_ == -1ted Xs: = -1. d_ == -1ream.XXXXXX_fd)iled: mber of threads.. d: rgs->close_fd)mp/captured_stream.XXXXXXch is: hich is: ads.f mp/captured_stream.XXXXXXnumber of threads.ch is: hdir("ream.XXXXXXin d_ == -1se(args->close_fd)xception with description ") in s.d)cve(ed: e object <(args->close_fd)eption with description ".XXXXXXse_fd)rgs->close_fd)ir("d).XXXXXXreads.mber of threads. exception with description "_fd)  detect the number of threads.threads./captured_stream.XXXXXX
ng of  detect the number of threads.se(args->close_fd)lose(args->close_fd)the number of threads._fd)ed:  of threads.eption with description "s.("d: ream.XXXXXXct <hich is: 
t ed: 02Xhich is: /tmp/captured_stream.XXXXXXject <object <etected  threads. of threads.mp/captured_stream.XXXXXX ...) in eption with description "ad_fd_ == -1L"e number of threads._fd_ == -1("etected in ject <) in reads. is: iled:  == -1XXXin .XXXXXXlose(args->close_fd):  == -1-1threads.ected >close_fd)reads. aptured_stream.XXXXXXt the number of threads.object <(args->close_fd)rgs->close_fd)ring of  yte object <
ir("ect the number of threads.... . ad_fd_ == -1++ exception with description "e number of threads.led: Xeption with description "_fd_ == -1ted d  == -1ailed: yte object < (args->close_fd) <02Xring of  <ng of Xreads.se(args->close_fd)/tmp/captured_stream.XXXXXX(args->close_fd): ject <XXXXXads.(args->close_fd)ubstring of led: ected hich is:  s.ted  ...) in  failed: ected s.lose_fd)ng of (") failed:  of threads.ring of se_fd)d)XXXcve(ubstring of stream.XXXXXXted 
 failed: object <= -1am.XXXXXXfailed: e(iled: lose(args->close_fd)rgs->close_fd) is: /captured_stream.XXXXXXstring of  is: reads.++ exception with description ". /tmp/captured_stream.XXXXXXX is: f ... /tmp/captured_stream.XXXXXX se_fd)not number of threads.led: e number of threads.e object <aptured_stream.XXXXXX= -1d: ++ exception with description "/captured_stream.XXXXXXd: failed: d_stream.XXXXXXch is: object < of lose(args->close_fd)ject <Xt eption with description "led: d: threads./captured_stream.XXXXXXyte object <ads. of threads. == -1aptured_stream.XXXXXXxecve(number of threads.ad_fd_ == -1= -1the number of threads.aptured_stream.XXXXXXed: hdir("etect the number of threads.rgs->close_fd). ubstring of  stream.XXXXXXhdir("ream.XXXXXX <++ exception with description ".XXXXXXf ubstring of Xected etected not yte object </captured_stream.XXXXXXad_fd_ == -1threads.reads.not  e object <) in ream.XXXXXXhich is: am.XXXXXXubstring of _fd_ == -1read_fd_ == -1f threads.. d ailed: e object <d_stream.XXXXXXads.yte object <Xthreads.string of string of mp/captured_stream.XXXXXXcve(ads.xception with description "etected ct <e object < ted xception with description "am.XXXXXX == -1d_stream.XXXXXXected ed: (args->close_fd)threads.stream.XXXXXXthe number of threads.xception with description "ected d : d_stream.XXXXXX substring of   ...) in .XXXXXX
stream.XXXXXX-byte object <stream.XXXXXXXL": ected  of threads.s.object <Xthreads.Xailed: ) failed: threads.eption with description "L"stream.XXXXXX. lose_fd) not ailed: -byte object <reads.-1(args->close_fd)Xe(ng of 
 ads.ect the number of threads.++ exception with description "reads.am.XXXXXX:  detect the number of threads.ubstring of failed: ed: number of threads.not  ...) in : yte object <ject <lose(args->close_fd)s: etected  == -1
 exception with description "am.XXXXXXd ailed: Xream.XXXXXXct < substring of lose_fd)ject < == -1number of threads. is: ++ exception with description "ect the number of threads.s.object </tmp/captured_stream.XXXXXX02Xse_fd)ct <  of iled: number of threads.object <++ exception with description "/captured_stream.XXXXXXstream.XXXXXX-byte object < of threads.s->close_fd)mber of threads.: aptured_stream.XXXXXX of threads.s: threads.ir(" substring of ted ads.e object <lose(args->close_fd)er of threads.xecve(ir("XXXXXmber of threads.yte object <ed: s: ir("iled: er of threads. of lose(args->close_fd)number of threads.in  ...) in reads.>close_fd) ...) in (args->close_fd)X(args->close_fd) substring of  of  detect the number of threads.se(args->close_fd) reads.rgs->close_fd)= -1/captured_stream.XXXXXX(args->close_fd)ads.xecve( == -1 ...) in xception with description " failed: string of ring of the number of threads.eption with description "read_fd_ == -1-1/tmp/captured_stream.XXXXXXf ... hdir("ed: ct <r-1 s->close_fd)02X02Xt s. substring of  iled: etected 02X <r++ exception with description "ected _fd)am.XXXXXX :  cve(-1se_fd)ir(") failed: d tured_stream.XXXXXXse(args->close_fd). ed: -byte object <) in d_stream.XXXXXXnot t L"aptured_stream.XXXXXX.XXXXXXe(xception with description "lose(args->close_fd) substring of s. ads.ch is: ted xception with description "= -1L"f tured_stream.XXXXXX("= -1hich is: -1eption with description "reads.ch is: ("t the number of threads.lose_fd)lose(args->close_fd)not  of failed: se_fd)s: eption with description "d Xs.tured_stream.XXXXXXthreads.ject <ed: ("hich is: ch is: read_fd_ == -1er of threads.ubstring of the number of threads.e(read_fd_ == -1 of ) in  detect the number of threads.t /tmp/captured_stream.XXXXXXd)mber of threads.f lose_fd)cve(e( exception with description " detect the number of threads.ch is: L"e object <ected red_stream.XXXXXXe(lose_fd) is: mber of threads.-byte object <xecve(ect the number of threads.ject </captured_stream.XXXXXXyte object < substring of L" e number of threads.cve(ring of XXXXXubstring of 
mber of threads.-1 exception with description "threads.X(args->close_fd)s.ected iled: d:  <s: e(ad_fd_ == -1/captured_stream.XXXXXXs.failed: s: t the number of threads.t the number of threads.f threads.ject <: .XXXXXXse_fd)am.XXXXXX>close_fd)s->close_fd)Xd xecve( of  substring of  <XXXXXmp/captured_stream.XXXXXXf threads.f s: d e number of threads.ubstring of = -1t the number of threads.d: d_stream.XXXXXX. /captured_stream.XXXXXX exception with description "  failed: threads. ...) in ++ exception with description "ir("tured_stream.XXXXXXect the number of threads.e number of threads.f threads./tmp/captured_stream.XXXXXXubstring of ng of hdir("failed: ..) in  s->close_fd)red_stream.XXXXXXd)t  == -1se(args->close_fd)number of threads.) failed: s.ect the number of threads.
. s. substring of  is:  <ct < substring of ailed: lose_fd)XXXXX/captured_stream.XXXXXX-1Xe(reads.object </tmp/captured_stream.XXXXXXXXX  <++ exception with description ".XXXXXXetect the number of threads._fd_ == -1d  stream.XXXXXXe object <t the number of threads.string of e object <.XXXXXXd_ == -1ng of s.d: threads.ed: e(ect the number of threads.stream.XXXXXXetected ng of  == -1ubstring of 
object <stream.XXXXXXam.XXXXXXetect the number of threads. substring of aptured_stream.XXXXXX: ir(". s. of threads./tmp/captured_stream.XXXXXX++ exception with description " < == -1) in /tmp/captured_stream.XXXXXXads. d_stream.XXXXXXailed: ring of ch is: s: _fd_ == -1rgs->close_fd)("ch is: am.XXXXXXstring of  == -1iled: reads.(args->close_fd)the number of threads.red_stream.XXXXXXs.tured_stream.XXXXXXd:  of s.r L"hdir("not reads.er of threads.threads.object </tmp/captured_stream.XXXXXXe number of threads.rgs->close_fd)reads./tmp/captured_stream.XXXXXX(args->close_fd). d_ == -1= -1ected .XXXXXX) in L"ailed: aptured_stream.XXXXXXe number of threads.cve(hdir(" failed: = -1 yte object <>close_fd)d)-1in failed: ch is: s.hdir("ubstring of string of ted er of threads.ng of tured_stream.XXXXXXread_fd_ == -1number of threads.mber of threads.) failed: d: se(args->close_fd)) failed: am.XXXXXX.XXXXXX ailed: se(args->close_fd)number of threads.reads.t Xxecve(tured_stream.XXXXXXct < of threads.ted  is: d)ected e object <ject <ed: ) in rgs->close_fd)etected etect the number of threads.reads.ct <XXX is: ir("ect the number of threads.ng of  detect the number of threads.= -1++ exception with description "XX exception with description " detect the number of threads.string of /captured_stream.XXXXXXse_fd)..) in ct <mp/captured_stream.XXXXXXiled: reads.mp/captured_stream.XXXXXX.XXXXXX>close_fd)ed: s.ubstring of threads.d ads. se_fd) <reads.se(args->close_fd)ng of reads.ir(" e(reads.ed: XXXXXected reads.se_fd)threads. substring of mp/captured_stream.XXXXXXlose_fd)-byte object <rgs->close_fd)in se_fd)s.. etect the number of threads.02Xaptured_stream.XXXXXXhdir("ng of s.number of threads.: read_fd_ == -1hdir("ring of not s->close_fd)etected .XXXXXX  ...) in L"yte object <se(args->close_fd)s: L" ) in : hdir("etected rgs->close_fd)reads.cve(X02Xed: _fd_ == -1ed: f threads.
object <etect the number of threads.ring of reads.ected tured_stream.XXXXXXream.XXXXXXs->close_fd)("not ...  detect the number of threads.threads.= -1
s->close_fd)se(args->close_fd)ads.ct <= -1XXXt reads.led:  detect the number of threads.Xd_ == -1ct <yte object <: mber of threads.e number of threads.er of threads.hdir("d_ == -1
f threads.not = -1d: ream.XXXXXX == -1lose_fd)...  of threads.ected er of threads.... d)xecve(
/tmp/captured_stream.XXXXXXt the number of threads.= -1number of threads.-1. se_fd)f reads.ring of ++ exception with description "XXXread_fd_ == -1hdir("f  ct <string of object <>close_fd)... ++ exception with description "L"cve( number of threads.) in ream.XXXXXXailed: ted mber of threads.("ct <++ exception with description "t not red_stream.XXXXXXstring of tured_stream.XXXXXXmber of threads.ed: ted se_fd)ring of mber of threads. of ubstring of  of threads..XXXXXXhich is: mber of threads.object <aptured_stream.XXXXXXetected ("ads.cve(02X(args->close_fd)t the number of threads.ject <f t the number of threads.failed: threads.ring of ubstring of  exception with description "ected >close_fd)lose(args->close_fd)d)f /tmp/captured_stream.XXXXXXs->close_fd)threads.stream.XXXXXXd_ == -1number of threads.ailed: ect the number of threads./captured_stream.XXXXXXxception with description "tured_stream.XXXXXX-byte object <ailed: XXXXXaptured_stream.XXXXXX(args->close_fd)string of red_stream.XXXXXXhdir("ad_fd_ == -1 exception with description " detect the number of threads.XXXreads.eption with description "aptured_stream.XXXXXX) failed: etect the number of threads._fd_ == -1: -1 ads.threads.>close_fd)object < of threads.the number of threads.s.(args->close_fd)ng of t tured_stream.XXXXXXd_ == -1am.XXXXXX
... d)se_fd) of XXXer of threads.threads.number of threads.string of d: eption with description "ad_fd_ == -1.XXXXXXX exception with description "tured_stream.XXXXXXaptured_stream.XXXXXXd_ == -1rnumber of threads.XXXe number of threads.XXXXXe number of threads. detect the number of threads.hich is: red_stream.XXXXXXads.-byte object <++ exception with description "in t the number of threads.yte object <tured_stream.XXXXXXXf f threads.d: ng of rgs->close_fd)red_stream.XXXXXXring of ubstring of t /tmp/captured_stream.XXXXXX

d_ == -1-1the number of threads.xecve(number of threads.xception with description "02X= -1cve(iled: ..) in mber of threads.02XL"ads.ad_fd_ == -1-byte object < ..) in ect the number of threads.ubstring of red_stream.XXXXXXring of  failed: ads.t the number of threads.hich is: s..XXXXXXubstring of failed:  is: _fd) <e(er of threads./captured_stream.XXXXXXfailed: ..) in (" == -102X-1s->close_fd)in cve(ads. ...) in tured_stream.XXXXXXring of . ected ... hich is: -byte object <d_stream.XXXXXXad_fd_ == -1not ch is: se_fd)..) in  s.f threads.d ct <) in ... in se_fd)ng of object <etected ed: failed: tured_stream.XXXXXX s: ect the number of threads.iled: cve( of er of threads.eption with description "d number of threads. substring of ubstring of string of yte object < is: s.-byte object <iled: mp/captured_stream.XXXXXXt the number of threads.not hdir("X exception with description " == -1ect the number of threads.lose(args->close_fd)yte object <cve( of threads.iled: L" exception with description " ct <ected XXXXX is: etect the number of threads._fd_ == -1e object <ad_fd_ == -1etected rd_ == -1iled: eption with description "cve(stream.XXXXXXf etect the number of threads.: object <s.-byte object <..) in ... ted ring of threads. mber of threads. substring of se(args->close_fd)eption with description "..) in mp/captured_stream.XXXXXX == -1_fd_ == -1t the number of threads.t the number of threads.tured_stream.XXXXXXcve(reads.-1 of (args->close_fd)aptured_stream.XXXXXX.XXXXXXXXXd_ == -1etect the number of threads.e object <e object <d  == -1d_stream.XXXXXXred_stream.XXXXXX) in er of threads.number of threads.reads.eption with description "reads. detect the number of threads._fd_ == -1ir("eption with description "
reads.ring of ed: ++ exception with description ". 02X exception with description "iled: ++ exception with description "= -1. -1d)f threads.reads./captured_stream.XXXXXXads.02Xtured_stream.XXXXXXream.XXXXXXse(args->close_fd) (args->close_fd)iled: rgs->close_fd)stream.XXXXXXread_fd_ == -1e number of threads. ads.se_fd)mp/captured_stream.XXXXXXL"ads..XXXXXXL"ubstring of the number of threads.= -1se_fd)t threads.reads.xception with description "threads.ubstring of .XXXXXXed: ect the number of threads.t the number of threads.02Xread_fd_ == -1ct <rse(args->close_fd)ect the number of threads.tured_stream.XXXXXXmp/captured_stream.XXXXXXhich is:  is: t er of threads.ir("threads. substring of object <mber of threads. is:  substring of ed: ed: ect the number of threads.ir(") in reads._fd)not yte object <am.XXXXXX/tmp/captured_stream.XXXXXX is: (args->close_fd)d_ == -1XXXXXnumber of threads.not  is: :  is: ++ exception with description "mber of threads.L"rL"d)cve(tured_stream.XXXXXXreads.eption with description " substring of ubstring of se(args->close_fd)(args->close_fd)hdir("d_ == -1 of s->close_fd)("ads.hich is: t the number of threads.d etect the number of threads.lose_fd) d)threads.the number of threads.f threads.ring of  ailed: stream.XXXXXX_fd)>close_fd)rgs->close_fd)threads.red_stream.XXXXXXread_fd_ == -1etect the number of threads.aptured_stream.XXXXXX("f ("s: ring of  lose_fd)... ir("cve(mp/captured_stream.XXXXXXject <object <er of threads.t the number of threads. of not led: 02X.XXXXXXads.++ exception with description "Xe(ected am.XXXXXXxecve(etected ad_fd_ == -1yte object < exception with description ".  detect the number of threads.e(f e object < of threads. == -1ring of .XXXXXX(" d_stream.XXXXXXxception with description "ch is: d)read_fd_ == -1f threads.xception with description "ected ads.>close_fd)reads.ect the number of threads.rgs->close_fd)/captured_stream.XXXXXXd _fd_ == -1d_ == -1d_ == -1tured_stream.XXXXXX <>close_fd) failed: ... t failed: ct <f threads.aptured_stream.XXXXXX(args->close_fd)in xecve(..) in number of threads.
reads._fd_ == -1am.XXXXXXaptured_stream.XXXXXX... t hdir(" substring of ir("lose(args->close_fd)... XXXXX..) in yte object <stream.XXXXXXiled: t /captured_stream.XXXXXXread_fd_ == -1s: led: d: etect the number of threads.("s. substring of t   == -1++ exception with description " of _fd)er of threads.number of threads.(args->close_fd)ed: ailed: eption with description "lose(args->close_fd)s. of threads.
ads.number of threads.e number of threads._fd_ == -1iled: etect the number of threads. of t XXXXXmp/captured_stream.XXXXXXring of lose(args->close_fd)xception with description "L"r ...) in threads. ted se_fd)ailed: ream.XXXXXXL"ject <s.... read_fd_ == -1ected the number of threads.ads. failed: number of threads.not ected ream.XXXXXX is: = -1("iled: lose_fd)f  of Xd)s.se_fd)yte object <reads. of threads.. e(f failed: etect the number of threads._fd_ == -1t the number of threads.s.("se(args->close_fd)lose_fd)d: stream.XXXXXXeption with description "ads.d_ == -1/captured_stream.XXXXXXetected  == -1rgs->close_fd)reads.) failed: = -1ream.XXXXXXd:  exception with description "d:  exception with description "object <se(args->close_fd) exception with description "ring of -1stream.XXXXXX++ exception with description "xception with description ": XXXXXs.stream.XXXXXX of tured_stream.XXXXXXf f s.ads.ected ad_fd_ == -1 == -1ed: object <-byte object <X ...) in  ...) in f threads.X ...) in lose(args->close_fd) substring of d_stream.XXXXXXd: iled:  exception with description "s.the number of threads.f ("ring of d = -1/captured_stream.XXXXXXailed: /captured_stream.XXXXXX++ exception with description " exception with description "d)d_ == -1d_ == -1e(("ailed: = -1/captured_stream.XXXXXXs: in e(threads.ject <XXXxecve(X == -1>close_fd)string of d: lose_fd)-byte object <in tured_stream.XXXXXXe(d)) in failed: cve(..) in d_stream.XXXXXX
ng of s: red_stream.XXXXXXads.f lose_fd)) in string of ed: mber of threads. detect the number of threads. is:  ...) in ad_fd_ == -1ring of ject <led: mber of threads.e(f threads.f threads.in er of threads./captured_stream.XXXXXX_fd) 02Xct <f (args->close_fd) failed: (args->close_fd)ed: = -1 of threads.xecve(not -byte object <cve(am.XXXXXX(args->close_fd)f /captured_stream.XXXXXXmber of threads.ted ch is: ct <. d Xlose_fd)e(ct <not reads.led: threads.Xir("ailed: aptured_stream.XXXXXX ...) in  etected etected threads.rgs->close_fd)ads.ted s.reads. is: ng of led: er of threads.reads.hdir("am.XXXXXXir("ream.XXXXXX.XXXXXXetected d_stream.XXXXXX exception with description "d_stream.XXXXXX s->close_fd)XXXled: threads. ubstring of  reads.d_ == -1: t d_stream.XXXXXXmber of threads.etected xecve(s.etect the number of threads.rse_fd)number of threads.s. == -1f mber of threads. <in  <ir("e object <xecve(XXXe number of threads.s.xception with description "rgs->close_fd)d L"/captured_stream.XXXXXXmber of threads.ch is: (args->close_fd) ring of  -1 failed: = -1se_fd)lose_fd)not iled: cve(t the number of threads.) in e number of threads.hich is: d_stream.XXXXXXe object <iled: not = -1ject <hdir("XXXXX
02Xected r-byte object <e number of threads.d_stream.XXXXXX of f threads.eption with description ". rgs->close_fd)ch is: ir("02X02Xect the number of threads.se(args->close_fd)ted XXXread_fd_ == -1in se(args->close_fd)rgs->close_fd)mp/captured_stream.XXXXXX(args->close_fd)d: hich is: failed: the number of threads.-byte object < ...) in _fd_ == -1 failed: d)hdir("(args->close_fd)ch is: led: X >close_fd)rected string of iled: .XXXXXXd_stream.XXXXXXreads.read_fd_ == -1ream.XXXXXX-byte object <s: reads.failed: = -1number of threads.xception with description "read_fd_ == -1ring of s.mp/captured_stream.XXXXXXrgs->close_fd)e( == -1e( (args->close_fd)XXXL"reads.(" string of ) failed: XXXXX is: mber of threads.ject <d: am.XXXXXX... red_stream.XXXXXXiled: iled: ("eption with description "..) in ring of /tmp/captured_stream.XXXXXX) failed: stream.XXXXXXreads.02Xer of threads./captured_stream.XXXXXXe number of threads.mp/captured_stream.XXXXXX02Xs.Xs.: xecve(ect the number of threads.failed: /tmp/captured_stream.XXXXXXer of threads..XXXXXX L"ad_fd_ == -1ed: (args->close_fd)s: 
threads. tured_stream.XXXXXX. iled: f threads.etect the number of threads.reads.XXXd ) in XXXXXhdir(" ...) in lose_fd)reads.e number of threads.threads.ct <ring of : ad_fd_ == -1not ad_fd_ == -1>close_fd)etected _fd)se_fd)er of threads.ir("++ exception with description " ...) in iled: 
= -1t  ads.rgs->close_fd)ch is: >close_fd)ir("ect the number of threads.tured_stream.XXXXXXring of = -1/tmp/captured_stream.XXXXXXir("ads. failed: d)am.XXXXXXXthe number of threads.02Xstream.XXXXXXmber of threads. exception with description "xception with description "s->close_fd). : number of threads.mber of threads.ect the number of threads.hich is: s->close_fd)/tmp/captured_stream.XXXXXXject <threads./tmp/captured_stream.XXXXXXlose(args->close_fd)/tmp/captured_stream.XXXXXXrgs->close_fd)reads.er of threads. failed:  d)) in object <etected se(args->close_fd)_fd_ == -1xception with description "in  /captured_stream.XXXXXX>close_fd)) failed: ++ exception with description "etect the number of threads.failed:  of ) failed: ted lose(args->close_fd)tured_stream.XXXXXXrgs->close_fd)ads.d)etect the number of threads.ng of _fd)(args->close_fd)s->close_fd)ream.XXXXXXd /captured_stream.XXXXXXam.XXXXXX_fd): f reads.ads.ir("(args->close_fd)s.ed: ct <-byte object <  substring of d)ch is:  of ..) in ted _fd)ad_fd_ == -1 of the number of threads.s->close_fd)red_stream.XXXXXXng of  of f threads./tmp/captured_stream.XXXXXX(args->close_fd)etect the number of threads.t the number of threads._fd)XXX detect the number of threads.e object <cve(etect the number of threads.ailed: f the number of threads.xecve(ng of er of threads.reads. _fd)rgs->close_fd)lose(args->close_fd)lose(args->close_fd) == -1_fd)X <s.e object <>close_fd)xception with description "xception with description "hdir("ect the number of threads.threads.ads.reads. ailed: ected e number of threads. failed: _fd)) in ected s. < of .XXXXXX) in cve(ad_fd_ == -1Xxecve(_fd)ads.f read_fd_ == -1etected xecve( t the number of threads./captured_stream.XXXXXX failed: t the number of threads.02X eption with description "...  ct <: L"aptured_stream.XXXXXXthreads.threads.mp/captured_stream.XXXXXXch is: (args->close_fd)ream.XXXXXXs->close_fd)ected the number of threads.d_stream.XXXXXX of  is: .XXXXXXted ) in hich is: stream.XXXXXXng of d: stream.XXXXXXir(" substring of threads.ad_fd_ == -1ted aptured_stream.XXXXXX reads.d XXXXXthreads.am.XXXXXXt the number of threads.reads.etect the number of threads.= -1ir("ected  is: tured_stream.XXXXXXtured_stream.XXXXXXt L".XXXXXXse(args->close_fd) is: ed:  substring of d_stream.XXXXXXled: s: rgs->close_fd) substring of  <d: lose(args->close_fd)d ubstring of Xected am.XXXXXX detect the number of threads.02X ...) in s.etect the number of threads.ject <d) substring of  substring of L"in .XXXXXXed: ed: red_stream.XXXXXX. not ream.XXXXXXaptured_stream.XXXXXXlose(args->close_fd)am.XXXXXXXhdir("the number of threads.not ad_fd_ == -1XXXrgs->close_fd)d_ == -1etect the number of threads.ject <the number of threads. is:   substring of  exception with description "the number of threads.cve(the number of threads.etected = -1threads.robject <d)stream.XXXXXX exception with description " <read_fd_ == -1ir(" detect the number of threads.threads.t e(iled: ted ream.XXXXXX-1e(s.("e(: f threads.tured_stream.XXXXXXreads.hich is: ads.am.XXXXXXs.red_stream.XXXXXXaptured_stream.XXXXXX of ads.reads.-byte object <se_fd)eption with description "led: s.e number of threads._fd_ == -1Xer of threads.object <02Xlose(args->close_fd)) failed: s.++ exception with description "-1) in (args->close_fd)XXXXXfailed: eption with description "-1stream.XXXXXXfailed: ir(") failed: .XXXXXXhdir("rfailed: ads.reads.xception with description "iled: tured_stream.XXXXXX) in /tmp/captured_stream.XXXXXX failed: Xthreads. == -1ject <etect the number of threads.in yte object <r>close_fd)hich is: ted iled: ("(args->close_fd)/tmp/captured_stream.XXXXXXd_stream.XXXXXXream.XXXXXX: ad_fd_ == -1L"xecve(
eption with description "mp/captured_stream.XXXXXXreads.ubstring of s.ch is: ads.ng of d_ == -1stream.XXXXXXed: ct <rthe number of threads.= -1t -1XXXXXam.XXXXXX..) in ailed:  d) is: f 02Xlose_fd)) in tured_stream.XXXXXX ct <s:  of threads.red_stream.XXXXXXch is: read_fd_ == -1e(e(threads.reads.ed: etected ) in  ads.
xecve(
hich is: f -byte object <: string of am.XXXXXXd_stream.XXXXXXd).  is:  ted f rthreads.ted threads.number of threads.read_fd_ == -1 exception with description "hdir("(args->close_fd)threads.ir("iled: etected not d)d_ == -1ect the number of threads.
in iled: ected ng of _fd) <tured_stream.XXXXXX..) in ) failed: ) in ir("ubstring of string of reads.e(iled: ream.XXXXXXaptured_stream.XXXXXX/captured_stream.XXXXXXetected in X substring of 
etect the number of threads.>close_fd)the number of threads.red_stream.XXXXXXs: 
d)etected ad_fd_ == -1hdir("ubstring of -byte object <object <ir("the number of threads.lose_fd)threads.-byte object <threads.led: hich is: e number of threads.e number of threads. <etected  == -1the number of threads.f ) in 02Xads.aptured_stream.XXXXXX se(args->close_fd)threads.("ring of  ...) in ng of : ream.XXXXXXs. of threads.e(rgs->close_fd)not ("eption with description "ch is: ject <d_stream.XXXXXXam.XXXXXXs->close_fd) detect the number of threads. ...) in _fd)t ject <er of threads.d)s.reads.ir(" substring of d X= -1reads.t the number of threads.f t the number of threads....  of in ng of -1mp/captured_stream.XXXXXXiled: rgs->close_fd) == -1L"-byte object <lose(args->close_fd) is: ... se_fd)f s.d_ == -1cve(ject <-byte object <ject <cve(failed: ..) in XXXread_fd_ == -1not s.ailed: red_stream.XXXXXXlose(args->close_fd)e number of threads. is: ) in ads.ailed:  mp/captured_stream.XXXXXX is: reads.threads.am.XXXXXXs. failed: etected d_ == -1ct < of threads.Xreads.hdir("yte object <etected ads.ct <s.-byte object < XXXXX etect the number of threads. of stream.XXXXXXobject <number of threads._fd)d_ == -1er of threads.cve(rgs->close_fd)ad_fd_ == -1reads.string of ected  <red_stream.XXXXXXse(args->close_fd)lose(args->close_fd)lose_fd)X detect the number of threads. rgs->close_fd)ch is: ject <ream.XXXXXX failed: string of /tmp/captured_stream.XXXXXX... cve(  failed: d_stream.XXXXXXmber of threads.tured_stream.XXXXXXL".XXXXXXyte object < == -1 of in mber of threads.aptured_stream.XXXXXXads.yte object < 
lose(args->close_fd)cve(Xads./captured_stream.XXXXXX of >close_fd)("XXXXX == -1ailed: stream.XXXXXX == -102Xthreads. is: eption with description "X <s.-1hdir("xecve(d) is: ++ exception with description "e number of threads. detect the number of threads.ads.xecve(tured_stream.XXXXXX is: d)ad_fd_ == -1ubstring of ... (" substring of Xd threads.ad_fd_ == -1ect the number of threads.-1led: number of threads. of threads.XXXXX is: Xmber of threads.stream.XXXXXXring of ch is: s.ream.XXXXXXad_fd_ == -1f threads./captured_stream.XXXXXXL"ng of  <red_stream.XXXXXX) in am.XXXXXXrgs->close_fd)stream.XXXXXXthreads.= -1mber of threads.d: ct < of threads.ubstring of /captured_stream.XXXXXXct <threads.(args->close_fd): ng of number of threads.
eption with description "lose(args->close_fd)tured_stream.XXXXXXng of led: xecve(string of number of threads.eption with description "e(t the number of threads.ject <d_stream.XXXXXX_fd)ect the number of threads. detect the number of threads.etect the number of threads.mber of threads.the number of threads.ng of threads._fd)/captured_stream.XXXXXXng of d_stream.XXXXXX  <red_stream.XXXXXX substring of cve(s->close_fd)
t the number of threads. is:  <ted e(s.red_stream.XXXXXXd_stream.XXXXXX_fd_ == -1er of threads.read_fd_ == -1ads.= -1/captured_stream.XXXXXXetect the number of threads.f threads.ream.XXXXXXf ("_fd)threads.X("ream.XXXXXXxception with description "02X_fd_ == -1X/captured_stream.XXXXXXse_fd) is: hich is: /tmp/captured_stream.XXXXXXlose(args->close_fd)lose(args->close_fd)ailed: xception with description "red_stream.XXXXXX(args->close_fd)XXXXXxception with description "XXXetected ect the number of threads.++ exception with description "aptured_stream.XXXXXXse(args->close_fd) is:  <("reads. detect the number of threads. ...) in reads.ject <se_fd)eption with description "t the number of threads.ng of rgs->close_fd)r++ exception with description "ream.XXXXXXs->close_fd): ad_fd_ == -1X) in stream.XXXXXXrgs->close_fd)string of xception with description "threads.red_stream.XXXXXXrreads.ed: xecve(ad_fd_ == -1d)f threads.cve(tured_stream.XXXXXXfailed:  detect the number of threads..XXXXXXs.e number of threads.ed:  failed: er of threads.er of threads.e(. Xf t threads.lose_fd)mber of threads.XXXmber of threads.hich is: >close_fd)ected d_stream.XXXXXXe number of threads.se_fd) eption with description "tured_stream.XXXXXX02Xetect the number of threads.e object < ...) in f mp/captured_stream.XXXXXXject <object <am.XXXXXX("(args->close_fd) substring of tured_stream.XXXXXX-byte object <am.XXXXXXled: not ++ exception with description "ted : failed: reads.e object <led: se_fd)yte object <read_fd_ == -102Xed: t the number of threads.read_fd_ == -1ad_fd_ == -1XXXaptured_stream.XXXXXXad_fd_ == -1XXXe number of threads.d threads./captured_stream.XXXXXXread_fd_ == -1-byte object <... se(args->close_fd)se_fd)X>close_fd)mber of threads.f threads.ch is: threads.ted d:  detect the number of threads.stream.XXXXXX02Xhich is: s: d_ == -1number of threads.s.er of threads.) failed: /captured_stream.XXXXXXcve(ailed: led: number of threads. ...) in Xd threads.xception with description "d_ == -1se_fd)threads.reads. == -1rgs->close_fd)iled: rgs->close_fd)/tmp/captured_stream.XXXXXXf threads.ject <XXXXX of Xlose_fd)etect the number of threads.ct <e object <d)t hich is: lose_fd)(args->close_fd)
e object <: yte object <ted er of threads./captured_stream.XXXXXX= -1 ads.e(... XXXXX of ected X_fd).XXXXXX) in in ubstring of f threads.reads.red_stream.XXXXXX-1reads.reads.XXXXXlose(args->close_fd)ct < == -1se(args->close_fd)the number of threads.stream.XXXXXXd_ == -1xception with description "object <d)) failed: (args->close_fd)read_fd_ == -1XXXad_fd_ == -1XXXXXstring of X ...) in ads.se_fd) ... string of rgs->close_fd). _fd)t the number of threads.e number of threads./tmp/captured_stream.XXXXXX) in string of ailed: read_fd_ == -1 == -1/tmp/captured_stream.XXXXXXXstream.XXXXXX... /captured_stream.XXXXXXject <XXX++ exception with description "am.XXXXXXfailed: ads.++ exception with description "ed: se_fd)lose(args->close_fd)hich is: se(args->close_fd)d_stream.XXXXXX("/tmp/captured_stream.XXXXXX.  substring of s->close_fd)rgs->close_fd)d: cve(aptured_stream.XXXXXXthreads.: 02Xe number of threads.aptured_stream.XXXXXX-byte object <t the number of threads. == -1read_fd_ == -1ng of  <xception with description " exception with description "etect the number of threads.:  failed: /tmp/captured_stream.XXXXXXads.. se_fd)s.mp/captured_stream.XXXXXXct <ream.XXXXXXng of XXXXXled: Xcve( <read_fd_ == -1xecve( ...) in led: .XXXXXXthreads.) failed: ad_fd_ == -1ng of ) in   <s. failed: read_fd_ == -1xception with description "failed: ..) in -byte object <xception with description "lose_fd)++ exception with description "e(yte object <threads.ailed: yte object < substring of aptured_stream.XXXXXXted string of  detect the number of threads./captured_stream.XXXXXXs.ubstring of 02XXXXch is: ) in  <lose_fd)threads.ct <t the number of threads.t the number of threads.d)ect the number of threads.xception with description "e(er of threads.("ubstring of stream.XXXXXXd_stream.XXXXXXfailed: >close_fd)..) in t .XXXXXX("ed: mber of threads.... t the number of threads.yte object < == -1eption with description "rgs->close_fd)cve(02Xthe number of threads.reads.in aptured_stream.XXXXXXmp/captured_stream.XXXXXXthreads.ads.ubstring of f /captured_stream.XXXXXX>close_fd)t the number of threads.>close_fd)d ... ubstring of reads.lose_fd)t ted L"s. of _fd)etected ad_fd_ == -1number of threads.etect the number of threads.iled: : am.XXXXXXads.hdir("read_fd_ == -1 failed: failed: ream.XXXXXXs->close_fd) of  <ected lose(args->close_fd)read_fd_ == -1etected /tmp/captured_stream.XXXXXXcve(yte object <hdir(" detect the number of threads. exception with description "s.>close_fd)d: ir("s.XXXailed:  hich is: Xs.ch is: failed: d_ == -1 detect the number of threads.d_ == -1mp/captured_stream.XXXXXX_fd_ == -1:  of threads.: f ed: t threads.. >close_fd) . reads. e object <ads.XXXXXer of threads.tured_stream.XXXXXXad_fd_ == -1er of threads. substring of 
 is: s.string of ected lose_fd)d (args->close_fd) ...) in ) failed: lose(args->close_fd)eption with description "L"ed:  number of threads.threads.threads.t hich is: ted -1mp/captured_stream.XXXXXXXXX detect the number of threads.ch is: rhdir("am.XXXXXXread_fd_ == -1threads.  d)...  is: read_fd_ == -1d_ == -1se_fd)ed: ads.ject <(args->close_fd)iled: mp/captured_stream.XXXXXXs: er of threads. Xring of ed:  is: number of threads.hich is:  of threads.d: .XXXXXXlose(args->close_fd)reads.d_stream.XXXXXXstream.XXXXXXring of t the number of threads.yte object <
read_fd_ == -1r of threads. is: yte object <in : /tmp/captured_stream.XXXXXXthreads.ed: threads. failed: e number of threads._fd_ == -1f threads.object <-1ads.d)ch is: ailed: >close_fd)read_fd_ == -1reads.yte object < of  failed: L"= -1etect the number of threads.XXXXse(args->close_fd) failed: ir("aptured_stream.XXXXXXobject <threads.-byte object <= -1XXXthreads. is: f  iled:  of etect the number of threads.ailed: 02X(args->close_fd)led: s->close_fd)++ exception with description "ected  failed: yte object <string of mber of threads.d: >close_fd)L"ed:   : xecve(
iled:  cve(ring of _fd). ad_fd_ == -1number of threads.) failed: led: lose(args->close_fd)L"hdir("++ exception with description " substring of ad_fd_ == -1ted f ..) in yte object <se_fd) detect the number of threads.ring of ring of e number of threads.e object <f threads.etect the number of threads.xecve(ct < failed: -byte object </captured_stream.XXXXXXmp/captured_stream.XXXXXXf etect the number of threads.r of  threads.X_fd) failed:  failed: failed: ... etect the number of threads. substring of number of threads.>close_fd)not XXXin lose_fd)ads. exception with description "ream.XXXXXXiled: se_fd) is: ct < of threads.tured_stream.XXXXXXng of  <etected stream.XXXXXXt reads.) in tured_stream.XXXXXXs.am.XXXXXX>close_fd)f threads.++ exception with description " ject <rads.s->close_fd)d ect the number of threads.hich is: L" detect the number of threads.ad_fd_ == -1led: threads.failed: s->close_fd)hich is: e(ad_fd_ == -1-1ect the number of threads.etected Xiled: re number of threads.++ exception with description "d_stream.XXXXXXream.XXXXXXetect the number of threads.er of threads.mp/captured_stream.XXXXXXled: r= -1ubstring of in ir("failed: -1d: -1lose(args->close_fd)read_fd_ == -1 of mp/captured_stream.XXXXXXread_fd_ == -1number of threads.threads.aptured_stream.XXXXXXch is: ring of stream.XXXXXXmp/captured_stream.XXXXXX of threads.string of rgs->close_fd)d_ == -1ed:  <d: rgs->close_fd)d_stream.XXXXXXubstring of _fd)XXX <tured_stream.XXXXXXiled: e number of threads..XXXXXXXXXected in X object <threads.) failed: threads.. cve(..) in hich is: : d: string of _fd)s->close_fd)e( exception with description "etect the number of threads.d_ == -1(args->close_fd)object <d: ads.-byte object < failed: failed: d_stream.XXXXXX(args->close_fd)s.xception with description "xecve(d_ == -1s: _fd)red_stream.XXXXXXe object <Xetect the number of threads.XXXXX(args->close_fd)ed: red_stream.XXXXXXs.e(reads.  substring of se_fd)aptured_stream.XXXXXXd)ubstring of _fd)-byte object <ed: ect the number of threads.r) in reads.: etected rgs->close_fd)ubstring of hich is:  exception with description "in ads.ream.XXXXXXring of rse_fd)d)..) in s.>close_fd)f d)_fd_ == -1 substring of t the number of threads.: rgs->close_fd)not am.XXXXXXlose(args->close_fd)L"cve(e number of threads. of iled: _fd_ == -1Xread_fd_ == -1XXXXX of threads.cve(++ exception with description "failed: lose_fd)read_fd_ == -1ads.X L"xecve((args->close_fd)ted mber of threads.. ) failed: -1ream.XXXXXXled: ++ exception with description "ads. <hich is: ed: eption with description "tured_stream.XXXXXX ++ exception with description "++ exception with description "d_ == -1 is: ++ exception with description " == -1/tmp/captured_stream.XXXXXXd_ == -1ring of failed: rcve(ct <er of threads.L"ect the number of threads.etect the number of threads.e object <ailed: se(args->close_fd)etected (args->close_fd)lose_fd)eption with description "ted d ct <ir("tured_stream.XXXXXX++ exception with description "read_fd_ == -1object <aptured_stream.XXXXXXaptured_stream.XXXXXXd ad_fd_ == -1
s: e object <ream.XXXXXXthreads. == -1XXXe number of threads.ir(". s->close_fd)("f .XXXXXX-1++ exception with description "object <02Xthe number of threads.am.XXXXXXubstring of rgs->close_fd)(args->close_fd) failed: e object <the number of threads.iled: f threads.t the number of threads.reads.not ir("++ exception with description "xecve(threads.ect the number of threads.etected _fd_ == -1 is: ads.  of threads.++ exception with description "xecve(read_fd_ == -1ed: stream.XXXXXX is: ) failed: 
am.XXXXXXd_ == -1iled: ... ++ exception with description "string of Xfailed: ..) in etected _fd)Xreads. of failed: lose(args->close_fd)ailed: er of threads.iled: string of (args->close_fd)lose(args->close_fd)XXXs: ailed: 
t ++ exception with description " == -1t  is: er of threads.
02X of threads.f threads.(" of threads.etected e(rgs->close_fd)number of threads.ected : ++ exception with description "ir("ted e object <("tured_stream.XXXXXXf threads.t >close_fd)threads.ted  rgs->close_fd)read_fd_ == -1 ...) in red_stream.XXXXXX... ng of cve( failed:  <Xted e number of threads.mber of threads.s->close_fd)mp/captured_stream.XXXXXXXXXhdir("stream.XXXXXXailed:  exception with description "-1XXXse_fd)threads.. ubstring of er of threads.xception with description " ...) in ject <ir("reads.ected e(XXXXX02X>close_fd)X eption with description "ream.XXXXXXnot : e number of threads./tmp/captured_stream.XXXXXXad_fd_ == -1XXXng of read_fd_ == -1mp/captured_stream.XXXXXXnumber of threads.mp/captured_stream.XXXXXXred_stream.XXXXXX detect the number of threads.e number of threads.(args->close_fd)) in  ("ng of /tmp/captured_stream.XXXXXXetect the number of threads.s: rgs->close_fd)d: ng of failed: mp/captured_stream.XXXXXXch is: am.XXXXXXred_stream.XXXXXXer of threads.ailed: threads.read_fd_ == -1failed: number of threads./tmp/captured_stream.XXXXXXct <ch is: = -1object <.XXXXXXf threads.ring of XXX ...) in  f threads.ads./tmp/captured_stream.XXXXXXect the number of threads.stream.XXXXXXhdir(" of  is: mp/captured_stream.XXXXXXaptured_stream.XXXXXXhdir("f threads.X++ exception with description "d f threads.lose_fd)(args->close_fd)t the number of threads.hdir("reads.reads.ring of ng of in ailed: ected  <failed: ream.XXXXXX failed: lose(args->close_fd)in stream.XXXXXX) in ad_fd_ == -1d)d_ == -1iled: f threads.se_fd)stream.XXXXXXthe number of threads. -byte object <ted threads.led: ad_fd_ == -1ir("e number of threads./captured_stream.XXXXXXetected e object <d_stream.XXXXXXd)_fd_ == -1) in s.) failed: aptured_stream.XXXXXXs. <) failed: eption with description "am.XXXXXX of object <) failed: rhich is: string of (args->close_fd)hich is: XXX
led:  ted : se_fd)tured_stream.XXXXXXobject <e object <cve(e number of threads.failed: threads.led:  failed: /tmp/captured_stream.XXXXXX ...) in hich is: se(args->close_fd)s.stream.XXXXXXd) is: ads.object <threads. of s.-1= -1ads.failed: ct <lose_fd)reads.led: ) in XXXrgs->close_fd)e number of threads.iled: reads.s.) in  d d: s.er of threads.iled: s->close_fd)/tmp/captured_stream.XXXXXXstring of  -1XXX-1ring of s: d)se_fd)read_fd_ == -1lose(args->close_fd)cve(number of threads.se_fd)rgs->close_fd)threads.ads.Xse(args->close_fd).XXXXXX>close_fd)the number of threads. < of ailed:  == -1d: iled: -1 exception with description "d not threads.d: d: ) failed: in ected  of  yte object <d_stream.XXXXXXd_ == -1stream.XXXXXXt hich is: ads. of hdir("/tmp/captured_stream.XXXXXXd: ad_fd_ == -1ch is:  s->close_fd)XXXxecve(.XXXXXXL"..) in ch is: . object <ads.read_fd_ == -1_fd_ == -1er of threads.se(args->close_fd)mber of threads.d_ == -1/captured_stream.XXXXXX("led: e number of threads.f d)L"iled: ("in read_fd_ == -1read_fd_ == -1-byte object <threads.hich is: ject <e object <etect the number of threads.lose(args->close_fd)r_fd)mber of threads.L"s: -1 failed: f se_fd)reads.-byte object < <-byte object <se(args->close_fd)the number of threads._fd_ == -1L"read_fd_ == -1er of threads.failed: xception with description "s->close_fd)d ads.) failed:  of threads.:  of  rgs->close_fd)lose_fd)r of ad_fd_ == -1 is: ject < == -1e object <lose_fd)) failed: ..) in ... number of threads.t ... d_ == -1ailed: iled: ads.e object <Xthe number of threads.Xd   substring of .XXXXXX-byte object <mber of threads. etect the number of threads.ads. failed: ) failed: read_fd_ == -1etected s.ect the number of threads.ng of e object <ring of -byte object <ct <... /tmp/captured_stream.XXXXXXads.lose(args->close_fd)ring of number of threads.L"f s: lose_fd)-102X-1t in ect the number of threads.number of threads. is: _fd_ == -1 of mber of threads.cve(number of threads.ads.reads._fd)xception with description "Xmp/captured_stream.XXXXXXXtured_stream.XXXXXXfailed:  <lose(args->close_fd)etect the number of threads.in read_fd_ == -1
..) in  == -1 failed: hich is: ) in lose_fd)xecve(led: ubstring of threads.s->close_fd)s->close_fd)t the number of threads.the number of threads. of threads.Xlose(args->close_fd)XXlose_fd)ng of d)d_ == -1 <ject <XL"e(-byte object <ed: etected ("ject <-1read_fd_ == -1-1 reads.= -1 of er of threads.er of threads.e(tured_stream.XXXXXX-1... L"mp/captured_stream.XXXXXXyte object <e number of threads.d_ == -1) in hich is: threads.ailed: tured_stream.XXXXXXX d_ == -1xception with description ") failed: ring of mp/captured_stream.XXXXXXhich is: yte object <= -1the number of threads.tured_stream.XXXXXXf cve(etected number of threads.t the number of threads.d the number of threads.iled:  detect the number of threads.02Xring of ream.XXXXXXf threads.read_fd_ == -1 e(red_stream.XXXXXXstream.XXXXXX is: t ++ exception with description "ads.in Xt XXXXX: hich is: xecve(f L"hdir("f /tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXXiled: read_fd_ == -1d _fd)XXXXXthreads.ect the number of threads.XXad_fd_ == -1e(eption with description "reads.s:  rt the number of threads.cve(ailed: ected ct <... ir("ailed: 02X failed: t  failed:  failed: >close_fd)ted ject < detect the number of threads.tured_stream.XXXXXXetected er of threads. exception with description "reads.: etected Xring of ..) in  == -1failed: e number of threads.etected etected  == -1etect the number of threads...) in ted -byte object <xecve(>close_fd)ailed: ir("ed: s.  failed: stream.XXXXXXch is: not  == -1xception with description "eption with description ".XXXXXXeption with description "  cve(xecve(ed: eption with description "led: Xch is: hich is: 02Xcve(("etect the number of threads.++ exception with description "iled: . mp/captured_stream.XXXXXX substring of xecve( er of threads.-byte object <in rring of s.er of threads.threads.... tured_stream.XXXXXX lose(args->close_fd)ream.XXXXXX++ exception with description "-1se(args->close_fd) eption with description ") failed: d_ == -1hich is: not rgs->close_fd)d lose(args->close_fd)Xf number of threads.ring of  eption with description "f threads.se_fd)-byte object <ads.hich is: cve(xception with description "d d)rgs->close_fd)_fd)02Xs->close_fd)ed: reads.02Xrgs->close_fd)lose(args->close_fd)ream.XXXXXX of threads.threads.d_stream.XXXXXXL"failed:  substring of ++ exception with description "..) in  is: ads.ir("in threads.xception with description "red_stream.XXXXXX : 
... _fd_ == -1f  detect the number of threads.t the number of threads. : rgs->close_fd)ring of ring of threads.f  exception with description "d_stream.XXXXXX exception with description "02X of threads.t the number of threads.cve(ect the number of threads. of . d yte object <e(rgs->close_fd) ... : threads.d_ == -1eption with description "yte object <ct <ject <ct < == -1etect the number of threads.Xmp/captured_stream.XXXXXXXected L"s->close_fd) of am.XXXXXX
hdir("reads._fd)e object <mber of threads.-byte object <threads.>close_fd)yte object <. L"s.mp/captured_stream.XXXXXXlose(args->close_fd) t ailed: ad_fd_ == -1string of  exception with description "t  exception with description "_fd_ == -1_fd_ == -1am.XXXXXXer of threads. substring of ) in tured_stream.XXXXXXnumber of threads.iled: ted lose(args->close_fd)ect the number of threads.failed: ject <stream.XXXXXXads.e(XXXream.XXXXXX("d_ == -1tured_stream.XXXXXX : eption with description "d)threads.++ exception with description "t the number of threads.reads.ed: red_stream.XXXXXXected ch is: ted ) failed: stream.XXXXXXads.ch is: se_fd)ed: . threads.Xthe number of threads. ...) in ect the number of threads.aptured_stream.XXXXXXected ("s.ad_fd_ == -1 red_stream.XXXXXXf ubstring of lose_fd)= -1ad_fd_ == -1lose_fd)-byte object <ect the number of threads.d red_stream.XXXXXX>close_fd)ject <ream.XXXXXX02X
Xer of threads. detect the number of threads. failed: ++ exception with description "s.ch is:  <cve(iled:  d)_fd)led: lose(args->close_fd)ng of threads. detect the number of threads.object <s.etected L"ject <-byte object <led:  < XXXXXt lose(args->close_fd)d)t in ng of ect the number of threads.t e number of threads.lose(args->close_fd)mber of threads.failed: Xrgs->close_fd)X. rgs->close_fd)ted  ...) in ad_fd_ == -1ted  failed: ject <se(args->close_fd)= -1_fd_ == -1 yte object <= -1d ) failed: rring of etect the number of threads.mber of threads.lose(args->close_fd)/captured_stream.XXXXXX exception with description "aptured_stream.XXXXXX/captured_stream.XXXXXXnot -byte object <s.-1t the number of threads.ring of /captured_stream.XXXXXXred_stream.XXXXXX
ted ring of t the number of threads.lose_fd) is: ng of in string of . -1ubstring of er of threads.se(args->close_fd) substring of e(xecve(aptured_stream.XXXXXX of reads. aptured_stream.XXXXXXd: ected  is: t the number of threads.... ... ream.XXXXXXetected ring of  of mp/captured_stream.XXXXXXir(" is: cve(XXXXXlose(args->close_fd)etected  is:  == -1se_fd)d)reads. is: ("etect the number of threads.ad_fd_ == -1. string of ("ring of eption with description "
ad_fd_ == -1d)ads.ed: d) exception with description "etect the number of threads.number of threads.failed: e number of threads. substring of = -1the number of threads.>close_fd) exception with description " etect the number of threads.reads.-byte object <XXX.  <lose(args->close_fd)the number of threads.ject <: ("ring of  failed: ect the number of threads.tured_stream.XXXXXXject <ng of string of -byte object <iled: ++ exception with description " == -1eption with description "d)= -1s.f the number of threads.ect the number of threads. failed: .XXXXXXd: ng of d d ch is: ect the number of threads.riled: eption with description ": yte object <mp/captured_stream.XXXXXX is: _fd)etect the number of threads.= -1ailed: : ject <L"rch is: >close_fd)rgs->close_fd)ads. ...) in . xecve(-byte object <ring of am.XXXXXXject <cve(lose(args->close_fd)se_fd)xception with description "XXXs->close_fd)-1/captured_stream.XXXXXXubstring of etected xception with description "s.failed: er of threads.XXXL"..) in se(args->close_fd)ring of aptured_stream.XXXXXXs.ed: failed: ch is: read_fd_ == -1XXX failed: t ir("hdir("led: threads.ng of e object < of yte object <ads.Xmber of threads.d ailed: rgs->close_fd): mp/captured_stream.XXXXXX <f ubstring of cve(d_ == -1se_fd)ir("XXXL"read_fd_ == -1threads.ad_fd_ == -1ed: in er of threads.yte object <>close_fd)number of threads. of threads.e(s->close_fd)lose_fd)t the number of threads...) in in /tmp/captured_stream.XXXXXXnumber of threads.rgs->close_fd)lose_fd)ed: ect the number of threads.s->close_fd)ad_fd_ == -1tured_stream.XXXXXXXed: etected s.ng of ) failed: ubstring of ir("++ exception with description "= -1object <red_stream.XXXXXXse(args->close_fd)threads.f rXled: _fd)Xring of  d)-byte object < of . etect the number of threads.failed: ject <. se_fd)ected ected failed: ubstring of f threads. t stream.XXXXXXcve(eption with description ": ject <f s->close_fd)rgs->close_fd)ject <the number of threads.. lose(args->close_fd)-byte object <) in : ct <red_stream.XXXXXXse(args->close_fd)se(args->close_fd)d s.... reads.led: ubstring of s->close_fd)s.("rgs->close_fd)ad_fd_ == -1d: _fd_ == -1 substring of d: d _fd)am.XXXXXX detect the number of threads.d_ == -1 detect the number of threads._fd)XXXXXch is:  of threads.t the number of threads. /tmp/captured_stream.XXXXXXcve(t the number of threads.ng of -1xception with description "d: etect the number of threads.f threads..XXXXXX detect the number of threads.ng of ... f threads.ed: failed: L"xecve(the number of threads.f   is: ected e(s.xception with description "ct <ads.eption with description "-byte object <eption with description "d_ == -1ring of reads.ject <X>close_fd)02Xthreads.(args->close_fd)XXXXXxception with description "mber of threads.ubstring of xecve(am.XXXXXXected ads.red_stream.XXXXXXer of threads. of threads.number of threads.-byte object <reads.X/tmp/captured_stream.XXXXXXream.XXXXXXeption with description "stream.XXXXXXch is: ring of : -byte object <d ring of /captured_stream.XXXXXX(args->close_fd)ir("ct < failed: cve(ads.string of ) in hdir("threads.ailed: rmber of threads.-byte object <red_stream.XXXXXX
e object <lose_fd)d aptured_stream.XXXXXX substring of etected ..) in lose(args->close_fd)ted 
lose_fd): Xads.e(e( lose(args->close_fd)the number of threads. ...) in : er of threads.rted d_ == -1hich is: aptured_stream.XXXXXXer of threads. substring of hdir("d: rream.XXXXXXthreads.L"not ads.string of er of threads.ted  detect the number of threads.xception with description "_fd)ected t ed: xception with description "s.se_fd)  ...) in er of threads..XXXXXXe(eption with description "ads....  ed: ct <("/captured_stream.XXXXXXmber of threads.number of threads.hdir("d ads.t the number of threads.led: d_stream.XXXXXXad_fd_ == -1f threads.xception with description " is:  _fd_ == -1s.d)e object <t the number of threads. threads.etected  <f d :  iled: yte object <) in ream.XXXXXXd)... 02Xlose(args->close_fd)-1e object <se(args->close_fd) detect the number of threads.yte object <ubstring of -byte object < am.XXXXXXd_stream.XXXXXXse(args->close_fd)) failed: >close_fd)se_fd)XXXXX) in  substring of  substring of number of threads. detect the number of threads.se(args->close_fd)-1t the number of threads.ect the number of threads.string of failed: .  substring of ed:  failed: stream.XXXXXXse_fd)se(args->close_fd)ected -1>close_fd)ad_fd_ == -1 ... reads.s.e(L"ir("am.XXXXXXch is: /captured_stream.XXXXXXobject <reads.ailed: s.-byte object <red_stream.XXXXXXnumber of threads.rgs->close_fd)("d_stream.XXXXXXthreads.read_fd_ == -1eption with description "reads...) in >close_fd)ailed: -byte object <s.s->close_fd)s->close_fd) substring of failed:  failed: read_fd_ == -1ad_fd_ == -1etect the number of threads.d_stream.XXXXXX++ exception with description "02X/captured_stream.XXXXXXer of threads.etected yte object <threads.02Xubstring of 02X of threads.number of threads.e object <ailed: hich is: /tmp/captured_stream.XXXXXXhdir("ad_fd_ == -1number of threads.led: >close_fd) <lose_fd)lose_fd)++ exception with description "XXXrads.ir("_fd_ == -1: threads.... xception with description "ch is: ir(" is: failed: mber of threads.mp/captured_stream.XXXXXXir("threads.not tured_stream.XXXXXX == -1ject <s->close_fd) == -1d_ == -1s->close_fd)-byte object <string of ads.etect the number of threads.f threads.not xception with description "e object <e(t the number of threads.d: ected >close_fd)lose_fd)etect the number of threads. substring of /captured_stream.XXXXXX>close_fd)threads.ring of e number of threads.xception with description "iled: d_ == -1_fd_ == -1d_ == -1>close_fd)X..) in (" of read_fd_ == -1read_fd_ == -1f threads.ad_fd_ == -1etect the number of threads./captured_stream.XXXXXX-1in read_fd_ == -1e number of threads.s. detect the number of threads.s.ad_fd_ == -1/captured_stream.XXXXXXd ream.XXXXXX/tmp/captured_stream.XXXXXXads. exception with description " /tmp/captured_stream.XXXXXXnumber of threads.s.ream.XXXXXX... failed: e number of threads.: ) failed: xecve(aptured_stream.XXXXXXnot d: ected ream.XXXXXXe object <f -1f threads.e object <in Xd: d:  s->close_fd)mber of threads.d_stream.XXXXXX <..) in lose_fd)xception with description "ring of mber of threads.ed: cve(hdir(" _fd_ == -1ir(".XXXXXX substring of f stream.XXXXXXring of mp/captured_stream.XXXXXX is: threads.number of threads.e number of threads._fd).XXXXXXthe number of threads. substring of  ct <) failed: -1ected lose_fd)02Xect the number of threads.red_stream.XXXXXXyte object <ubstring of ailed: 02Xtured_stream.XXXXXXd_ == -1ailed: -1reads.ream.XXXXXX detect the number of threads.stream.XXXXXXd: yte object <ir("se(args->close_fd)-1XXX <t the number of threads.ch is: ct <ream.XXXXXXobject <_fd)ailed: string of threads.reads. reads. of e(ir("red_stream.XXXXXXf iled: failed: :  <number of threads.in : s: the number of threads.L"number of threads.ch is: ) failed: X-1XXXXXf  ...) in threads.ed: e number of threads..XXXXXXhdir("e object < stream.XXXXXX_fd_ == -1 rgs->close_fd)-byte object <ng of d: /tmp/captured_stream.XXXXXXubstring of  ir("threads.etected ("ream.XXXXXXads.xecve(ject <ubstring of L"d  of ch is:  detect the number of threads.Xhich is: ected  object <not hich is: yte object <etect the number of threads.s.. ++ exception with description ") in ring of aptured_stream.XXXXXXX-1not t the number of threads. hdir("(args->close_fd)ads.= -1ads.xecve(d_stream.XXXXXXd_ == -1aptured_stream.XXXXXXng of rgs->close_fd)++ exception with description "
object <eption with description "rgs->close_fd)threads.d e number of threads.object <02Xir("etect the number of threads.t d)f  ...) in s.) failed: e object <e(-byte object <s.tured_stream.XXXXXX-byte object <hdir("threads.ect the number of threads.mber of threads.: /tmp/captured_stream.XXXXXXer of threads.cve(.XXXXXXct <d_stream.XXXXXX_fd_ == -1ubstring of reads.etect the number of threads. == -1s: s: ailed: the number of threads.
hich is:  failed: e(-byte object <etect the number of threads. of threads.(args->close_fd) <e(ailed: d ubstring of f ++ exception with description "(" of lose(args->close_fd)ected read_fd_ == -1am.XXXXXXthreads. detect the number of threads. == -1etected  is:  == -1ad_fd_ == -1ected t etected se(args->close_fd)lose_fd)ad_fd_ == -1 is: rgs->close_fd) ...) in  ad_fd_ == -1read_fd_ == -1..) in 
lose_fd)X) failed: -byte object <f threads.) in number of threads.iled: t the number of threads.xception with description "etected XXXXXailed: t XXXmp/captured_stream.XXXXXXobject <ted -1= -1xception with description "(args->close_fd)XXXxception with description "ailed: s.am.XXXXXXin s: read_fd_ == -1mber of threads.re number of threads.t mp/captured_stream.XXXXXXetect the number of threads.s.yte object <
xecve( of reads.>close_fd)ed: ("f threads.object <d_ == -1s..XXXXXXred_stream.XXXXXX_fd) is: -byte object <ted stream.XXXXXXd: string of ir("in in f threads._fd_ == -1d_stream.XXXXXXstream.XXXXXXer of threads.= -1ad_fd_ == -1:  . number of threads._fd_ == -1se(args->close_fd)yte object <XXXXXect the number of threads.s: xception with description ") in etect the number of threads..XXXXXXt f threads.: L"_fd)ads.) in  detect the number of threads.se_fd)red_stream.XXXXXXstring of ) in >close_fd)iled: lose_fd)ir("_fd)ailed: yte object <d ..) in e number of threads...) in s: t the number of threads.ad_fd_ == -1("ng of not ads.s->close_fd)rream.XXXXXXads.XXXXX.XXXXXX ng of d: eption with description "ring of 02X..) in :  02Xin  of threads._fd_ == -1threads.... : ch is: e(ubstring of  ...) in se_fd)e number of threads.the number of threads._fd) >close_fd)mp/captured_stream.XXXXXX..) in the number of threads.(") in ir("reads. d)mp/captured_stream.XXXXXXxception with description "am.XXXXXXrL"ng of xecve(ted er of threads.d_stream.XXXXXXd_stream.XXXXXX>close_fd) not hich is: ailed: t etected s: ct <threads.(args->close_fd)s./captured_stream.XXXXXXrgs->close_fd)se_fd)e(se_fd)threads.ad_fd_ == -1 L"02Xled: se(args->close_fd)(args->close_fd)d tured_stream.XXXXXXthe number of threads. <e number of threads. failed: am.XXXXXXs.reads. of mp/captured_stream.XXXXXXiled: ubstring of ject <e number of threads./tmp/captured_stream.XXXXXX/captured_stream.XXXXXXs: L"er of threads.ed: ) failed:  substring of ect the number of threads.xception with description "f r++ exception with description "ad_fd_ == -1= -1L"ng of reads.>close_fd)xecve(number of threads.d)..) in ject <) in d  ...) in etected t ads.number of threads. failed: f threads.e(...  detect the number of threads. object <s.ject <lose_fd)ring of  /captured_stream.XXXXXX(args->close_fd)XXXXXXrxception with description "
ad_fd_ == -1e number of threads.d)ed: e object <failed:  of threads.ailed: mber of threads. t _fd_ == -1..) in threads.led: /tmp/captured_stream.XXXXXX ...) in ..) in ch is: f threads. exception with description "reads.ad_fd_ == -1mber of threads.Xads.= -1Xrads.-byte object <failed: er of threads.... etected lose(args->close_fd)) failed: se_fd)led:  substring of number of threads.rgs->close_fd)s->close_fd)++ exception with description "t L"ect the number of threads.reads._fd)ng of threads.red_stream.XXXXXXeption with description " t reads.d_stream.XXXXXXL"L"threads. is: ject <ng of ad_fd_ == -1Xe number of threads.XXXXXd_stream.XXXXXX of threads.d)s->close_fd)aptured_stream.XXXXXXreads.etected ream.XXXXXXream.XXXXXX: XXXct <failed: d_ == -1ch is: er of threads._fd)d: string of e number of threads....  == -1ubstring of ted >close_fd) reads.hdir("etect the number of threads.read_fd_ == -1lose(args->close_fd)-byte object <object <xception with description "eption with description "t aptured_stream.XXXXXXobject <e(ir("ring of e(..) in ubstring of  (args->close_fd)ring of -byte object < failed: hdir("/tmp/captured_stream.XXXXXXthreads.read_fd_ == -1X iled:  exception with description "se(args->close_fd)/tmp/captured_stream.XXXXXXeption with description "ring of d etect the number of threads.lose(args->close_fd)string of /captured_stream.XXXXXXred_stream.XXXXXX) failed: s: -byte object <) failed: d /tmp/captured_stream.XXXXXXe object <ads./tmp/captured_stream.XXXXXXs->close_fd)etected e(not red_stream.XXXXXXse_fd) of ir("... (args->close_fd)the number of threads.stream.XXXXXXer of threads. ..) in >close_fd) hdir("d_ == -1 substring of ads.e number of threads.) in ct <cve(stream.XXXXXX..) in XXXXX... f reads. of threads.red_stream.XXXXXXhdir(") failed: er of threads.t the number of threads. failed: s. d d string of >close_fd)ed:  of f threads.ads.ct <ring of rgs->close_fd)failed: L"ct <etect the number of threads.etected ted X failed:  exception with description "s: in cve(etect the number of threads.led: hdir(": ng of d: : reads.lose_fd)se(args->close_fd)led: e object <ted ch is: e(ected s: ads.ailed: (args->close_fd)02Xch is: s: ring of threads.ads.02Xstream.XXXXXX02Xir(" lose(args->close_fd) of threads.f  ect the number of threads.object <) failed: : mber of threads.xception with description "XXXXXXads. t  s.am.XXXXXXobject <d_stream.XXXXXXread_fd_ == -1eption with description "L"threads.tured_stream.XXXXXXetected ) in failed: s->close_fd)s->close_fd)  threads.L"mber of threads.ng of se_fd)stream.XXXXXX exception with description "stream.XXXXXXted ) failed: threads.ads.failed: led: reads.mber of threads.ch is: read_fd_ == -1in  ream.XXXXXX(args->close_fd)xecve(d: threads.s: s->close_fd)f  d f threads.eption with description "s.>close_fd)Xrgs->close_fd)threads.
reads.rled: ailed: ) failed: ++ exception with description "reption with description "mp/captured_stream.XXXXXX substring of reads.se_fd)e(string of (args->close_fd)string of XXXXXject <string of threads. is: ++ exception with description "..) in ubstring of threads.mber of threads.ads.lose_fd)/captured_stream.XXXXXX/captured_stream.XXXXXX/captured_stream.XXXXXX of threads.XXXs.reads.. . ng of string of : ject <XXXXX failed: etect the number of threads.ted ads._fd_ == -1-1not ected >close_fd)e(   == -1er of threads.e object <f threads.XXXXX = -1se(args->close_fd)XXXxception with description "-byte object <failed: >close_fd)reads.hich is: d_ == -1ject <ad_fd_ == -1  Xmber of threads.mp/captured_stream.XXXXXXtured_stream.XXXXXX02X_fd_ == -1in  exception with description "Xhich is: ject <xecve(aptured_stream.XXXXXXetect the number of threads.XXXXXthe number of threads.d: number of threads.d_ == -1red_stream.XXXXXX substring of  <hdir("t d) of threads. is:  is: ject <se(args->close_fd)ect the number of threads.aptured_stream.XXXXXXse_fd)hich is:  detect the number of threads.e object <) failed: yte object <ected  substring of aptured_stream.XXXXXXf threads.number of threads.ream.XXXXXXailed: mber of threads.stream.XXXXXXred_stream.XXXXXXiled: object <-1reads.er of threads.ch is: s.yte object <++ exception with description "s->close_fd)lose(args->close_fd)s:  failed: e number of threads.-1eption with description "-1aptured_stream.XXXXXXXXXXXetect the number of threads.s.ream.XXXXXX-1etect the number of threads.mp/captured_stream.XXXXXXe number of threads.mp/captured_stream.XXXXXXir(" <ubstring of ads.ed: e number of threads.ng of e(ad_fd_ == -1) in in d_stream.XXXXXXse_fd)ryte object <hich is:  of threads. detect the number of threads.s: cve(red_stream.XXXXXXmp/captured_stream.XXXXXXXXX. threads.yte object <etect the number of threads.string of failed: lose_fd)iled: ected  tured_stream.XXXXXX ect the number of threads.>close_fd)
s...) in hdir("ch is: hich is: ed: ring of not  of stream.XXXXXXnumber of threads.s.) in ected etected s..XXXXXXtured_stream.XXXXXXf  of threads...) in ) in f  detect the number of threads. e object <er of threads.ect the number of threads.eption with description "Xmp/captured_stream.XXXXXXs: am.XXXXXXs->close_fd)ad_fd_ == -1er of threads. exception with description "lose_fd)yte object <-1ch is: number of threads.lose_fd)stream.XXXXXXt xecve(cve(not s.Xaptured_stream.XXXXXXXject <se(args->close_fd)  of >close_fd)s: ted ++ exception with description "e(number of threads.reads.XXXthreads._fd)s.ct <e number of threads.ads.. .  am.XXXXXXeption with description ": XXXXXstream.XXXXXX exception with description "(args->close_fd) ...) in ads.ring of ) in  . f XXXt the number of threads./captured_stream.XXXXXXs. ads.) in ected ..) in >close_fd)ted iled: d:  of ) in threads.>close_fd) <-byte object <s->close_fd)yte object <d: tured_stream.XXXXXX= -1rgs->close_fd)yte object <... (args->close_fd)tured_stream.XXXXXX of e object <s..XXXXXXe object <d)ted rgs->close_fd)s: -1ected reads. == -1e(d_ == -1 detect the number of threads.er of threads. ...) in threads.mp/captured_stream.XXXXXXed: t the number of threads.>close_fd)ad_fd_ == -1L"eption with description " e object <ubstring of /tmp/captured_stream.XXXXXXf XXXXX of threads.threads.ad_fd_ == -1ed: stream.XXXXXXr of  is:  of threads.reads.Xd: iled: cve( substring of .XXXXXXnumber of threads.) in 02Xreads.("in ected 
XXXXX exception with description "s->close_fd) failed: lose_fd)-byte object <) in ring of L"reads.number of threads.mp/captured_stream.XXXXXX02Xthreads.not read_fd_ == -1ubstring of >close_fd)ected  is: 
/captured_stream.XXXXXXeption with description "aptured_stream.XXXXXXrgs->close_fd)eption with description "("s._fd) detect the number of threads....  ...) in  exception with description "rad_fd_ == -1  exception with description "t led: s->close_fd)ected  d_ == -1...  of ("02XXt the number of threads.ads.= -1ring of ring of etected ++ exception with description "lose(args->close_fd)mber of threads.etected ("
threads. <object <e(-1ct <ng of  <threads.threads. of iled: 
r_fd)-byte object <lose_fd)ir("hdir("... ted ect the number of threads.++ exception with description " ...) in number of threads.s.threads.se_fd) of threads.lose_fd) (" of threads.xception with description "etect the number of threads.s->close_fd)d: 02XXXXXXhdir("t the number of threads.iled: ... f  == -1hich is: . mp/captured_stream.XXXXXXin mp/captured_stream.XXXXXX) failed: ream.XXXXXXrgs->close_fd)s->close_fd)d)d) == -1tured_stream.XXXXXX/captured_stream.XXXXXX detect the number of threads.t _fd_ == -1eption with description "number of threads.XXXring of mber of threads.mber of threads.in _fd_ == -1++ exception with description "etect the number of threads. cve(ream.XXXXXXobject <rgs->close_fd)) in ("02Xject <... rgs->close_fd)ubstring of object <-byte object <. reads.e number of threads.rgs->close_fd) of lose(args->close_fd)/captured_stream.XXXXXXse_fd)ubstring of s.++ exception with description "e( failed: f threads. is: ubstring of  reads.red_stream.XXXXXXubstring of ch is: 
 <>close_fd)ream.XXXXXXnumber of threads.(args->close_fd).XXXXXXread_fd_ == -1(args->close_fd)lose(args->close_fd)/captured_stream.XXXXXXubstring of s.reads.: s: xception with description "++ exception with description "-byte object < of f threads.d_ == -1
e number of threads.f threads.
-byte object <ads.ir("f threads. of the number of threads.cve(.XXXXXXse_fd)mp/captured_stream.XXXXXX.XXXXXX detect the number of threads.XXXXXXd d_ == -1lose(args->close_fd)>close_fd) substring of -1_fd_ == -1Xd_ == -1++ exception with description "xception with description "s: in d) == -1f ring of ubstring of t the number of threads.mber of threads.d: : ir("ads.cve(e(.XXXXXXread_fd_ == -1Xaptured_stream.XXXXXX= -1stream.XXXXXXng of er of threads.lose(args->close_fd)ubstring of etected  reads.cve(ted am.XXXXXXads. of threads.mber of threads.... f threads.("02X-byte object <hich is: s: threads. of threads...) in .  ...) in t the number of threads.e number of threads.= -1 threads._fd_ == -1the number of threads.s.tured_stream.XXXXXXse(args->close_fd)-byte object <the number of threads.X
 ...) in rgs->close_fd)xecve(d)e( detect the number of threads.hich is: threads.XXXng of _fd)("Xs: ++ exception with description "mber of threads.rled: t ect the number of threads.d_ == -1d: the number of threads.yte object <s.mber of threads.. e number of threads. of threads.XXXstream.XXXXXXted ir("s: rgs->close_fd)s.etected etect the number of threads.: led: failed: (args->close_fd)lose(args->close_fd)  detect the number of threads.cve( exception with description "number of threads.am.XXXXXXreads. == -1s.s: ted string of number of threads.(args->close_fd).XXXXXXxecve(cve(d_stream.XXXXXXlose(args->close_fd)mber of threads. ...) in led: ted s. _fd)xecve( ...) in yte object <iled: yte object <se_fd)_fd)_fd)eption with description "= -1ed: e object <L"lose(args->close_fd)ted number of threads.not e number of threads.ad_fd_ == -1ads.se(args->close_fd)lose(args->close_fd)in hdir("mber of threads. ...) in am.XXXXXX_fd_ == -1_fd)s.tured_stream.XXXXXX
hich is: (args->close_fd)ads.... XXXXX object <er of threads. of threads.led: cve(... threads.cve(XXXs.am.XXXXXXmber of threads.read_fd_ == -1s..XXXXXXiled: etect the number of threads.X-1ream.XXXXXXlose_fd)se_fd) <stream.XXXXXX/tmp/captured_stream.XXXXXXmber of threads. xception with description "  _fd_ == -1in XXXch is: -1... am.XXXXXXL"stream.XXXXXX) failed: ed: etect the number of threads._fd_ == -102Xs: the number of threads.t the number of threads.  <se_fd) exception with description "XXX/captured_stream.XXXXXX.XXXXXXect the number of threads.hich is: ect the number of threads.iled:  is: = -1-byte object </captured_stream.XXXXXX= -1.XXXXXXetected ring of threads.e((args->close_fd)se(args->close_fd)++ exception with description " e number of threads. <ng of lose(args->close_fd)f lose(args->close_fd) substring of yte object <-byte object <er of threads.. ads.: f (args->close_fd)... ) failed: led: (args->close_fd)eption with description "f  == -1ads.reads.ream.XXXXXXfailed: ) in t ... XXX /captured_stream.XXXXXXobject <reads.d rgs->close_fd)stream.XXXXXX of threads.) in cve(_fd)d_ == -1 substring of ream.XXXXXX02Xetected lose_fd)s.read_fd_ == -1 rct <:  substring of e(threads.) in reads.s.f ++ exception with description "the number of threads. of threads. of yte object <(args->close_fd)failed: string of  exception with description "XXXXX ed: aptured_stream.XXXXXXthe number of threads.stream.XXXXXXnumber of threads. is: read_fd_ == -1d)s.ed:  mp/captured_stream.XXXXXXin s->close_fd)d: :  is: /tmp/captured_stream.XXXXXXxception with description "hdir("ubstring of ++ exception with description "t the number of threads.read_fd_ == -1++ exception with description ") failed: r-byte object <aptured_stream.XXXXXXect the number of threads.ubstring of d_ == -1s.f s.= -1in XXX_fd_ == -1ailed: etect the number of threads.(args->close_fd)X.XXXXXXd_stream.XXXXXXad_fd_ == -1etected ct <xception with description "XXXf threads.ad_fd_ == -1= -1_fd)am.XXXXXXxecve(yte object <read_fd_ == -1ads.mp/captured_stream.XXXXXXeption with description ">close_fd)in d hdir("etect the number of threads. failed:  in  detect the number of threads.ct <L"_fd_ == -1string of in d_stream.XXXXXXstring of X
ect the number of threads.ch is: se_fd)
reads.not ...  <s./tmp/captured_stream.XXXXXXads. <string of lose_fd)hdir(" exception with description "e object <se_fd)L"s.etected hdir("("t ) failed: reads.ject <f in e object <L"e object <failed:  of threads.>close_fd)er of threads.d_ == -1t t the number of threads.: er of threads.ring of ..) in ..) in  ) failed: t the number of threads.object <: s->close_fd)/tmp/captured_stream.XXXXXXred_stream.XXXXXXd cve(ad_fd_ == -1am.XXXXXXs.se(args->close_fd)t the number of threads.= -1XXX>close_fd) ...) in r-1mber of threads.mp/captured_stream.XXXXXXetected lose_fd)ject <ject <the number of threads._fd_ == -1d: XXXXX exception with description "number of threads.e object <("tured_stream.XXXXXXXXXng of -byte object <d_ == -1threads. detect the number of threads.ads._fd_ == -1) failed: threads.ailed: ..) in ir("failed: e(d_stream.XXXXXXXXXXXng of Xd_stream.XXXXXXse(args->close_fd)mber of threads.f threads...) in ads.("se(args->close_fd)etected threads.read_fd_ == -1t the number of threads.: X... ect the number of threads. substring of X) failed: s->close_fd)t the number of threads.e(ads.red:  ...) in  detect the number of threads.XXXXX detect the number of threads.mp/captured_stream.XXXXXXd_ == -1the number of threads.read_fd_ == -1led:  detect the number of threads.the number of threads.ring of ream.XXXXXXreads.++ exception with description ">close_fd)(args->close_fd)mp/captured_stream.XXXXXXs: aptured_stream.XXXXXXf threads.) failed: = -1yte object <_fd)-1xecve(e object <... failed: lose(args->close_fd)("ailed: d: ailed: s.02Xfailed: rream.XXXXXXaptured_stream.XXXXXX <number of threads. of threads.. 02X of threads.xception with description " <cve(ir("/captured_stream.XXXXXX  xception with description "++ exception with description "cve(e( <_fd)XXXin cve(ads.>close_fd)ads.se(args->close_fd)s. of lose_fd)red_stream.XXXXXXect the number of threads.reads.am.XXXXXXXaptured_stream.XXXXXXected ubstring of se_fd)(args->close_fd)not XXXXXstream.XXXXXXL"ubstring of ir("e number of threads.se(args->close_fd)ect the number of threads.string of e number of threads.rXiled: = -1lose_fd)lose_fd)/tmp/captured_stream.XXXXXX d L"ng of -byte object <_fd)L"ubstring of yte object <led: threads.in lose_fd)ubstring of ) in 
reads.se(args->close_fd)s. of threads.s.-1 <hdir("yte object <ct <object <er of threads.se(args->close_fd)XXXXXX mber of threads.d: eption with description "red_stream.XXXXXX: ring of aptured_stream.XXXXXX_fd_ == -1reads.ailed: Xred_stream.XXXXXXmp/captured_stream.XXXXXXlose(args->close_fd) /captured_stream.XXXXXX= -1
 detect the number of threads.: ected ected am.XXXXXX-byte object <etect the number of threads.s->close_fd) < <) in /captured_stream.XXXXXXmber of threads. of se_fd)(args->close_fd)am.XXXXXXs: threads.ailed: _fd_ == -1d  failed: ..) in se(args->close_fd): the number of threads.eption with description "/tmp/captured_stream.XXXXXXt d)s.rgs->close_fd)ted  exception with description "(args->close_fd)not in er of threads.lose_fd) of ads.reads.led: XXXXX/tmp/captured_stream.XXXXXXe object <ir("eption with description "ected ected  failed: /captured_stream.XXXXXXd)ir("XXXXXxecve(L" ...) in : rgs->close_fd)yte object < e number of threads.("etect the number of threads.reads.) failed: s.hdir("ng of  failed: threads.) in d XXXXXXXXXX>close_fd)aptured_stream.XXXXXX= -1lose(args->close_fd)mp/captured_stream.XXXXXXlose(args->close_fd) <) in hdir(" is: lose_fd)>close_fd)ads.. ) failed: ed: xecve(ad_fd_ == -1aptured_stream.XXXXXXled: /captured_stream.XXXXXXyte object <rnot ed: led: reads.e object <-byte object <the number of threads.d_ == -1ads.s:  /captured_stream.XXXXXXxecve(ir("(args->close_fd)se_fd)reads.read_fd_ == -1 ...) in  of etect the number of threads.... string of d_ == -1s.d_stream.XXXXXX
ubstring of er of threads.ect the number of threads./captured_stream.XXXXXXs.d_ == -1..) in  exception with description "ir(" exception with description "d: d t the number of threads.ad_fd_ == -1d reads.ng of cve(xecve( ) failed: failed: s.XXXXXs.eption with description " d reads.lose(args->close_fd)ir("..) in ads.ng of hdir("ect the number of threads.ject <d: the number of threads.cve(ch is:  exception with description "s. (args->close_fd)d_ == -1mp/captured_stream.XXXXXX("threads.cve(number of threads.. e object <..) in ++ exception with description "XXXXX d tured_stream.XXXXXX= -1e object <ect the number of threads.ream.XXXXXXd_ == -1 ...) in XXXetected ng of xecve(xecve(se_fd)ailed: s.red_stream.XXXXXXxecve(iled: ads.d f threads.Xtured_stream.XXXXXX  of ect the number of threads.= -1. rgs->close_fd)t the number of threads. is: e object <ed: eption with description "ed: ads.reads.Xse(args->close_fd)... xecve(ted 
se(args->close_fd)stream.XXXXXX>close_fd)stream.XXXXXXhdir(") failed: read_fd_ == -1: rgs->close_fd)etect the number of threads.object <reads.mp/captured_stream.XXXXXX: ch is: d) Xiled: ubstring of (". hich is: ("in -1 t the number of threads. exception with description "ads.e(in etect the number of threads.iled: threads.in number of threads.ream.XXXXXXer of threads.r) failed: -byte object <hdir("string of reads.("eption with description " <er of threads.rthreads.reads.ream.XXXXXXthreads.t xception with description " is: ram.XXXXXX>close_fd)_fd)etect the number of threads.e(_fd_ == -1t r . reads.reads.threads.ring of ) failed: d ct <ring of read_fd_ == -1s->close_fd)read_fd_ == -1/captured_stream.XXXXXX..) in cve(am.XXXXXX er of threads.threads.ect the number of threads.f stream.XXXXXX detect the number of threads.not lose_fd)eption with description "hich is: d: ) failed: 
 of _fd)ir("ed: mp/captured_stream.XXXXXXthreads.d: d ng of .XXXXXX exception with description "X substring of the number of threads.se_fd)-byte object < failed: ... d_stream.XXXXXXse(args->close_fd)_fd)(args->close_fd). .XXXXXXetect the number of threads. detect the number of threads.ads.ir("se_fd)d ..) in reads.= -1ring of stream.XXXXXX_fd_ == -1rgs->close_fd)not (args->close_fd)xception with description " failed: X(" is: not e number of threads.reads.... d: se_fd)reads.rXXXXXstream.XXXXXX02X exception with description "d_stream.XXXXXXetected e number of threads.d XXXXXected led: lose(args->close_fd)_fd)/tmp/captured_stream.XXXXXX == -1s->close_fd) ...) in reads.L"/tmp/captured_stream.XXXXXXthe number of threads.hdir(" ...) in L"mp/captured_stream.XXXXXX-1
(" substring of er of threads.. stream.XXXXXX is: ... ) in ++ exception with description " substring of ("etected -byte object <mp/captured_stream.XXXXXXobject <t the number of threads.reads.d etected r02X("se_fd)ected  of ect the number of threads.02Xthe number of threads.object <d_ == -1 is: se_fd)("hich is: -byte object < 
ads.ads.02Xetect the number of threads.02X_fd)-byte object <L"++ exception with description "X led: ring of : ) in rgs->close_fd) is: read_fd_ == -1ch is: rgs->close_fd)hich is: etected ring of eption with description "ct <Xd_ == -1 failed: d)= -1L"ng of /tmp/captured_stream.XXXXXX_fd_ == -1ir("number of threads.ads.: f threads.d_ == -1the number of threads.e object <ng of d)e( of  substring of lose_fd)-byte object <f d Xiled: = -1s: ject <XXXd_ == -1/tmp/captured_stream.XXXXXXected ring of XXXXXXXX. _fd)tured_stream.XXXXXX02Xthreads.ed: yte object <ect the number of threads.(args->close_fd)tured_stream.XXXXXX_fd_ == -1ailed: t . >close_fd)mp/captured_stream.XXXXXX of threads.s->close_fd):  == -1: Xd_ == -1  == -1hdir("lose_fd)>close_fd)++ exception with description ") in d)threads.ream.XXXXXX ..) in ... failed: >close_fd).XXXXXX ...) in failed: ected  ir("d tured_stream.XXXXXXs->close_fd)string of mp/captured_stream.XXXXXXected  failed: xecve(d_ == -1etected the number of threads.e( is: the number of threads.ads.ailed: ch is:  of threads.XXXs.ad_fd_ == -1yte object <d_stream.XXXXXX02X ...) in ected read_fd_ == -1ch is: the number of threads.) failed: ..) in  substring of ) in ad_fd_ == -1ads.t the number of threads.("_fd)ailed: ) failed: aptured_stream.XXXXXXs._fd_ == -1ng of iled: s.s.ch is: failed: yte object <failed: ect the number of threads.. /tmp/captured_stream.XXXXXXthreads.etected 
f ) in XXX substring of d_ == -1. in ring of tured_stream.XXXXXX(args->close_fd)iled: cve( ++ exception with description "rXXXject < == -1. . d)... etected ... lose(args->close_fd)xecve(XXXXXd)d_stream.XXXXXXyte object < failed: r is: etect the number of threads. == -1lose_fd)ct < == -1(args->close_fd)ct <r: XXXt the number of threads.d_ == -1 of /tmp/captured_stream.XXXXXXXXXXXer of threads.ubstring of d_stream.XXXXXXthe number of threads.not failed: s.ect the number of threads. s.XXXXXng of d  ...) in ..) in  
02Xthreads.) failed: X. ads.. ads.s.rgs->close_fd)d = -1se(args->close_fd) ted mp/captured_stream.XXXXXXd_stream.XXXXXXhich is: /captured_stream.XXXXXXad_fd_ == -1 X xecve(("ad_fd_ == -1 detect the number of threads. XXXXXng of not  t the number of threads./captured_stream.XXXXXXream.XXXXXXd_stream.XXXXXX++ exception with description "led: ect the number of threads. XXXed: d_stream.XXXXXXir("rgs->close_fd)failed: hdir("stream.XXXXXXaptured_stream.XXXXXXubstring of XXXXX of threads.reads.ubstring of (args->close_fd)object <ect the number of threads.number of threads.ubstring of ject <e number of threads.X ...) in ads.ted hich is:  substring of not  substring of s.d)(" detect the number of threads.the number of threads.eption with description ">close_fd)_fd_ == -1rxecve(ads.) failed:  == -1 of threads.read_fd_ == -1) failed: not not  of ads._fd)ect the number of threads.... ct <ubstring of ir("se_fd)_fd_ == -1 failed: ted  of ad_fd_ == -1tured_stream.XXXXXXd mber of threads.Xmber of threads. <d) t the number of threads.ailed: .XXXXXXd_ == -1tured_stream.XXXXXX <yte object <e number of threads.red_stream.XXXXXX-byte object <se_fd)d_stream.XXXXXXstring of stream.XXXXXXject <ch is:  ...) in  substring of 02Xream.XXXXXXs.reads...) in  of threads.s.led: ubstring of am.XXXXXXobject <ubstring of led: . red_stream.XXXXXXse(args->close_fd)ch is: -1s. substring of : /tmp/captured_stream.XXXXXXd_ == -1ailed: yte object <s.cve(threads.XXXXxecve(f L"-byte object < etect the number of threads.ir("(args->close_fd)in ted . lose_fd)L" failed: ubstring of reads. <aptured_stream.XXXXXXe number of threads.L"ads.xecve(rgs->close_fd)stream.XXXXXXd: number of threads.number of threads. s.d string of (".XXXXXXXmp/captured_stream.XXXXXXe(X. lose_fd)X-1e number of threads.ad_fd_ == -1lose_fd)XXXailed: e object <f d)_fd_ == -1>close_fd)in XXXs.se(args->close_fd)reads./captured_stream.XXXXXX++ exception with description "etected reads.
rin object <ads.d_ == -1t  detect the number of threads.ject < detect the number of threads.f threads.in ected tured_stream.XXXXXX ...) in Xch is: ject <
ads.ad_fd_ == -1 of threads.reads.... the number of threads.ubstring of  < failed: Xd er of threads.ject <hich is: threads.Xstring of d_stream.XXXXXX: -1se(args->close_fd)
string of ..) in ted iled: t the number of threads.ng of -byte object < of threads.failed: string of aptured_stream.XXXXXX) failed: mber of threads.threads.e(xecve(++ exception with description "tured_stream.XXXXXXd) led:  of threads.s.yte object <se(args->close_fd)aptured_stream.XXXXXXse(args->close_fd)d ads.d)led: f threads.ch is: ads.02X-1rgs->close_fd) of threads.d_stream.XXXXXX= -1ailed: XXXthreads.xecve(= -1e object <) failed: tured_stream.XXXXXXlose(args->close_fd)ad_fd_ == -1robject <rgs->close_fd)>close_fd):  detect the number of threads.ject <the number of threads.hich is: (args->close_fd)threads.02Xstring of /tmp/captured_stream.XXXXXXthreads.ted = -1ect the number of threads.aptured_stream.XXXXXX of threads.s->close_fd)the number of threads.f threads.e(X(args->close_fd)ted 
 ...) in  ...) in etected ("er of threads.s->close_fd)ads.iled: = -1cve(ir("02X  == -1stream.XXXXXXyte object < <L"hich is: .XXXXXXe(d_ == -1lose(args->close_fd)t failed: /captured_stream.XXXXXXxception with description ".XXXXXXthreads.XXXXXthe number of threads.failed: ads.e object < xception with description "threads.ring of aptured_stream.XXXXXXhich is: 
tured_stream.XXXXXXeption with description "tured_stream.XXXXXXthreads.hich is: f _fd_ == -1lose_fd).  is: in reads.s: aptured_stream.XXXXXXct <failed: r is: ect the number of threads.er of threads.retected etected d_stream.XXXXXXin -byte object <++ exception with description "stream.XXXXXXch is:  == -1ir("stream.XXXXXXd_stream.XXXXXX... xception with description "etected Xd_ == -1 s: X failed: hdir("d)-1ream.XXXXXXject <hich is: ad_fd_ == -1cve(the number of threads.aptured_stream.XXXXXXf threads.s: reads.d_ == -1ring of tured_stream.XXXXXXlose(args->close_fd)d_ == -1 <(args->close_fd)etect the number of threads._fd)ct <... se(args->close_fd)
 Xreads.stream.XXXXXXd: ring of -1ch is: s.Xreads.  == -1 of threads.d) failed: XXXir("  hdir(" failed:  of threads.e object <ected ("etect the number of threads.ir("e object <d_ == -1... rir("ch is:  substring of er of threads.
e(
ream.XXXXXX) failed: ++ exception with description "..) in failed: /tmp/captured_stream.XXXXXXXd)-byte object <stream.XXXXXXhich is:  reads.-1>close_fd)_fd)read_fd_ == -1rgs->close_fd) substring of d)ject <-1
threads.ring of s.tured_stream.XXXXXXreads.d_ == -1reads. detect the number of threads.threads. detect the number of threads.rgs->close_fd): ubstring of reads.>close_fd)am.XXXXXXr.XXXXXX.XXXXXXd_ == -1 exception with description " ad_fd_ == -1XXX(args->close_fd) == -1ir("ct <-byte object <XXXXXred_stream.XXXXXXled: ++ exception with description "d_ == -1  <ected .XXXXXX..) in etect the number of threads.d_ == -1hdir(" <(args->close_fd)t the number of threads.threads.s->close_fd)mber of threads.... X= -1etect the number of threads.. d: ed: X is: failed: hdir("s._fd)XXX... ubstring of XXX-byte object <XXXetected eption with description "Xlose(args->close_fd)L"ect the number of threads.yte object <..) in ed: ) in  substring of red_stream.XXXXXX/tmp/captured_stream.XXXXXXect the number of threads.threads.etected hdir("the number of threads.Xmber of threads.object <d_stream.XXXXXXetect the number of threads.ted etect the number of threads.d iled: ream.XXXXXX: -1 substring of yte object <Xmp/captured_stream.XXXXXXthreads.s->close_fd)) failed: ads.ect the number of threads._fd)d: ected ted se(args->close_fd)e(led: /captured_stream.XXXXXXmp/captured_stream.XXXXXXse_fd)read_fd_ == -1ailed: ++ exception with description " detect the number of threads.stream.XXXXXXf -byte object < substring of tured_stream.XXXXXX= -1) failed:  X of threads.rgs->close_fd)string of XXXobject <f threads.f threads.e number of threads.object <
er of threads.stream.XXXXXX of threads..XXXXXXmber of threads.  of threads.led: XXXXXs.threads. is: ng of t the number of threads.threads.f threads.object <mber of threads.cve(s->close_fd)ads.= -1hdir("= -1etect the number of threads.threads.lose_fd)= -1lose_fd)s:  substring of t  exception with description "(args->close_fd)r-1not iled: e(e number of threads.failed:  of -1_fd_ == -1) in se(args->close_fd)t the number of threads. exception with description "etect the number of threads.aptured_stream.XXXXXXs: ++ exception with description "string of ailed: ch is: aptured_stream.XXXXXX ...) in read_fd_ == -1e number of threads.d_stream.XXXXXXch is: t the number of threads.lose(args->close_fd)tured_stream.XXXXXX.XXXXXX-byte object <se(args->close_fd) detect the number of threads.-byte object <... Xch is: string of XXXXXthreads. == -1-byte object <ed: 
ailed: failed: iled: not cve(ubstring of ad_fd_ == -1hdir("tured_stream.XXXXXXir(". t e number of threads._fd_ == -1cve(.XXXXXXads.d ) failed: lose_fd)L"lose_fd)ted L"d ) failed: (args->close_fd)XXX>close_fd)L" detect the number of threads.ected d_ == -1: ubstring of stream.XXXXXX <ch is: er of threads.ailed: e number of threads.ct <ct <string of  exception with description "s.se(args->close_fd) detect the number of threads.ted failed: number of threads.threads.ads.d: .  is:  is:  s.ubstring of not d_ == -1ads.-1t the number of threads.d)lose_fd)Xobject <ads...) in d in ) in  e number of threads.  == -1ct <lose_fd)the number of threads./captured_stream.XXXXXXads.e(mber of threads.se_fd)s->close_fd)ch is: number of threads.reads.
failed: ) failed: am.XXXXXXred_stream.XXXXXXreption with description ".XXXXXX exception with description "ads. _fd)hdir("rgs->close_fd)etect the number of threads.Xct <ubstring of tured_stream.XXXXXX_fd_ == -1reads.tured_stream.XXXXXXir("xception with description "xception with description "read_fd_ == -1 of ir("in _fd_ == -1string of rs.failed: led: xception with description "++ exception with description ".XXXXXX_fd)ring of ch is: rgs->close_fd)... XXX02XX ..) in d_ == -1 reads.d_ == -1++ exception with description "mp/captured_stream.XXXXXXream.XXXXXX. ected ect the number of threads.:  red_stream.XXXXXX..) in s. substring of f hich is: ryte object <reads.ir("t ads.ected /captured_stream.XXXXXXed: f Xrgs->close_fd)s: e(lose(args->close_fd)L"ng of not  detect the number of threads.ject <ailed: the number of threads.f threads.led: ch is: string of stream.XXXXXXd)ed: .XXXXXX..) in ject <the number of threads. of ... . Xxecve(XXX-1-1s.s:  substring of ng of f threads. detect the number of threads. mber of threads.in xception with description ") in . . tured_stream.XXXXXXled: object <: e(/captured_stream.XXXXXXf threads.t the number of threads.f threads.t the number of threads.d yte object <... threads.eption with description "_fd_ == -1am.XXXXXXfailed: ng of rgs->close_fd) is: e object <s. <the number of threads.tured_stream.XXXXXXmp/captured_stream.XXXXXX is: lose_fd) is: cve(etected  exception with description "t stream.XXXXXXrgs->close_fd) <failed: ected rstring of xecve(ected .XXXXXXxecve(stream.XXXXXX is: ng of se(args->close_fd)s.xception with description ".XXXXXX02X) in mber of threads.the number of threads.) failed: d hich is: 02Xch is: f not f threads.= -1aptured_stream.XXXXXX= -1not .XXXXXXads. of ir("rch is: s->close_fd)ng of lose_fd)_fd_ == -1 <... t  is:  of threads.led: s.r_fd_ == -1s: se_fd)(args->close_fd)ir(": stream.XXXXXXs: d: mp/captured_stream.XXXXXX.XXXXXX: iled: (args->close_fd)se_fd)number of threads.s->close_fd)ng of _fd) of d -byte object </tmp/captured_stream.XXXXXXX == -1ads.. ... string of t the number of threads.object <threads.ad_fd_ == -1 exception with description "++ exception with description "X == -1-byte object < == -1ream.XXXXXXxecve(s->close_fd)ads.cve(etected hich is: reads.iled: . yte object <se_fd)XXXXXxception with description "eption with description "d_stream.XXXXXXxecve(02X..) in d .XXXXXXXXXXXs: ject <
 xecve(etect the number of threads.d: string of string of in  == -1 detect the number of threads.cve(led:  ubstring of f threads.xception with description "the number of threads.string of ted -1 <reads.xecve( substring of lose(args->close_fd)L"t the number of threads.threads.>close_fd)reads. of threads.) failed: ream.XXXXXXstream.XXXXXXrled: ) failed: ct <...  ...) in ad_fd_ == -1.XXXXXX <lose_fd)d_ == -1XXXXXer of threads.red_stream.XXXXXXthreads.d)led: mp/captured_stream.XXXXXXthreads.ad_fd_ == -1X substring of string of object <d_stream.XXXXXXiled: ) in in cve( exception with description "_fd)iled:  detect the number of threads. substring of .XXXXXX_fd)ir("er of threads.ted t >close_fd)-byte object < ...) in s. == -1aptured_stream.XXXXXXstream.XXXXXXlose_fd)eption with description "-byte object <s.ject <in re(Xd)... xecve(e number of threads.d_stream.XXXXXXXng of ++ exception with description ":  e(ch is: am.XXXXXXailed: se_fd)  ted in threads.stream.XXXXXX_fd_ == -1ed: (" is: 02X 
 detect the number of threads.-1er of threads.iled: object <ject <>close_fd)led:  is: s: s.led: ject <ailed: f threads.lose_fd)e object < exception with description " of threads.f threads.ect the number of threads.am.XXXXXXetected ted d: ailed: in -byte object <read_fd_ == -1 exception with description ": f led: mp/captured_stream.XXXXXXXXX/captured_stream.XXXXXXd: ++ exception with description "= -1object <. ...  of threads.
cve(XXXtured_stream.XXXXXXlose_fd)eption with description "reads.ream.XXXXXXthreads.d in ads.ads.("rgs->close_fd)XXXXXX("(args->close_fd)X exception with description "_fd)d)number of threads.lose(args->close_fd)-byte object <ring of ream.XXXXXXected d f reads.er of threads.string of -1object <xecve(lose_fd)ad_fd_ == -1XXXfailed: ted red_stream.XXXXXX..) in d:  ...) in XXXXXd_stream.XXXXXXch is: se_fd)++ exception with description "ads.= -1-1etect the number of threads.ng of XXXXXe number of threads.d_stream.XXXXXXt the number of threads.number of threads.iled:  of threads.iled: ++ exception with description " ...) in led:   substring of reads.ed: : d)("string of mp/captured_stream.XXXXXXs.hdir("yte object <ad_fd_ == -1_fd) exception with description "t the number of threads. failed: xecve(hdir(" ng of ted eption with description "the number of threads.ad_fd_ == -1er of threads. failed: number of threads.yte object <yte object <02X++ exception with description " <XXX f s:  yte object < am.XXXXXXred_stream.XXXXXXhich is: XXXXXubstring of hich is:  failed: reads.e number of threads. of threads.ect the number of threads.>close_fd)e object <stream.XXXXXX of threads.++ exception with description "tured_stream.XXXXXX detect the number of threads.Xaptured_stream.XXXXXXhdir("mber of threads.ir("_fd_ == -1d: X/tmp/captured_stream.XXXXXX.XXXXXXXlose(args->close_fd)) failed: ir(" of threads.(args->close_fd)e(s.f am.XXXXXXd:  of : XXXd)aptured_stream.XXXXXXd_ == -1not ailed:  of threads.(args->close_fd) hich is: lose_fd)hich is:  ads.s: 02X(args->close_fd)reads.in s.ad_fd_ == -1se(args->close_fd)lose(args->close_fd)_fd_ == -1rgs->close_fd) is: number of threads.reads.++ exception with description "ted d)in  ...) in XXXam.XXXXXX: tured_stream.XXXXXXled: ed: mber of threads. <ring of ir(") failed: ir("etected led: d)L"threads.ct <mp/captured_stream.XXXXXXs.threads.-1ted failed: xception with description "hich is: reads..  reads.ir("e(/tmp/captured_stream.XXXXXX. ) failed:  not /tmp/captured_stream.XXXXXX) in rng of  == -1reads.e number of threads.not mber of threads.lose(args->close_fd)hdir("lose(args->close_fd)the number of threads.ch is: _fd)hich is: in  the number of threads.d_ == -1t the number of threads.ch is: r-byte object <Xed: yte object <ream.XXXXXXnot (" ...) in XXXXXnot >close_fd)(args->close_fd).XXXXXX-1(") in in  ct <rgs->close_fd) is: lose_fd)/captured_stream.XXXXXXread_fd_ == -1) in ream.XXXXXXnumber of threads.led: ++ exception with description " substring of XXXXXads.threads.ir("xecve(ads.ch is: = -1: am.XXXXXXream.XXXXXXads. substring of  <reads.ir("se(args->close_fd)L">close_fd)se(args->close_fd)threads.++ exception with description "etect the number of threads.ch is: X) failed:  XXXXXmp/captured_stream.XXXXXXs.reads._fd)/captured_stream.XXXXXXXch is: d: ng of . ++ exception with description "XXXXX-1threads.object <xception with description "("aptured_stream.XXXXXXthreads.red_stream.XXXXXXmp/captured_stream.XXXXXXin ed: .XXXXXXse_fd)hich is: ad_fd_ == -1read_fd_ == -1... eption with description "XXXXXxecve(f ailed: Xred_stream.XXXXXX: ads..XXXXXX...  failed: ct <reads.d: ..) in /tmp/captured_stream.XXXXXXed:  -byte object <. d: the number of threads.XXXXXream.XXXXXXnumber of threads. failed: ct <d_stream.XXXXXXubstring of red_stream.XXXXXXeption with description "rgs->close_fd)ad_fd_ == -1-byte object <aptured_stream.XXXXXXd_stream.XXXXXXcve(ailed: ct <  of er of threads._fd_ == -1e object <ads.d_ == -1f mp/captured_stream.XXXXXXin ct < /tmp/captured_stream.XXXXXXxecve( <d_stream.XXXXXXs: ct <se(args->close_fd)) in iled: _fd): red_stream.XXXXXXt hich is: 02X == -1t ected ubstring of se_fd)f threads.er of threads.L"yte object <object <e number of threads.hich is: d  etect the number of threads.e object <rream.XXXXXXrgs->close_fd) is: reads.xecve(_fd_ == -1ad_fd_ == -1threads.in ubstring of failed:  is:  -byte object <tured_stream.XXXXXXreads.read_fd_ == -1s.eption with description "
cve(red_stream.XXXXXXs.f threads.
X <.XXXXXX) in se(args->close_fd) detect the number of threads.e object <ads.ubstring of s->close_fd) substring of ubstring of the number of threads.mp/captured_stream.XXXXXXng of ubstring of L"er of threads. substring of lose_fd)threads.iled: ng of ct <(args->close_fd)e object <_fd_ == -1in se(args->close_fd)failed: ... se_fd)e number of threads.the number of threads.mp/captured_stream.XXXXXX substring of ... hich is: ted se_fd)xception with description "/captured_stream.XXXXXXubstring of . d:  <read_fd_ == -1.XXXXXXrgs->close_fd)lose_fd)xecve(the number of threads.ir("mber of threads. exception with description "t lose_fd)ed: t  of threads.in eption with description "d: the number of threads.-1... ubstring of 02Xads. ..) in  failed: eption with description "cve(not ad_fd_ == -1e object </tmp/captured_stream.XXXXXX of etect the number of threads.am.XXXXXXf  detect the number of threads.xecve(red_stream.XXXXXXd:  of f  detect the number of threads.++ exception with description "("/captured_stream.XXXXXX++ exception with description "hich is:  detect the number of threads.lose_fd)iled: the number of threads.f not /captured_stream.XXXXXX in d /tmp/captured_stream.XXXXXXstream.XXXXXXin (args->close_fd)string of ads.ubstring of s.threads.ted -byte object </tmp/captured_stream.XXXXXXam.XXXXXXxception with description "t the number of threads..XXXXXXf  .XXXXXXthe number of threads.d_stream.XXXXXXubstring of  ject <e( .XXXXXX/captured_stream.XXXXXXXhdir(">close_fd)L"d e object <red_stream.XXXXXX.XXXXXX < reads.d)hich is: XXXXXaptured_stream.XXXXXXt the number of threads.s.ring of ++ exception with description "object <... ads.-1in  ct <e( ) in reads.object <iled: f tured_stream.XXXXXXd)lose_fd)number of threads.etect the number of threads.ailed: .XXXXXXxecve(e(f object <d ) failed: s->close_fd)yte object <f threads.mp/captured_stream.XXXXXXads._fd)read_fd_ == -1f threads.rgs->close_fd)t the number of threads.) in f threads.hich is: f threads.ted aptured_stream.XXXXXX... threads. mp/captured_stream.XXXXXXads.
>close_fd)..) in er of threads.stream.XXXXXXxecve(/tmp/captured_stream.XXXXXXd ected .  of ... /captured_stream.XXXXXXch is:  failed: _fd_ == -1xception with description "_fd)f = -1ir(" == -1 of threads.  ..) in >close_fd) failed: etect the number of threads.
not  == -1reads.d_stream.XXXXXX02Xmp/captured_stream.XXXXXXs: ct < of threads. is: ir("aptured_stream.XXXXXXeption with description " detect the number of threads. ream.XXXXXXam.XXXXXXlose(args->close_fd) detect the number of threads.f = -1ream.XXXXXXlose(args->close_fd)ads.red_stream.XXXXXX is:  exception with description "ir("er of threads.in read_fd_ == -1Xetect the number of threads.f threads. tured_stream.XXXXXX. d)ads.02Xer of threads.lose(args->close_fd)ct <) in ream.XXXXXX02X. yte object <-byte object <ct <lose(args->close_fd)) in the number of threads.rgs->close_fd)d d_ == -1..) in ch is:  substring of e(. >close_fd)aptured_stream.XXXXXXfailed: ject <tured_stream.XXXXXXject < is: red_stream.XXXXXX detect the number of threads.ct <++ exception with description " <
iled: ject <XXXXXse(args->close_fd)
f red_stream.XXXXXXd: led:  of threads.ailed: mp/captured_stream.XXXXXXrgs->close_fd)Xtured_stream.XXXXXX02X. rgs->close_fd)hich is: in threads.ream.XXXXXXs->close_fd) is: XXXXXXlose(args->close_fd)s.
stream.XXXXXX == -1hich is: er of threads.(") in er of threads.etect the number of threads.ch is: hdir("failed: X...  is: mber of threads.(args->close_fd)stream.XXXXXX>close_fd)lose(args->close_fd)(args->close_fd) -byte object </captured_stream.XXXXXXXXXXXobject <>close_fd)in ubstring of am.XXXXXX ...) in /captured_stream.XXXXXXring of xception with description "X("e object <_fd)ch is: XXXfailed: XXX("d ... ad_fd_ == -1string of object <ct <>close_fd)threads.e object <reads.ring of threads.reads.read_fd_ == -1rgs->close_fd)ream.XXXXXXhdir("xception with description "ubstring of L"ect the number of threads.t the number of threads. ...) in ject <lose_fd)02Xhich is: ads._fd)) in e object <ad_fd_ == -1ring of ir(") failed: aptured_stream.XXXXXXhdir("rL"e number of threads.d_stream.XXXXXXXnumber of threads.object <not d_stream.XXXXXX("("xecve(d)++ exception with description "Xer of threads.... XXX  substring of ailed: the number of threads.s->close_fd)lose(args->close_fd)ubstring of iled: -byte object <threads.d)/captured_stream.XXXXXXeption with description "stream.XXXXXXailed: red_stream.XXXXXXch is: X++ exception with description "s->close_fd)d)er of threads. detect the number of threads. of L"ject <Xhdir("ads.iled: ad_fd_ == -1/tmp/captured_stream.XXXXXXd ch is: 
-1  <ubstring of s: ected rgs->close_fd)ected not string of red_stream.XXXXXXyte object <er of threads.t -1d rmber of threads.yte object <etect the number of threads.string of se_fd)tured_stream.XXXXXX < string of read_fd_ == -1 of threads.ad_fd_ == -1eption with description ") in s.Xe object <read_fd_ == -1-1ailed: d)..) in  is: .XXXXXXnumber of threads.XXXs->close_fd)ct <tured_stream.XXXXXX) in cve(: er of threads.number of threads.etected _fd_ == -1) in  == -1string of xecve(t _fd_ == -1ads.hich is: e object <L"reads.: ad_fd_ == -1xecve(L" of threads.("s->close_fd)rd s: etect the number of threads.XXX ch is: etected ad_fd_ == -1in ads.the number of threads.02Xe number of threads. _fd_ == -1ct <= -1 led:  failed:  == -1yte object <threads.: xecve(("cve(led: -1eption with description "
ect the number of threads.s._fd)d)e number of threads._fd_ == -1 is:  of threads. exception with description "yte object <... ted ream.XXXXXXnot ubstring of reads.s:  ...) in aptured_stream.XXXXXXhich is: ++ exception with description "iled: rgs->close_fd)s.hdir("string of lose(args->close_fd)d_stream.XXXXXXct <02Xream.XXXXXXf  == -1xecve(ed: threads.XXXXXad_fd_ == -1XXXected  exception with description "(args->close_fd)s->close_fd)>close_fd)reads.. cve(ir("d_stream.XXXXXXhdir("ir("= -1 ...) in ..) in  <e object <e number of threads.s._fd_ == -1t the number of threads./tmp/captured_stream.XXXXXXt the number of threads. <) in  == -1XXXf /captured_stream.XXXXXXlose_fd)mber of threads.xecve(r/captured_stream.XXXXXXlose(args->close_fd)am.XXXXXXthreads.ads.) in  is: f threads.= -1ected hich is:  of threads.ted ct <02Xubstring of ream.XXXXXX_fd_ == -1 exception with description "number of threads.am.XXXXXXL">close_fd)the number of threads.er of threads.ads.tured_stream.XXXXXXse(args->close_fd)reads. mp/captured_stream.XXXXXX: ted s->close_fd) detect the number of threads.(" detect the number of threads.ed: ..) in failed: ... s.iled: reads.etected d_ == -1 == -1X..) in ad_fd_ == -1d_stream.XXXXXXxception with description "d:  exception with description " read_fd_ == -1Xread_fd_ == -1 ...) in threads.: s->close_fd) detect the number of threads.XXXXX <(args->close_fd) mp/captured_stream.XXXXXXhdir("tured_stream.XXXXXX of threads.ject <s.) failed: f threads._fd)reads.xception with description "d: etected XX:  ...) in -byte object <am.XXXXXXse(args->close_fd)d)ream.XXXXXX of xecve(er of threads.ads._fd_ == -1s.cve(f xception with description "ubstring of ct <t the number of threads. of e(ted rgs->close_fd) se(args->close_fd) ...) in -1reads.not threads.string of _fd_ == -1number of threads./tmp/captured_stream.XXXXXXam.XXXXXXted  of -byte object < == -1 < substring of in d: er of threads.s...) in xecve(ed: mber of threads.eption with description "_fd)e number of threads.lose(args->close_fd)f d /captured_stream.XXXXXX failed: 02Xlose(args->close_fd)se_fd)se(args->close_fd)reads.aptured_stream.XXXXXXXXXread_fd_ == -1 detect the number of threads.... ject < ct <d)reads. substring of ring of ubstring of  substring of Xstring of cve( of (args->close_fd)tured_stream.XXXXXX_fd)ring of failed: >close_fd)f threads.reads.d_stream.XXXXXX... ubstring of yte object < ...) in s->close_fd)stream.XXXXXXmber of threads.tured_stream.XXXXXX substring of e object <hich is: er of threads.lose(args->close_fd)ubstring of  ch is: etected in hdir("e number of threads. detect the number of threads.yte object <-1d)t the number of threads.am.XXXXXXd: er of threads.) failed: : cve(reads. detect the number of threads. ted d)..) in ch is: cve(number of threads.e object <reads.e object <s->close_fd)yte object <rgs->close_fd)xception with description "object </captured_stream.XXXXXXL"ect the number of threads. exception with description "ads.e(hdir(" substring of L"f threads.ring of t cve(number of threads.d)X. e object <rgs->close_fd)e object <led: s: -1XXXream.XXXXXX substring of ) in read_fd_ == -1ect the number of threads.d_stream.XXXXXX-1number of threads.. Xyte object <_fd)s.lose(args->close_fd)X= -1ads.r-byte object <ject <d_stream.XXXXXX>close_fd)_fd_ == -1eption with description " of XXXd)ring of etect the number of threads.hich is: reads.-byte object <e number of threads./captured_stream.XXXXXXse(args->close_fd)red_stream.XXXXXX_fd_ == -1ubstring of stream.XXXXXX
reads.02Xthreads.) in ir("t the number of threads.f ailed: threads.xception with description " the number of threads.er of threads.ad_fd_ == -1ted yte object <t s.ed: s.xecve(am.XXXXXXmber of threads.ads. <threads._fd_ == -1threads.ected d mp/captured_stream.XXXXXXad_fd_ == -1... ) in ng of ailed: number of threads.-1number of threads.d: d etected  of threads.ubstring of ad_fd_ == -1s. ng of 02X of ected  exception with description "ed: s.ject <se(args->close_fd)red_stream.XXXXXXd >close_fd)reads. aptured_stream.XXXXXXf s.ir("d_ == -1d in .XXXXXXd)...  L">close_fd)_fd_ == -1s: e number of threads.ected d  exception with description "cve( <. xception with description "xception with description " of threads. detect the number of threads.02Xreads.= -1("ject < == -1ir("t  of threads.ch is: cve(Xtured_stream.XXXXXXmp/captured_stream.XXXXXXxecve(in ads._fd_ == -1>close_fd) substring of _fd)d >close_fd)tured_stream.XXXXXXrgs->close_fd)t the number of threads.d) failed:  ...) in am.XXXXXXt rgs->close_fd)etected ream.XXXXXXmber of threads.ubstring of xecve(ir("etect the number of threads.s: d_stream.XXXXXXeption with description ") in ir(">close_fd)reads.ect the number of threads.number of threads.mp/captured_stream.XXXXXX02Xng of t the number of threads.string of 02Xring of iled: red_stream.XXXXXX_fd_ == -1ubstring of e number of threads.rstring of s: ted string of ... Xstring of d d read_fd_ == -1hich is: = -1 d)++ exception with description "ir("yte object < is: etected  <xecve(er of threads.e number of threads.the number of threads.threads.rgs->close_fd)ected  XXXXXread_fd_ == -1Xer of threads.. e(..) in  ...) in failed: mp/captured_stream.XXXXXXs. reads.
 of threads.rlose(args->close_fd)++ exception with description "d: ++ exception with description "lose(args->close_fd)L"ct <
 exception with description "reads.lose(args->close_fd)
...  object <. aptured_stream.XXXXXX) in in ) in X is: mber of threads.ct <reads. is: s.mp/captured_stream.XXXXXXreads./captured_stream.XXXXXXected lose(args->close_fd)_fd_ == -1read_fd_ == -1ected object <lose(args->close_fd)ring of : am.XXXXXXream.XXXXXX) failed:  object <d_ == -1d_ == -1xecve(etected f s: /tmp/captured_stream.XXXXXXread_fd_ == -1ir("yte object <s.not etect the number of threads.++ exception with description "xception with description " failed: : ct <d yte object < <number of threads.ect the number of threads.s: . hich is: yte object <..) in ir("ject <etected ) failed: e object < <rgs->close_fd)s..XXXXXXring of failed: 02Xreads.s->close_fd)ads.ad_fd_ == -1f tured_stream.XXXXXXted etected  == -1hdir(" ...) in : se(args->close_fd)se_fd)("Xject <se_fd)02Xread_fd_ == -1hich is: number of threads._fd_ == -1ailed: f red_stream.XXXXXXetected e object <stream.XXXXXX(args->close_fd)Xobject <threads.ream.XXXXXXs.hich is: t the number of threads.se_fd)string of e number of threads.Xhich is: tured_stream.XXXXXX ...) in ubstring of ..) in  == -1..) in ad_fd_ == -1etected  of  am.XXXXXXe(reads.string of f X/tmp/captured_stream.XXXXXXread_fd_ == -1ected  detect the number of threads.not d: hdir("..) in xecve(>close_fd)02X detect the number of threads.ads.se_fd) is: eption with description "ch is: threads.mber of threads.ring of string of ++ exception with description "led: lose(args->close_fd)ected hich is: /captured_stream.XXXXXX++ exception with description ") in yte object <X... se(args->close_fd)ng of e(in d_stream.XXXXXX detect the number of threads.ct <se(args->close_fd)yte object <ch is: rs: s.t ads.ailed: hich is: d: f mber of threads.= -1r. eption with description "d:  of threads.aptured_stream.XXXXXXmber of threads..XXXXXXd_ == -1(args->close_fd)
ected s->close_fd)ng of ads.... XXX) in s->close_fd)e number of threads.the number of threads.f threads.etected se(args->close_fd)-1ch is: rgs->close_fd)XXX of 02XXXXXXng of mp/captured_stream.XXXXXX>close_fd)e object <object <ring of 
_fd_ == -1_fd_ == -1X>close_fd)am.XXXXXXrgs->close_fd)etect the number of threads.hdir("(args->close_fd)/tmp/captured_stream.XXXXXXeption with description "d) of threads. failed: rgs->close_fd)the number of threads.hdir("reads.not s->close_fd)-byte object <stream.XXXXXXeption with description "aptured_stream.XXXXXXyte object <= -1ch is:  substring of se(args->close_fd). e object <eption with description "aptured_stream.XXXXXXXXmp/captured_stream.XXXXXX..) in se_fd)er of threads.ir("d_ == -1object <L"ailed: lose(args->close_fd)number of threads. is:  <ubstring of  detect the number of threads.number of threads.aptured_stream.XXXXXXobject < X) failed: ct <f threads.f threads. lose(args->close_fd)ject <t the number of threads. ct <f threads.f  failed: ads.etected d_ == -1tured_stream.XXXXXXhich is: -1 failed: ct < of tured_stream.XXXXXXrgs->close_fd)led: _fd_ == -1string of ted hich is: Xng of XXXXX is: ..) in etected ubstring of lose_fd)ect the number of threads.se(args->close_fd)er of threads.aptured_stream.XXXXXX/tmp/captured_stream.XXXXXX++ exception with description "mber of threads. exception with description "threads.t the number of threads.etected e number of threads.s.XXXream.XXXXXXreads.-byte object <mp/captured_stream.XXXXXXnot reads.object <-1ailed: X("t 
 of number of threads.02Xmp/captured_stream.XXXXXX == -1ected /tmp/captured_stream.XXXXXX.XXXXXXL"t ir("led:   ...) in d_ == -1d_ == -1 <cve(d_stream.XXXXXXnumber of threads.-byte object <threads.tured_stream.XXXXXXetect the number of threads.X/tmp/captured_stream.XXXXXX ected lose(args->close_fd)rfailed:  e( is: the number of threads. the number of threads.reads..XXXXXXads.tured_stream.XXXXXXream.XXXXXXs: se_fd): xception with description " detect the number of threads.ng of ..) in XXXe( of lose_fd) d: object <02Xhich is: eption with description ".XXXXXXcve(iled: d .XXXXXX-1s./captured_stream.XXXXXX_fd)d: ect the number of threads.ct <threads.e object <ected f ject <  the number of threads.eption with description "yte object <read_fd_ == -1 ch is:  substring of lose_fd). ..) in lose_fd)d_stream.XXXXXXam.XXXXXXd iled: ed:  ...) in ring of ect the number of threads.d).XXXXXXse_fd)string of d)am.XXXXXXs.e object </captured_stream.XXXXXXf threads.read_fd_ == -1read_fd_ == -1 ...) in ject <ads.: /tmp/captured_stream.XXXXXX..) in e( detect the number of threads.-byte object <the number of threads.yte object <d)r-byte object <read_fd_ == -1not lose_fd) of threads. <tured_stream.XXXXXXXXXL"d_ == -102Xlose(args->close_fd)the number of threads.... threads.
_fd_ == -1L"ject <s->close_fd) of threads.cve(s: -1ct <e(ect the number of threads.f threads.ads.ir("= -1er of threads. ng of = -1= -1_fd_ == -1++ exception with description "aptured_stream.XXXXXXnumber of threads.led: er of threads. exception with description "L"..) in threads.in rhich is: threads.L"etected (args->close_fd)mber of threads.xception with description "eption with description "hich is: ring of _fd) substring of ads. ...) in hich is: -byte object <aptured_stream.XXXXXXcve(s. exception with description "ads.yte object <etected ubstring of ads.f threads.s.s: 
mber of threads./captured_stream.XXXXXXX..) in d:  L"etect the number of threads.xecve(d_stream.XXXXXXse(args->close_fd)= -1failed: object <d: ... aptured_stream.XXXXXXhdir("yte object <string of ad_fd_ == -1yte object < of threads.xception with description "lose(args->close_fd)d_stream.XXXXXXXXXXXthe number of threads.aptured_stream.XXXXXX substring of ng of d ... s.s->close_fd)f ..) in ads. se_fd)string of X= -1mber of threads.L"X
 tured_stream.XXXXXXaptured_stream.XXXXXXstring of ed:  tured_stream.XXXXXX: ng of yte object <string of 02Xin ) failed:  of ject <ring of mp/captured_stream.XXXXXXct <threads.e number of threads./captured_stream.XXXXXX(args->close_fd)xecve(threads.d)XXXXXer of threads.e object <..) in  <XXXstream.XXXXXXred_stream.XXXXXXted stream.XXXXXX == -1 is: X is: tured_stream.XXXXXXse(args->close_fd)ed: d)XXXer of threads.) in cve(mber of threads.ring of XXX(args->close_fd)the number of threads.threads.not ads.threads. <lose_fd)-byte object <er of threads.etected ++ exception with description "ct <Xse_fd)/captured_stream.XXXXXXXd_stream.XXXXXXobject <lose(args->close_fd)ads.("-byte object < ...) in ject <_fd)ring of etect the number of threads. is: Xailed: t  of d)++ exception with description "lose(args->close_fd)stream.XXXXXXxception with description "rgs->close_fd)ed: hdir("not (args->close_fd)f threads.s.ject <d_ == -1  failed: ) failed: ject <am.XXXXXXtured_stream.XXXXXX) in  substring of d_ == -1Xstream.XXXXXX
s: /captured_stream.XXXXXXhich is: iled: ject </captured_stream.XXXXXXread_fd_ == -1 ++ exception with description "threads. detect the number of threads. exception with description " ring of .XXXXXX is: f ++ exception with description "
hich is: XXXs.xception with description "s: threads.er of threads..XXXXXXe number of threads.XXX("d)d_ == -1iled: X++ exception with description "se(args->close_fd)e(yte object <xception with description " is: stream.XXXXXX... ..) in ad_fd_ == -1 is: etected led: ailed: ject < detect the number of threads.ads. exception with description "XXXXXs.s.yte object <tured_stream.XXXXXX mber of threads.ed: /captured_stream.XXXXXX... rgs->close_fd) of threads.led: 02Xreads.>close_fd)cve(/captured_stream.XXXXXXam.XXXXXXetect the number of threads.-1 
("lose_fd) the number of threads.d_stream.XXXXXXred_stream.XXXXXXtured_stream.XXXXXXed:  er of threads. ... d)f threads.tured_stream.XXXXXXs.failed: er of threads. failed: ..) in  substring of  /tmp/captured_stream.XXXXXXthe number of threads._fd_ == -1lose_fd)not ad_fd_ == -1/captured_stream.XXXXXX aptured_stream.XXXXXXject <X.XXXXXXnot e number of threads.ailed: Xmp/captured_stream.XXXXXXstring of  read_fd_ == -1-byte object <se_fd)iled: am.XXXXXXlose_fd)ubstring of ng of ad_fd_ == -1 of ("/captured_stream.XXXXXXad_fd_ == -1 detect the number of threads.d led: ailed: d)t the number of threads.hich is: string of s. = -1-1xception with description ") in _fd_ == -1f  == -1 detect the number of threads. ubstring of mber of threads.read_fd_ == -1 ...) in d_stream.XXXXXXreads.ject <threads._fd_ == -1ject <mber of threads.ailed: ct <reads.am.XXXXXXetect the number of threads. == -1 ch is: .XXXXXX detect the number of threads.s->close_fd)f eption with description "("s: : er of threads.number of threads.L".  failed: lose_fd)mber of threads.e object <X of lose_fd)mber of threads.s: read_fd_ == -1d)mber of threads.ected ailed: etect the number of threads. of threads.ads.reads.s...) in hdir("ject <xception with description "s->close_fd)mber of threads.ailed: ..) in threads.hich is: Xlose_fd)/tmp/captured_stream.XXXXXX of threads.ream.XXXXXX("tured_stream.XXXXXX ...) in aptured_stream.XXXXXXted r failed: ubstring of XXXXXmp/captured_stream.XXXXXXin  detect the number of threads.f threads./tmp/captured_stream.XXXXXXse(args->close_fd)etected ct < ...) in ng of f threads.eption with description "(args->close_fd)ch is: hdir(" etect the number of threads.02X
xception with description "object <ed: d: ream.XXXXXXXXXXX == -1reads.threads.yte object < _fd_ == -1cve(ad_fd_ == -1 f  of in  ...) in  L"tured_stream.XXXXXX: ected in _fd_ == -1led: /captured_stream.XXXXXXject < ...) in ) in /tmp/captured_stream.XXXXXXreads. == -1in  failed:  failed:  of threads.ubstring of .XXXXXXs: _fd) failed:  substring of  exception with description "/captured_stream.XXXXXXred_stream.XXXXXXd:  exception with description "-byte object <d_stream.XXXXXXreads. of xception with description "d_stream.XXXXXXmp/captured_stream.XXXXXX("eption with description "/tmp/captured_stream.XXXXXXted f threads...) in threads...) in -1 of threads.lose_fd)ed:  ...) in /tmp/captured_stream.XXXXXXs: d_stream.XXXXXXs.s.
>close_fd)ject <ted reads.failed: ..) in  <(args->close_fd)= -1 of threads.ring of ) in ubstring of d_ == -1the number of threads.ad_fd_ == -102Xe number of threads.er of threads.er of threads.the number of threads.mber of threads.ream.XXXXXXcve(X-byte object <ed: led: object <("ject <d)(args->close_fd)iled: the number of threads.ng of -byte object <t the number of threads.ir("in in led: reads.read_fd_ == -1++ exception with description "s: -byte object <-102Xetected object <
 is: hdir("xecve(mp/captured_stream.XXXXXX= -1eption with description "lose(args->close_fd)eption with description "s.ject < of threads.) in failed: hdir("ch is:  ...) in  failed: : ir("threads.ed: .XXXXXXected s: t yte object <the number of threads.hich is: not  == -1e number of threads.object <e object <red_stream.XXXXXXnumber of threads.) in >close_fd)rgs->close_fd)d_ == -1XXX <tured_stream.XXXXXXam.XXXXXX <. XXXXXL"am.XXXXXX ...) in . /tmp/captured_stream.XXXXXX-1f threads.e number of threads.>close_fd)..) in  failed: xception with description "ng of s:  _fd)... . ream.XXXXXX ...) in read_fd_ == -1ed: f threads.... 02Xaptured_stream.XXXXXXnot rgs->close_fd)se(args->close_fd). rgs->close_fd)/tmp/captured_stream.XXXXXXmp/captured_stream.XXXXXX= -1ct <ject < substring of rgs->close_fd)-byte object < <in eption with description "hdir("cve(
hdir("number of threads.ect the number of threads.red_stream.XXXXXXyte object < ) failed: 02Xt the number of threads.d_stream.XXXXXXe(Xlose_fd)reads.ir(" failed: Xected failed: e number of threads.se_fd)02XXXXXXcve(hdir("mp/captured_stream.XXXXXXnot the number of threads.XXXled: s->close_fd)d_stream.XXXXXX) failed: eption with description "se_fd)_fd)mber of threads._fd_ == -1ream.XXXXXX exception with description " == -1eption with description "rgs->close_fd)_fd).XXXXXXject <threads. exception with description "d: rgs->close_fd)ir("("-1e number of threads.hich is: t (args->close_fd)) in d /captured_stream.XXXXXXetected   exception with description " 
ch is: ubstring of s./captured_stream.XXXXXXads.lose(args->close_fd)_fd_ == -1se(args->close_fd)er of threads.etected ... d_stream.XXXXXXd_stream.XXXXXXeption with description "lose(args->close_fd)threads.ads.red_stream.XXXXXXL"mp/captured_stream.XXXXXXreads.e number of threads.hdir("hich is: reads.
 ...) in d). ject <eption with description " _fd)hich is: ... = -1tured_stream.XXXXXXstring of /captured_stream.XXXXXXng of Xhdir("ir("hdir("se_fd)("-byte object <f threads.d: t the number of threads.= -1-1number of threads.eption with description "
ected  == -1 detect the number of threads.t the number of threads.d)ring of  reads. of threads.reads.lose(args->close_fd)s.e(the number of threads.d)Xng of ject < ...) in threads.-1lose_fd)/tmp/captured_stream.XXXXXX= -1
XXXXXt the number of threads.d_stream.XXXXXXer of threads.02Xch is: threads.e object <-byte object <hdir("tured_stream.XXXXXXobject <..) in  substring of xecve((":  of ted ch is: ailed: etect the number of threads.ads. <ject <in e(e(in ("d_stream.XXXXXXiled: string of ring of ir("read_fd_ == -1ads.ch is:   detect the number of threads.d_ == -1se_fd)lose_fd)lose(args->close_fd): Xread_fd_ == -1ream.XXXXXX_fd_ == -1ed: s.("t the number of threads.reads.hich is:  ted se(args->close_fd)_fd) == -1 substring of ect the number of threads. failed:  == -1..) in f threads.d)XXXcve(stream.XXXXXX
) failed: red_stream.XXXXXXX/tmp/captured_stream.XXXXXXhdir("lose_fd)xecve(e number of threads.red_stream.XXXXXXted hich is: lose_fd)ch is: etected hich is: f threads. of threads.mber of threads.am.XXXXXXr < e number of threads.not ..) in  <in  of threads./tmp/captured_stream.XXXXXXX <rgs->close_fd)am.XXXXXXlose_fd)) failed: lose_fd)d: . s->close_fd)ir("cve(/captured_stream.XXXXXXd_ == -1 ...) in threads._fd_ == -1mber of threads.ng of mber of threads.s.++ exception with description "not ads.f threads.lose_fd)Xir("am.XXXXXXe object <mber of threads.rgs->close_fd)mp/captured_stream.XXXXXX detect the number of threads.ream.XXXXXX(args->close_fd)L"yte object <e object <. yte object <object </captured_stream.XXXXXXct <ch is: ected  == -1red_stream.XXXXXX exception with description ") in 02Xr
ring of reads. of threads.yte object <hich is: d: s->close_fd)d: >close_fd)ed: ect the number of threads.s.f XXXXXf threads. of cve(-1>close_fd)  substring of failed: s: ected s.lose_fd)d: d ring of reads. <ng of f threads. is:  ads.hich is: s.am.XXXXXXad_fd_ == -1 exception with description "the number of threads.led: -byte object <e(lose_fd)ubstring of ring of ++ exception with description ") in reads.>close_fd). /captured_stream.XXXXXXhdir("f threads. _fd_ == -1am.XXXXXX detect the number of threads.cve( substring of string of mp/captured_stream.XXXXXXads.threads.Xd_stream.XXXXXX -byte object <-1ads.am.XXXXXX(args->close_fd)ubstring of d: hich is: . mp/captured_stream.XXXXXXX-1 xception with description " <xception with description "ad_fd_ == -1t the number of threads.d)XXXXXailed:  exception with description "e number of threads.d: /captured_stream.XXXXXXs->close_fd)threads.ct <e number of threads.the number of threads.mp/captured_stream.XXXXXXeption with description "mp/captured_stream.XXXXXXream.XXXXXXetected tured_stream.XXXXXXted ) failed: ed: reads. ...) in d s.mp/captured_stream.XXXXXXstring of tured_stream.XXXXXXream.XXXXXX-1xception with description "L" failed: . -1d)d: t ... read_fd_ == -1Xected read_fd_ == -1d_stream.XXXXXXXXXetect the number of threads.XXX substring of ject <e object <hich is: ng of ng of e(02Xads.read_fd_ == -1..) in ("ads.. yte object <XXXXXled: am.XXXXXXring of e(ring of .XXXXXX) in s: t the number of threads.cve(.  mp/captured_stream.XXXXXXxecve(er of threads.tured_stream.XXXXXXstream.XXXXXX++ exception with description "rd -1etected ad_fd_ == -1: tured_stream.XXXXXXhich is: eption with description "led: f ) failed: 
_fd_ == -1aptured_stream.XXXXXXt failed: ream.XXXXXX is: ch is: reads.f threads.Xnumber of threads.= -1-1_fd_ == -1lose_fd)-byte object <L"xception with description " detect the number of threads.se(args->close_fd)r 
d_stream.XXXXXXreads.read_fd_ == -1ir("failed: 
read_fd_ == -1hdir("d_stream.XXXXXX ...) in Xng of ct <d: ected s.d: (args->close_fd) of threads.yte object <: .  == -1 of lose(args->close_fd)= -1mber of threads.led:  failed: (args->close_fd)se_fd)rhdir("ads.mp/captured_stream.XXXXXX <L"etect the number of threads. substring of  of threads. detect the number of threads.++ exception with description "s->close_fd)threads.XXXXXected object < exception with description ".XXXXXXhdir("hdir("_fd)...  detect the number of threads.mp/captured_stream.XXXXXXd tured_stream.XXXXXXrgs->close_fd)hdir(" number of threads. d_stream.XXXXXXxception with description "ads._fd_ == -1ads.ads.d_stream.XXXXXXng of not  ect the number of threads.xception with description "d_stream.XXXXXXse(args->close_fd)se_fd)eption with description "rgs->close_fd)rgs->close_fd)lose(args->close_fd)e number of threads.t the number of threads._fd)_fd_ == -1stream.XXXXXX_fd) of threads.ted se_fd)("f threads.xception with description " e number of threads.-byte object <rgs->close_fd)_fd)string of ads.led: ed: cve(ads./captured_stream.XXXXXX d: (args->close_fd)_fd)er of threads.xecve(
(args->close_fd)stream.XXXXXXstream.XXXXXXreads...) in -byte object <ect the number of threads.ring of ailed: aptured_stream.XXXXXXd_ == -1ct <Xed: X++ exception with description " detect the number of threads.ailed: ch is: ailed: mp/captured_stream.XXXXXXected reads. s: aptured_stream.XXXXXXect the number of threads.ject <. in eption with description "s->close_fd) detect the number of threads.ubstring of t  XXXXXthreads.XXXXX-1d threads. ...) in /tmp/captured_stream.XXXXXX(args->close_fd)XXXXXL"-1e number of threads.iled: ch is: xception with description "number of threads./captured_stream.XXXXXXubstring of  <mp/captured_stream.XXXXXXetect the number of threads.hich is: lose(args->close_fd) failed: aptured_stream.XXXXXXX. XXX..) in e number of threads.se(args->close_fd)_fd)>close_fd)Xd)Xf threads. of threads.xecve(read_fd_ == -1(args->close_fd)t e object <. failed: lose_fd)Xd)led: ream.XXXXXXrgs->close_fd)L"string of d_stream.XXXXXXxecve(/tmp/captured_stream.XXXXXX.XXXXXXt the number of threads.ed: ream.XXXXXXrgs->close_fd)ring of tured_stream.XXXXXXrled:  of s: f threads.threads.. hdir("threads.= -1eption with description "ted _fd_ == -1>close_fd)_fd)d ng of ) in am.XXXXXXd: ubstring of rgs->close_fd)se(args->close_fd). xecve(ng of d_ == -1read_fd_ == -1 (args->close_fd)threads.ct <f XXXd_stream.XXXXXXlose(args->close_fd)mber of threads.) failed:  of threads.("ch is: d_ == -1ted aptured_stream.XXXXXXled: s->close_fd)iled: _fd_ == -1d_stream.XXXXXXiled: not hich is: (args->close_fd)XXXXXs.e(yte object <
t the number of threads.aptured_stream.XXXXXXct <d)XXX. ads.in . t the number of threads.rct <ch is: ads.ject <s.  failed: red_stream.XXXXXXe object <d: aptured_stream.XXXXXX substring of  <XXXrred_stream.XXXXXXream.XXXXXXnot etect the number of threads.>close_fd) == -1s. <s.xecve(++ exception with description "ubstring of red_stream.XXXXXXin ir("(" ...) in se(args->close_fd)failed:  rgs->close_fd)ng of  ct <er of threads./tmp/captured_stream.XXXXXXeption with description "ected /captured_stream.XXXXXXXstream.XXXXXX
) in ng of  failed: /tmp/captured_stream.XXXXXX failed: s->close_fd)e object <lose_fd). ... yte object <XXXXX02Xad_fd_ == -1object <ch is: e number of threads.aptured_stream.XXXXXX-byte object <Xiled: se_fd)_fd_ == -1..) in t yte object <:  e number of threads.string of  <d). read_fd_ == -1ir("ubstring of  failed: ream.XXXXXX detect the number of threads.read_fd_ == -1ads.hdir("ring of >close_fd)ir("threads.ed: ads.cve( mp/captured_stream.XXXXXXread_fd_ == -1s.tured_stream.XXXXXX substring of L"etect the number of threads.lose_fd)red_stream.XXXXXXt the number of threads.cve(eption with description " r == -1++ exception with description " exception with description "s.) failed: er of threads.ject <the number of threads.ubstring of ir(" failed: am.XXXXXXtured_stream.XXXXXXXe(etected ++ exception with description " threads.hdir(" of ) failed: se(args->close_fd)se(args->close_fd)s.  substring of t 02Xream.XXXXXXad_fd_ == -1led:  substring of threads.Xected ailed: s.ring of ed: string of etect the number of threads.ailed: ct <d  is: hich is: e number of threads.rgs->close_fd)ject <ream.XXXXXXhich is: ir("
..) in xecve((args->close_fd)cve(>close_fd) detect the number of threads.red_stream.XXXXXXthreads.er of threads.++ exception with description "XXXd ected t the number of threads.ed:  ...) in d_ == -1 ubstring of d: Xtured_stream.XXXXXXads. red_stream.XXXXXXd: reads.er of threads.xecve(s.ed:  failed: ++ exception with description "se_fd)= -1>close_fd)) failed: e(xception with description "the number of threads.Xam.XXXXXX mber of threads.L"lose(args->close_fd) exception with description "_fd)s->close_fd) failed: Xected xception with description " detect the number of threads.d_stream.XXXXXXhich is: : f threads.ads.("s.lose_fd)threads. /captured_stream.XXXXXX("stream.XXXXXXe object <) failed: Xread_fd_ == -1in se_fd)/captured_stream.XXXXXXXam.XXXXXXmp/captured_stream.XXXXXXam.XXXXXXXXXrgs->close_fd)xecve(mp/captured_stream.XXXXXXreads.mp/captured_stream.XXXXXXL"-1 the number of threads.mp/captured_stream.XXXXXXXXXXX..) in ++ exception with description "er of threads.>close_fd)am.XXXXXXstream.XXXXXX of xecve(lose_fd)s: s.the number of threads.s: read_fd_ == -1ailed: iled: string of ng of ailed: reads. failed: failed: ads.lose(args->close_fd)number of threads.= -1e number of threads.f threads. <ected read_fd_ == -1_fd_ == -1s.XXXXXhdir("ream.XXXXXXads.ct <stream.XXXXXXetected L"++ exception with description ".XXXXXX...  of threads.XXXXXd: d: . ("number of threads.t string of rgs->close_fd)t etect the number of threads.) failed: ) in (args->close_fd)failed: ) in ream.XXXXXX substring of rin t 
lose(args->close_fd)d_ == -1ject <number of threads. == -1_fd)ct </tmp/captured_stream.XXXXXXrgs->close_fd)XXXXX /tmp/captured_stream.XXXXXXf L"er of threads. ) in  se(args->close_fd)reads....  failed: xception with description "etected ads.led: se(args->close_fd)lose_fd)
red_stream.XXXXXXred_stream.XXXXXXream.XXXXXXads.ch is: hdir("/captured_stream.XXXXXXer of threads.e number of threads.ted led: object <stream.XXXXXXstream.XXXXXX_fd)ring of  == -1tured_stream.XXXXXXct <>close_fd)red_stream.XXXXXXubstring of .XXXXXX < detect the number of threads.(args->close_fd)mber of threads.d: cve(
ad_fd_ == -1ads. : ) in  exception with description ") failed: cve(XXXXXject <>close_fd)ect the number of threads. substring of d: >close_fd)f tured_stream.XXXXXXd: r of threads.ct <r == -1 substring of ads..XXXXXXads. e number of threads.-1e object <-byte object < <lose_fd)("threads. == -1 failed: reads.ng of ected the number of threads.ir("-byte object <XXXXXXir("ailed: se_fd)Xd)ring of ng of 02Xch is: ("..) in ) in -1ng of xecve(d_stream.XXXXXXthreads.led: ct <read_fd_ == -1reads.read_fd_ == -1e number of threads.  of threads.in xecve(mber of threads.in tured_stream.XXXXXXe object <.XXXXXX <object <ch is: threads.e number of threads.am.XXXXXXhdir("rgs->close_fd)ct <reads.am.XXXXXXe object <am.XXXXXX detect the number of threads.ject <d_stream.XXXXXXmp/captured_stream.XXXXXXt Xthreads.mber of threads._fd_ == -1threads.read_fd_ == -1not (args->close_fd)L"... d xecve(number of threads. is: xecve(. rject < XXXXXads.d: ++ exception with description "am.XXXXXXnot mber of threads.ring of  == -1("ch is: string of ream.XXXXXXcve(mber of threads.d_ == -1lose_fd)ubstring of ected -1s: ected (" detect the number of threads. <etected etected  threads.
hich is: d: e number of threads. .XXXXXXt the number of threads.rred_stream.XXXXXXread_fd_ == -1red_stream.XXXXXXL"xception with description " XXXXX02Xin etected -1f ... /tmp/captured_stream.XXXXXXe number of threads.s.s->close_fd) ...) in ted ream.XXXXXX is: = -1hdir(" substring of ads.lose_fd) == -1s->close_fd)02X(args->close_fd) == -1-byte object <ch is: rmp/captured_stream.XXXXXXthreads.d ring of  failed:   == -1iled: eption with description "cve(mber of threads. of threads.
ect the number of threads.xecve(lose(args->close_fd)f threads.XXX/captured_stream.XXXXXX: e(f ed: _fd_ == -1threads.ubstring of object <d_stream.XXXXXXf = -1ailed: ed: rgs->close_fd)ubstring of ct <mp/captured_stream.XXXXXX/captured_stream.XXXXXX mber of threads.: ir("L"ad_fd_ == -1ng of /tmp/captured_stream.XXXXXXetect the number of threads.t failed: the number of threads.ir("s->close_fd)rgs->close_fd)>close_fd)t the number of threads.etect the number of threads. ...) in  exception with description "xception with description "..) in  of mp/captured_stream.XXXXXXred_stream.XXXXXXetected mp/captured_stream.XXXXXXetected ("aptured_stream.XXXXXX/tmp/captured_stream.XXXXXXaptured_stream.XXXXXXXXXXXads.led: ads.XXXhich is: ) failed: d_ == -1etect the number of threads.XXXXXxception with description "tured_stream.XXXXXXxecve(string of ..) in s. failed: er of threads.threads.lose_fd) is: ct <lose(args->close_fd)threads.) failed: ad_fd_ == -1 s.eption with description "ected reads.ubstring of stream.XXXXXXads.ch is: ) in f mp/captured_stream.XXXXXXads.not  of e object <e( of ct <) in f threads.
etected -byte object <= -1
ng of yte object <failed: -byte object <ads. e(lose(args->close_fd)f threads.reads.eption with description "_fd_ == -1se_fd)d_ == -1-1am.XXXXXX exception with description "read_fd_ == -1. etected threads.reads.ct <ted  of ads.ads. f threads. eption with description "ng of xception with description " mber of threads.string of s->close_fd)ailed: ) in number of threads.failed: 02X= -1("reads. == -1cve(t XXXXXtured_stream.XXXXXXcve(t ++ exception with description "(args->close_fd) failed: :  of threads.number of threads.= -1am.XXXXXX-byte object <f = -1-byte object <hdir("ected se_fd)cve(s.mber of threads.ch is: stream.XXXXXXnot stream.XXXXXXred_stream.XXXXXXring of  ...) in hdir("threads.read_fd_ == -1xception with description "02Xhich is: s.f mp/captured_stream.XXXXXXer of threads.d_ == -1not .XXXXXXt s:  is: d_stream.XXXXXXmber of threads.d xecve( == -1ir("..) in /tmp/captured_stream.XXXXXX= -1("the number of threads.the number of threads.ject < is: ... ads.lose_fd). ubstring of  ng of red_stream.XXXXXX. ubstring of s->close_fd)r_fd)lose_fd)in  detect the number of threads.xecve(ubstring of e(t the number of threads.ng of reads.-1d_ == -1..) in t the number of threads.led: -1f threads.d_stream.XXXXXXeption with description "..) in ads.object <cve(red_stream.XXXXXXeption with description ". yte object <XXXXX-1... xception with description " is: L"eption with description "ed: red_stream.XXXXXX02Xd_stream.XXXXXX ject < ...) in rthreads.am.XXXXXX is: led: d ng of aptured_stream.XXXXXX.XXXXXX/captured_stream.XXXXXXxecve(/captured_stream.XXXXXXL"  ...) in se_fd)ads.mp/captured_stream.XXXXXX) failed: t the number of threads. == -1_fd_ == -1threads.ect the number of threads.f stream.XXXXXXthreads. of threads.-1(args->close_fd)ream.XXXXXXd  ject <not string of t the number of threads.led: X
ected _fd)..) in 
d_stream.XXXXXXled: s: -1etect the number of threads.d_stream.XXXXXXam.XXXXXX tured_stream.XXXXXXthreads.ailed: /captured_stream.XXXXXXtured_stream.XXXXXXd: e object <mp/captured_stream.XXXXXXetected ir("xecve(xception with description "d_ == -1failed: XXXXX) failed: rgs->close_fd)ubstring of  substring of ream.XXXXXX02Xected ect the number of threads.t the number of threads.
reads.xecve(ected  <... XXXrgs->close_fd)object <d Xf threads.se(args->close_fd): t the number of threads.failed:  of ubstring of ring of -byte object <tured_stream.XXXXXX ...) in rgs->close_fd). d:  exception with description "d ted ++ exception with description "ir("ailed: f threads.red_stream.XXXXXXs.stream.XXXXXXse(args->close_fd)s.f xecve(yte object <ubstring of .  failed: Xer of threads.mber of threads.ng of . s:  ailed: xception with description " aptured_stream.XXXXXXd_ == -1reads.s->close_fd)number of threads.) failed: am.XXXXXXxecve(ject <ect the number of threads.XXXXX in ng of : -1ad_fd_ == -1ad_fd_ == -1
tured_stream.XXXXXXaptured_stream.XXXXXX of  s. detect the number of threads.led: /captured_stream.XXXXXXxecve(object <XXXXXeption with description "f /tmp/captured_stream.XXXXXXstream.XXXXXXse_fd)_fd_ == -1d_stream.XXXXXXhdir("f threads.stream.XXXXXX) failed: se(args->close_fd)hich is: ubstring of /tmp/captured_stream.XXXXXX...  exception with description "rgs->close_fd)s->close_fd)object <er of threads.mber of threads.mber of threads.xception with description "ted stream.XXXXXX-byte object <not ch is: d  exception with description "ch is: reads.xecve(XXX++ exception with description "reads.se(args->close_fd)e(stream.XXXXXXtured_stream.XXXXXXlose(args->close_fd)xecve(threads. d_stream.XXXXXXetect the number of threads. ...) in se_fd) failed: not  of threads.s._fd)X ject <xecve(in etected Xxception with description "threads.ng of _fd)er of threads.red_stream.XXXXXXread_fd_ == -1... ir("e object <led: xception with description ") in s->close_fd)ected ad_fd_ == -1ir("rgs->close_fd)ch is: d: etect the number of threads.number of threads. is: ... se(args->close_fd)s.d_stream.XXXXXX of threads.failed: ect the number of threads.s->close_fd) ) failed: ng of  is:  lose_fd)d_stream.XXXXXXd_stream.XXXXXXiled: lose(args->close_fd)am.XXXXXXam.XXXXXXd d_ == -1mber of threads.eption with description "etect the number of threads.e number of threads.not ubstring of tured_stream.XXXXXXhich is: cve(s.e number of threads.in ir(") failed:  of threads.ads.se(args->close_fd)ect the number of threads.-byte object <ubstring of lose(args->close_fd)= -1ads.("ream.XXXXXXe(se(args->close_fd)mp/captured_stream.XXXXXXt e number of threads.aptured_stream.XXXXXX... tured_stream.XXXXXXstring of tured_stream.XXXXXXed: ad_fd_ == -1mber of threads.ct <ad_fd_ == -1... ring of ring of lose(args->close_fd)e number of threads. <
ted 02XL" of se(args->close_fd) failed:  exception with description "e() in  of threads.ected ) in  ...) in er of threads.the number of threads.yte object < <.XXXXXXse(args->close_fd)yte object </captured_stream.XXXXXX substring of >close_fd)>close_fd)ad_fd_ == -1not rgs->close_fd)ng of XXXXX is: = -1tured_stream.XXXXXXse(args->close_fd)ng of lose_fd)ailed: ct <_fd)s->close_fd).XXXXXXstring of . e number of threads.("ch is:  exception with description "("/captured_stream.XXXXXX/captured_stream.XXXXXXs. substring of d_ == -1t ("led: ubstring of XXXXX of threads. is: ubstring of ) in e(ailed: Xd)s.d_ == -1 is: s->close_fd)XXXXXe number of threads.etected xecve(_fd_ == -1se(args->close_fd)(".XXXXXX: mp/captured_stream.XXXXXX substring of threads.e(xception with description " is: hdir("threads. of e object <ch is: /captured_stream.XXXXXX02Xd: ++ exception with description "XXXXXads.>close_fd) substring of aptured_stream.XXXXXXd: :  exception with description "d f string of se_fd) <d_stream.XXXXXXs: .XXXXXXL"e number of threads. of d:  ubstring of X
 of aptured_stream.XXXXXXd_ == -1s->close_fd)ch is: threads.d ect the number of threads.s.am.XXXXXXse(args->close_fd)xception with description "ch is: d:  is:  == -1s->close_fd)(": 
lose_fd)etected etect the number of threads. failed: ("XXXcve( == -1t the number of threads.lose(args->close_fd)led:  ...) in  of s: am.XXXXXXring of (" exception with description "mber of threads./captured_stream.XXXXXXad_fd_ == -1/tmp/captured_stream.XXXXXXch is: xecve(etected  is: /captured_stream.XXXXXXd)ted se_fd)/tmp/captured_stream.XXXXXXetected .XXXXXX) failed: ed: reads.d)rgs->close_fd)-1d)ring of ir("cve(e(... lose_fd)ad_fd_ == -1-byte object < d xecve(ng of ..) in f threads.t the number of threads.XXX) failed: ir("ed: er of threads.-1d_ == -1se_fd)d)d_ == -1..) in se(args->close_fd)f threads.the number of threads.  ...) in object <hdir(") failed: e(se(args->close_fd) == -1failed: t the number of threads.er of threads.f -1XXX-1d: ) failed: ream.XXXXXX02Xin string of mp/captured_stream.XXXXXXXXXXXtured_stream.XXXXXXreads. == -102Xs->close_fd)++ exception with description "XXXXXXthreads. not ch is:  failed:  of threads.se(args->close_fd)ring of e number of threads. == -1ad_fd_ == -1reads.. se_fd)ream.XXXXXX
se(args->close_fd)s: threads.d)er of threads.-byte object <ream.XXXXXX. retected _fd_ == -1("aptured_stream.XXXXXXect the number of threads. is:  substring of am.XXXXXXthreads._fd)_fd)/tmp/captured_stream.XXXXXXubstring of  == -1) failed: etected t  ...) in ++ exception with description "ect the number of threads.lose_fd). e object <. object <..) in _fd_ == -1xception with description " ir("xception with description "/captured_stream.XXXXXXs->close_fd)ng of etect the number of threads.threads.. XXXXXir("am.XXXXXXaptured_stream.XXXXXXir("/captured_stream.XXXXXX
ream.XXXXXXnumber of threads....   detect the number of threads.d_ == -1tured_stream.XXXXXXfailed: mp/captured_stream.XXXXXX failed: ected mber of threads.ad_fd_ == -1lose(args->close_fd)stream.XXXXXXin ailed: f  is: /captured_stream.XXXXXXed:  detect the number of threads.rgs->close_fd)Xhdir("xception with description "etected >close_fd)mber of threads.lose_fd) Xobject <ream.XXXXXX is: . . ch is: ad_fd_ == -1. reads.ected e object <object <lose(args->close_fd)lose_fd)number of threads.not mp/captured_stream.XXXXXXhdir(" of threads.s->close_fd).XXXXXXd not lose(args->close_fd) exception with description "reads.tured_stream.XXXXXXer of threads.X>close_fd)read_fd_ == -1xecve(_fd_ == -1e number of threads.f e( ring of t the number of threads.tured_stream.XXXXXX etect the number of threads.s..XXXXXXect the number of threads.ubstring of -1("threads. of  exception with description "/captured_stream.XXXXXXlose(args->close_fd).XXXXXX02Xobject <ads.= -1stream.XXXXXX(args->close_fd).XXXXXXnumber of threads.se_fd).XXXXXXd: ) failed: ch is: = -1 is: ed: t ed: .XXXXXXch is: ) in -1led: threads.t etected cve(d: threads.yte object <X XXX. read_fd_ == -1/tmp/captured_stream.XXXXXX failed: the number of threads.failed: ed: number of threads. of -byte object <threads.rgs->close_fd) exception with description "read_fd_ == -1rgs->close_fd)etected (args->close_fd)red_stream.XXXXXXin e(mber of threads.ring of  of threads.threads.>close_fd)
ect the number of threads.) failed: L"e object <ads.-byte object <f >close_fd)02Xs.... e number of threads.string of L"xception with description "read_fd_ == -1X of -1ct < == -1
++ exception with description "ream.XXXXXXin L" detect the number of threads..XXXXXXreads.hich is: ected Xected d: tured_stream.XXXXXXject <XXXXX>close_fd)read_fd_ == -1mp/captured_stream.XXXXXX) failed: t the number of threads. exception with description "ads.string of d_ == -1t -1in XXXnumber of threads.>close_fd)r..) in XXXXXyte object <  of f ring of reads.ad_fd_ == -1mber of threads.s->close_fd)("-1ted  failed: ch is: >close_fd)ct <XXXred_stream.XXXXXXs. substring of ream.XXXXXX t the number of threads.s->close_fd)++ exception with description "Xhich is: ad_fd_ == -1 exception with description "d_ == -1f threads.ring of rgs->close_fd)ng of etected ream.XXXXXXXXXXXir("(" exception with description " <led: ... rgs->close_fd) is: L"s.d d_ == -1er of threads.-1led: red_stream.XXXXXXiled: e object <d_stream.XXXXXX-byte object <hich is:  ch is: not hich is: ring of Xf threads.yte object <lose(args->close_fd)s->close_fd)ailed: xecve(s: e object <not  of threads.the number of threads.Xd: xecve(... -1 <. _fd_ == -1ring of ream.XXXXXXse(args->close_fd)X ...) in stream.XXXXXX of threads.failed: _fd_ == -1am.XXXXXX/captured_stream.XXXXXXXXXXX/tmp/captured_stream.XXXXXXnot mp/captured_stream.XXXXXXtured_stream.XXXXXXd_stream.XXXXXX failed: eption with description "ad_fd_ == -1 <er of threads.) failed:  of s.t the number of threads.ected ect the number of threads.eption with description ">close_fd)se_fd)failed: L"ubstring of hdir("-byte object <e object <reads.threads.>close_fd)) failed: ... f threads.se_fd)..) in  is: d_stream.XXXXXXream.XXXXXXcve(threads.d) failed:  substring of ... (args->close_fd)L"etected etected string of X...  ...) in ubstring of t .XXXXXXread_fd_ == -1ir("++ exception with description "d: hich is: e(mber of threads.yte object <ect the number of threads.e(iled: 
XXXXX-1ads.d: ch is: X("Xailed: reads.yte object <_fd)read_fd_ == -1read_fd_ == -1s.... .XXXXXXnot tured_stream.XXXXXX>close_fd)e(++ exception with description "= -1er of threads.eption with description "-byte object <eption with description "threads.s: -byte object <ct <eption with description "t ted  exception with description "(args->close_fd)d)ads.. ("d: ed: xecve(s->close_fd)red_stream.XXXXXXL"L"s: mp/captured_stream.XXXXXX-1in  <threads. detect the number of threads.ct <ject <Xe object <d_stream.XXXXXXailed: 
etected s. ...) in (args->close_fd) of threads.t the number of threads. ...) in f threads.er of threads.stream.XXXXXXxecve(led:  is: = -1se(args->close_fd)stream.XXXXXXd)yte object <(args->close_fd)s->close_fd)XXX. d: xception with description "led: f ) in t object <ng of number of threads.L"failed: ubstring of L"ected ir(" ... string of  of threads.("d)lose_fd) detect the number of threads.ted = -1threads.ring of d ) failed: L"ailed: _fd_ == -1ir(" substring of the number of threads.d_ == -1the number of threads.02XXhdir(": 
xception with description "XXX("X.XXXXXXe( of aptured_stream.XXXXXX
 failed: ted Xe(ct < exception with description "ect the number of threads./captured_stream.XXXXXXir("aptured_stream.XXXXXX failed: hich is: se_fd)d: lose(args->close_fd)s: xception with description " ...) in L"d_stream.XXXXXXted aptured_stream.XXXXXXiled: er of threads.ir("
ected ect the number of threads.-1(args->close_fd)read_fd_ == -1stream.XXXXXX= -1ring of s: iled: stream.XXXXXXject <s->close_fd)ubstring of s->close_fd)ream.XXXXXXrnumber of threads.tured_stream.XXXXXX..) in e number of threads.ect the number of threads.XXXd)failed: e number of threads.etect the number of threads./tmp/captured_stream.XXXXXXeption with description "se_fd)ubstring of  of threads.reads.d_stream.XXXXXXlose(args->close_fd)02Xailed: _fd_ == -1t . ... s.d_ == -1d_stream.XXXXXXe object <mber of threads.ected _fd)f d) ...) in object <XXXlose_fd)ch is: tured_stream.XXXXXX exception with description "am.XXXXXXs->close_fd)f  failed: t f threads. detect the number of threads.eption with description "/tmp/captured_stream.XXXXXXs: ..) in reads...) in t the number of threads. exception with description "s: ubstring of  <r..) in hich is: ect the number of threads.mp/captured_stream.XXXXXX-byte object < == -1threads.>close_fd)s.etect the number of threads.rgs->close_fd)= -1 of -1XXX detect the number of threads.++ exception with description "e object <in XXXXhich is: ir("read_fd_ == -1 ream.XXXXXX.XXXXXXyte object <ed: t the number of threads.ect the number of threads.lose(args->close_fd) s->close_fd)s.XXXXXng of ted s->close_fd)ads.ed: in ads.d_stream.XXXXXXs.ct <se(args->close_fd)er of threads.ch is: lose_fd)not red_stream.XXXXXXxecve(reads.>close_fd)string of yte object <in threads. substring of 
ected f threads.("the number of threads. failed:  e(ed: red_stream.XXXXXXs->close_fd)er of threads.xecve(>close_fd)XXXad_fd_ == -1stream.XXXXXXected  detect the number of threads.d_ == -1. ) failed: e object <se_fd)e(/captured_stream.XXXXXX substring of 
er of threads.stream.XXXXXXs->close_fd)string of e(XXXobject <d : mp/captured_stream.XXXXXXaptured_stream.XXXXXXreads.ct <am.XXXXXX of ("02Xin reads.iled: ch is: cve(d_stream.XXXXXXXXXXXstream.XXXXXXmber of threads.aptured_stream.XXXXXXd_stream.XXXXXX threads.) failed: d)ring of threads.ct <e number of threads.ailed: etected lose_fd)>close_fd)>close_fd)mber of threads.cve(d mp/captured_stream.XXXXXX++ exception with description ") failed: : hdir("Xect the number of threads.e object <d)= -1yte object <) failed: xception with description "reads.read_fd_ == -1ct <ream.XXXXXXailed: -1= -1the number of threads.d d: string of ) in threads.ch is: number of threads.e object <hdir("ject <-byte object <ct <mber of threads.string of X(args->close_fd)/captured_stream.XXXXXX.XXXXXX_fd)d)e number of threads.red_stream.XXXXXX <se(args->close_fd) detect the number of threads.XXXXX++ exception with description " <number of threads.am.XXXXXXream.XXXXXXreads.ed: ected reads.ch is: ng of ) failed: 02Xfailed: -byte object <d: cve(ailed: ct <L"se_fd)>close_fd).XXXXXXailed: f threads.lose_fd).XXXXXX detect the number of threads.etected ++ exception with description "t the number of threads.Xcve(_fd)ected t the number of threads. ...) in _fd_ == -1s.ject <threads.s: _fd) is: read_fd_ == -1e object <e(mber of threads.f ct <threads.cve(
led: : tured_stream.XXXXXXetect the number of threads.ads.t ir("e object <object <string of  is: _fd_ == -1s: ) in ed: threads.d_stream.XXXXXXs.++ exception with description "... ... d)ads.d)) in  of threads.etected  (" == -1
("
/captured_stream.XXXXXXX